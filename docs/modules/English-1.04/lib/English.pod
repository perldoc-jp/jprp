=encoding utf8

=head1 NAME

=begin original

English - use nice English (or awk) names for ugly punctuation variables

=end original

English - わかりやすい英語の (または awkの) 名前を、わかりにくい記号の変数に使う

=head1 SYNOPSIS

    use English qw( -no_match_vars ) ;  # Avoids regex performance penalty
    use English;
    ...
    if ($ERRNO =~ /denied/) { ... }

=head1 DESCRIPTION

=begin original

This module provides aliases for the built-in variables whose
names no one seems to like to read.  Variables with side-effects
which get triggered just by accessing them (like $0) will still 
be affected.

=end original

このモジュールは誰も読みたくないような組み込み変数にエイリアスを提供します。
($0のように)アクセスすることでトリガーとなる、副作用をもつ変数も
影響を受けることになります。

=begin original

For those variables that have an B<awk> version, both long
and short English alternatives are provided.  For example, 
the C<$/> variable can be referred to either $RS or 
$INPUT_RECORD_SEPARATOR if you are using the English module.

=end original

B<awk> バージョンの名前の変数は、短いものと長いものの両方の代替を
提供しています。例えば、
C<$/>変数は $RS でも $INPUT_RECORD_SEPARATOR でも、
Englishモジュールを使えば、参照できます。


=begin original

See L<perlvar> for a complete list of these.

=end original

完全なリストは L<perlvar> を見て下さい。

=head1 パフォーマンス

=begin original

This module can provoke sizeable inefficiencies for regular expressions,
due to unfortunate implementation details.  If performance matters in
your application and you don't need $PREMATCH, $MATCH, or $POSTMATCH,
try doing

=end original

このモジュールは、不幸な実装の詳細のために、正規表現において、
かなり非効率になる可能性があります。あなたのアプリケーションで
パフォーマンスに問題が生じ、$PREMATCH、$MATCH 、 $POSTMATCHを使う必要がないならば、
以下を試して下さい

   use English qw( -no_match_vars ) ;

=begin original

.  B<It is especially important to do this in modules to avoid penalizing
all applications which use them.>

=end original

.  B<前述の変数を使う全てのアプリケーションへのペナルティーを避けるためには、
モジュール内でこれを使うことは特に重要です>

=cut

