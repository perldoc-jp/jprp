
=encoding euc-jp

=head1 NAME

=begin original

perldelta - what is new for perl v5.30.0

=end original

perl5300delta - perl v5.30.0 での変更点

=head1 DESCRIPTION

=begin original

This document describes differences between the 5.28.0 release and the 5.30.0
release.

=end original

この文書は 5.28.0 リリースと 5.30.0 リリースの変更点を記述しています。

=begin original

If you are upgrading from an earlier release such as 5.26.0, first read
L<perl5280delta>, which describes differences between 5.26.0 and 5.28.0.

=end original

5.26.0 のような以前のリリースから更新する場合は、まず 5.26.0 と
5.28.0 の違いについて記述している L<perl5280delta> を読んでください。

=head1 Notice

(注意)

=begin original

sv_utf8_(downgrade|decode) are no longer marked as experimental.
L<[perl #133788]|https://rt.perl.org/Ticket/Display.html?id=133788>.

=end original

sv_utf8_(downgrade|decode) はもはや実験的ではなくなりました。
L<[perl #133788]|https://rt.perl.org/Ticket/Display.html?id=133788>.

=head1 Core Enhancements

(コアの拡張)

=head2 Limited variable length lookbehind in regular expression pattern matching is now experimentally supported

(正規表現パターンでの制限された変数長の後方参照に実験的に対応しました)

=begin original

Using a lookbehind assertion (like C<(?<=foo?)> or C<(?<!ba{1,9}r)> previously
would generate an error and refuse to compile.  Now it compiles (if the
maximum lookbehind is at most 255 characters), but raises a warning in
the new C<experimental::vlb> warnings category.  This is to caution you
that the precise behavior is subject to change based on feedback from
use in the field.

=end original

(C<(?<=foo?)> や C<(?<!ba{1,9}r)> のような) 後方参照アサートを使うと、
以前はエラーが発生してコンパイルを拒否していました。
これは (最大後方参照が最大 255 文字なら) コンパイルはされますが、
新しい C<experimental::vlb> 警告カテゴリの警告が発生するようになりました。
これは、正確な振る舞いは現場でのフィードバックを基にして変更される
予定であることを注意するものです。

=begin original

See L<perlre/(?<=pattern)> and L<perlre/(?<!pattern)>.

=end original

L<perlre/(?<=pattern)> and L<perlre/(?<!pattern)> を参照してください。

=head2 The upper limit C<"n"> specifiable in a regular expression quantifier of the form C<"{m,n}"> has been doubled to 65534

(C<"{m,n}"> 形式の正規表現量指定子の C<"n"> の上限が 65534 に倍増しました)

=begin original

The meaning of an unbounded upper quantifier C<"{m,}"> remains unchanged.
It matches 2**31 - 1 times on most platforms, and more on ones where a C
language short variable is more than 4 bytes long.

=end original

上限指定なし量指定子 C<"{m,}"> の意味は変わりません。
これはほとんどのプラットフォームで 2**31 - 1 回マッチングし、
C 言語の short 変数の長さが 4 バイトより長いプラットフォームではもっと
多くなります。

=head2 Unicode 12.1 is supported

(Unicode 12.1 に対応しました)

=begin original

Because of a change in Unicode release cycles, Perl jumps from Unicode
10.0 in Perl 5.28 to Unicode 12.1 in Perl 5.30.

=end original

Unicode のリリースサイクルの変更により、Perl は Perl 5.28 の
Unicode 10.0 から Perl 5.30 の Unicode 12.1 にジャンプします。

=begin original

For details on the Unicode changes, see
L<https://www.unicode.org/versions/Unicode11.0.0/> for 11.0;
L<https://www.unicode.org/versions/Unicode12.0.0/> for 12.0;
and
L<https://www.unicode.org/versions/Unicode12.1.0/> for 12.1.
(Unicode 12.1 differs from 12.0 only in the addition of a single
character, that for the new Japanese era name.)

=end original

Unicode の変更に関する詳細については、
11.0 は L<https://www.unicode.org/versions/Unicode11.0.0/> を、
12.0 は L<https://www.unicode.org/versions/Unicode12.0.0/> を、
12.1 は L<https://www.unicode.org/versions/Unicode12.1.0/> を
参照してください。
(Unicode 12.1 の 12.0 との違いは、新しい日本の元号を表す一つの文字が
追加されただけです。)

=begin original

The Word_Break property, as in past Perl releases, remains tailored to
behave more in line with expectations of Perl users.  This means that
sequential runs of horizontal white space characters are not broken
apart, but kept as a single run.  Unicode 11 changed from past versions
to be more in line with Perl, but it left several white space characters
as causing breaks: TAB, NO BREAK SPACE, and FIGURE SPACE (U+2007).  We
have decided to continue to use the previous Perl tailoring with regards
to these.

=end original

Word_Break 特性は、過去の Perl リリースと同様、Perl ユーザーの
推測とより一致するように振る舞いを調整したままです。
これは、引き続く水平空白文字の列は分割されず、一続きのままに
なるということです。
Unicode 11 はより Perl に一致するように過去のバージョンから
変更されましたが、まだいくつかの空白文字が分割を引き起こします:
TAB, NO BREAK SPACE, FIGURE SPACE (U+2007)。
私たちはこれらに対する以前の Perl の調整を続けることにしました。

=head2 Wildcards in Unicode property value specifications are now partially supported

(Unicode 特性値指定のワイルドカードに部分的に対応しました)

=begin original

You can now do something like this in a regular expression pattern

=end original

正規表現パターン中で次のようなことができるようになりました:

 qr! \p{nv= /(?x) \A [0-5] \z / }!

=begin original

which matches all Unicode code points whose numeric value is
between 0 and 5 inclusive.  So, it could match the Thai or Bengali
digits whose numeric values are 0, 1, 2, 3, 4, or 5.

=end original

これは数値が 0 から 5 であるすべての Unicode 符号位置にマッチングします。
従って、これはタイ語数字やベンガル語数字で 0, 1, 2, 3, 4, 5 を意味する
ものにマッチングします。

=begin original

This marks another step in implementing the regular expression features
the Unicode Consortium suggests.

=end original

これは Unicode Consortium が提案している正規表現機能を実装するための
さらなる一歩となります。

=begin original

Most properties are supported, with the remainder planned for 5.32.
Details are in L<perlunicode/Wildcards in Property Values>.

=end original

ほとんどの特性に対応していて、残りは 5.32 に計画されています。
詳細は L<perlunicode/Wildcards in Property Values> にあります。

=head2 qr'\N{name}' is now supported

(qr'\N{name}' に対応しました)

=begin original

Previously it was an error to evaluate a named character C<\N{...}>
within a single quoted regular expression pattern (whose evaluation is
deferred from the normal place).  This restriction is now removed.

=end original

以前は、(評価が通常より遅延する) シングルクォート正規表現パターンの中の
名前付き文字 C<\N{...}> を評価するとエラーになっていました。
この制限は取り除かれました。

=head2 Turkic UTF-8 locales are now seamlessly supported

(トルコ語の UTF-8 ロケールにシームレスに対応するようになりました)

=begin original

Turkic languages have different casing rules than other languages for
the characters C<"i"> and C<"I">.  The uppercase of C<"i"> is LATIN
CAPITAL LETTER I WITH DOT ABOVE (U+0130); and the lowercase of C<"I"> is LATIN
SMALL LETTER DOTLESS I (U+0131).  Unicode furnishes alternate casing
rules for use with Turkic languages.  Previously, Perl ignored these,
but now, it uses them when it detects that it is operating under a
Turkic UTF-8 locale.

=end original

トルコ語は C<"i"> と C<"I"> のに関してほかの言語と異なる大文字小文字変換規則を
持ちます。
C<"i"> の大文字は LATIN CAPITAL LETTER I WITH DOT ABOVE (U+0130) です;
そして C<"I"> の小文字は LATIN SMALL LETTER DOTLESS I (U+0131) です。
Unicode はトルコ語で使うための代替大文字小文字変換規則を提供しています。
以前は、Perl はこれらを無視していましたが、トルコ語 UTF-8 ロケールを
検出したときにはこれを使うようになりました。

=head2 It is now possible to compile perl to always use thread-safe locale operations.

(常にスレッドセーフなロケール操作を使うように perl をコンパイルできるようになりました)

=begin original

Previously, these calls were only used when the perl was compiled to be
multi-threaded.  To always enable them, add

=end original

以前は、これらの呼び出しは perl がマルチスレッドでコンパイルされている
場合にのみ使われていました。
これらを常に有効にするには、

 -Accflags='-DUSE_THREAD_SAFE_LOCALE'

=begin original

to your F<Configure> flags.

=end original

を F<Configure> フラグに追加してください。

=head2 Eliminate opASSIGN macro usage from core

(opASSIGN をコアで使わなくなりました)

=begin original

This macro is still defined but no longer used in core

=end original

このマクロはまだ定義されていますがもはやコアでは使われていません。

=head2 C<-Drv> now means something on C<-DDEBUGGING> builds

(C<-Drv> は C<-DDEBUGGING> ビルドで意味を持つようになりました)

=begin original

Now, adding the verbose flag (C<-Dv>) to the C<-Dr> flag turns on all
possible regular expression debugging.

=end original

C<-Dr> フラグに饒舌フラグ (C<-Dv>) を追加すると、すべての正規表現デバッグが
有効になるようになりました。

=head1 Incompatible Changes

(互換性のない変更)

=head2 Assigning non-zero to C<$[> is fatal

(C<$[> への非ゼロの代入は致命的エラーになりました)

=begin original

Setting L<< C<$[>|perlvar/$[ >> to a non-zero value has been deprecated since
Perl 5.12 and now throws a fatal error.
See L<<< perldeprecation/Assigning non-zero to C<< $[ >> is fatal >>>.

=end original

L<< C<$[>|perlvar/$[ >> を非 0 にするのは Perl 5.12 から廃止予定でしたが、
これは致命的エラーを起こすようになりました。
L<<< perldeprecation/Assigning non-zero to C<< $[ >> is fatal >>> を
参照してください。

=head2 Delimiters must now be graphemes

(区切り文字は書記素でなければならなくなりました)

=begin original

See L<perldeprecation/Use of unassigned code point or non-standalone grapheme
for a delimiter.>

=end original

L<perldeprecation/Use of unassigned code point or non-standalone grapheme
for a delimiter.> を参照してください。

=head2 Some formerly deprecated uses of an unescaped left brace C<"{"> in
regular expression patterns are now illegal

(以前は廃止予定だった一部の正規表現パターン中のエスケープなしの左中かっこ C<"{"> は不正になりました)

=begin original

But to avoid breaking code unnecessarily, most instances that issued a
deprecation warning, remain legal and now have a non-deprecation warning
raised.  See L<perldeprecation/Unescaped left braces in regular expressions>.

=end original

しかし不必要にコードを破壊するのを避けるために、
廃止予定警告が出ていたほとんどの場合では、正当なままで残り、
非廃止予定警告が出るようになりました。
L<perldeprecation/Unescaped left braces in regular expressions> を
参照してください。

=head2 Previously deprecated sysread()/syswrite() on :utf8 handles is now fatal

(以前は廃止予定だった :utf8 ハンドルでの sysread()/syswrite() は致命的エラーになりました)

=begin original

Calling sysread(), syswrite(), send() or recv() on a C<:utf8> handle,
whether applied explicitly or implicitly, is now fatal.  This was
deprecated in perl 5.24.

=end original

C<:utf8> ハンドルでの sysread(), syswrite(), send(), recv() の呼び出しは、
明示的であれ暗黙的であれ、致命的エラーになりました。
これは perl 5.24 で廃止予定になっていました。

=begin original

There were two problems with calling these functions on C<:utf8>
handles:

=end original

これらを C<:utf8> ハンドルで呼び出すことには二つの問題がありました:

=over

=item *

=begin original

All four functions only paid attention to the C<:utf8> flag.  Other
layers were completely ignored, so a handle with
C<:encoding(UTF-16LE)> layer would be treated as UTF-8.  Other layers,
such as compression are completely ignored with or without the
C<:utf8> flag.

=end original

四つ全ての関数は C<:utf8> フラグにしか注意を払いません。
その他の層は完全に無視されるので、
C<:encoding(UTF-16LE)> 層のハンドルは UTF-8 として扱われます。
圧縮のようなその他の層は、C<:utf8> フラグのありなしに関わらず
完全に無視されます。

=item *

=begin original

sysread() and recv() would read from the handle, skipping any
validation by the layers, and do no validation of their own.  This
could lead to invalidly encoded perl scalars.

=end original

sysread() と recv() はハンドルから読み込み、層による検証を飛ばし、
独自の検証を行いません。
これは不正にエンコードされた perl スカラを引き起こすことがあります。

=back

L<[perl #125760]|https://rt.perl.org/Ticket/Display.html?id=125760>.

=head2 my() in false conditional prohibited

(偽条件での my() は禁止されました)

=begin original

Declarations such as C<my $x if 0> are no longer permitted.

=end original

C<my $x if 0> のような宣言はもはや許されません。

L<[perl #133543]|https://rt.perl.org/Ticket/Display.html?id=133543>.

=head2 Fatalize $* and $#

($* と $# は致命的エラーになりました)

=begin original

These special variables, long deprecated, now throw exceptions when used.

=end original

これらの特殊変数は、長い間廃止予定でしたが、使うと例外が
起こるようになりました。

L<[perl #133583]|https://rt.perl.org/Ticket/Display.html?id=133583>.

=head2 Fatalize unqualified use of dump()

(修飾されない dump() の使用は致命的エラーになりました)

=begin original

The C<dump()> function, long discouraged, may no longer be used unless it is
fully qualified, I<i.e.>, C<CORE::dump()>.

=end original

C<dump()> 関数は、長い間非推奨でしたが、
C<CORE::dump()> のように完全修飾しない限り使えなくなりました。

L<[perl #133584]|https://rt.perl.org/Ticket/Display.html?id=133584>.

=head2 Remove File::Glob::glob()

(File::Glob::glob() は削除されました)

=begin original

The C<File::Glob::glob()> function, long deprecated, has been removed and now
throws an exception which advises use of C<File::Glob::bsd_glob()> instead.

=end original

C<File::Glob::glob()> 関数は、長い間廃止予定でしたが、今回削除され、
代わりに C<File::Glob::bsd_glob()> を使うように助言する
例外が発生するようになりました。

L<[perl #133586]|https://rt.perl.org/Ticket/Display.html?id=133586>.

=head2 C<pack()> no longer can return malformed UTF-8

(C<pack()> はもはや不正な UTF-8 を返さなくなりました)

=begin original

It croaks if it would otherwise return a UTF-8 string that contains
malformed UTF-8.  This protects against potential security threats.  This
is considered a bug fix as well.
L<[perl #131642]|https://rt.perl.org/Ticket/Display.html?id=131642>.

=end original

UTF-8 文字列を返すべきところで不正な UTF-8 を含んでいる場合、
croak します。
これはセキュリティ上の脅威の可能性から保護します。
これはバグ修正とも考えられます。
L<[perl #131642]|https://rt.perl.org/Ticket/Display.html?id=131642>.

=head2 Any set of digits in the Common script are legal in a script run of another script

(Common 用字のどの数字集合も他の用字の用字並びとして妥当)

=begin original

There are several sets of digits in the Common script.  C<[0-9]> is the
most familiar.  But there are also C<[\x{FF10}-\x{FF19}]> (FULLWIDTH
DIGIT ZERO - FULLWIDTH DIGIT NINE), and several sets for use in
mathematical notation, such as the MATHEMATICAL DOUBLE-STRUCK DIGITs.
Any of these sets should be able to appear in script runs of, say,
Greek.  But the design of 5.30 overlooked all but the ASCII digits
C<[0-9]>, so the design was flawed.  This has been fixed, so is both a
bug fix and an incompatibility.
L<[perl #133547]|https://rt.perl.org/Ticket/Display.html?id=133547>.

=end original

Common 用字にはいくつかの数字の集合があります。
C<[0-9]> は最も親しまれているものです。
しかし C<[\x{FF10}-\x{FF19}]> (FULLWIDTH DIGIT ZERO -
FULLWIDTH DIGIT NINE) もあり、また MATHEMATICAL DOUBLE-STRUCK DIGIT のような
数学記法のためのいくつかの集合があります。
これらの集合のいずれも、たとえばギリシャ語の用字並びに現れることが出来ます。
しかし 5.30 の設計は ASCII 数字 C<[0-9]> 以外の全てを見落としており、
設計には欠陥がありました。
これは修正され、バグ修正と非互換性の両方をもちます。
L<[perl #133547]|https://rt.perl.org/Ticket/Display.html?id=133547>.

=begin original

All digits in a run still have to come from the same set of ten digits.

=end original

ある並びの中の全ての数字は同じ集合の 10 の数字である必要があるのは
そのままです。

=head2 JSON::PP enables allow_nonref by default

(JSON::PP はデフォルトで allow_nonref が有効になりました)

=begin original

As JSON::XS 4.0 changed its policy and enabled allow_nonref
by default, JSON::PP also enabled allow_nonref by default.

=end original

JSON::XS 4.0 はポリシーを変更してデフォルトで allow_nonref が
有効になったので、JSON::PP もデフォルトで allow_nonref を
有効にするようになりました。

=head1 Deprecations

(廃止予定)

=head2 In XS code, use of various macros dealing with UTF-8.

(XS コードの中での、UTF-8 を扱う様々なマクロ)

=begin original

This deprecation was scheduled to become fatal in 5.30, but has been
delayed to 5.32 due to problems that showed up with some CPAN modules.
For details of what's affected, see L<perldeprecation|
perldeprecation/In XS code, use of various macros dealing with UTF-8.>.

=end original

この廃止予定は 5.30 で致命的エラーになる予定でしたが、
一部の CPAN モジュールで判明した問題により 5.32 に延期されました。
何が影響を受けるか任官する詳細については、
L<perldeprecation|
perldeprecation/In XS code, use of various macros dealing with UTF-8.> を
参照してください。

=head1 Performance Enhancements

(性能改善)

=over 4

=item *

=begin original

Translating from UTF-8 into the code point it represents now is done via a
deterministic finite automaton, speeding it up.  As a typical example,
C<ord("\x7fff")> now requires 12% fewer instructions than before.  The
performance of checking that a sequence of bytes is valid UTF-8 is similarly
improved, again by using a DFA.

=end original

UTF-8 からそれを表現する符号位置への変換は、
決定性有限オートマトンで行われるようになり、高速化しました。
典型的な例として、C<ord("\x7fff")> が必要な時間は以前より
12% 少なくなりました。
バイト列が正当な UTF-8 かをチェックするときの性能も、再び DFA を使うことで
同様に改善しました。

=item *

=begin original

Eliminate recursion from finalize_op().
L<[perl #108276]|https://rt.perl.org/Ticket/Display.html?id=108276>.

=end original

finalize_op() からの再帰の除去。
L<[perl #108276]|https://rt.perl.org/Ticket/Display.html?id=108276>.

=item *

=begin original

A handful of small optimizations related to character folding
and character classes in regular expressions.

=end original

文字畳み込みと正規表現の中の文字クラスに関連する少量の小さい最適化。

=item *

=begin original

Optimization of C<IV> to C<UV> conversions.
L<[perl #133677]|https://rt.perl.org/Ticket/Display.html?id=133677>.

=end original

C<IV> から C<UV> への変換が最適化されました。
L<[perl #133677]|https://rt.perl.org/Ticket/Display.html?id=133677>.

=item *

=begin original

Speed up of the integer stringification algorithm by processing
two digits at a time instead of one.
L<[perl #133691]|https://rt.perl.org/Ticket/Display.html?id=133691>.

=end original

整数の文字列化アルゴリズムは、一桁ずつではなく二桁ずつ処理することで
高速化しました。
L<[perl #133691]|https://rt.perl.org/Ticket/Display.html?id=133691>.

=item *

=begin original

Improvements based on LGTM analysis and recommendation.
(L<https://lgtm.com/projects/g/Perl/perl5/alerts/?mode=tree>). 
L<[perl #133686]|https://rt.perl.org/Ticket/Display.html?id=133686>.
L<[perl #133699]|https://rt.perl.org/Ticket/Display.html?id=133699>.

=end original

LGTM による解析と推奨を基にした改善を行いました。
(L<https://lgtm.com/projects/g/Perl/perl5/alerts/?mode=tree>). 
L<[perl #133686]|https://rt.perl.org/Ticket/Display.html?id=133686>.
L<[perl #133699]|https://rt.perl.org/Ticket/Display.html?id=133699>.

=item *

=begin original

Code optimizations in F<regcomp.c>, F<regcomp.h>, F<regexec.c>.

=end original

F<regcomp.c>, F<regcomp.h>, F<regexec.c> でのコードが最適化されました。

=item *

=begin original

Regular expression pattern matching of things like C<qr/[^I<a>]/> is
significantly sped up, where I<a> is any ASCII character.  Other classes
can get this speed up, but which ones is complicated and depends on the
underlying bit patterns of those characters, so differs between ASCII
and EBCDIC platforms, but all case pairs, like C<qr/[Gg]/> are included,
as is C<[^01]>.

=end original

C<qr/[^I<a>]/> のようなものにマッチングする正規表現パターンは、
I<a> が任意の ASCII 文字のときにかなり高速化しました。
その他のクラスもこの高速化の恩恵を受けることがありますが、
しかしこれは複雑でそれぞれの文字のビットパターンに依存しているので、
ASCII と EBCDIC プラットフォームで異なりますが、
C<qr/[Gg]/> のような全ての大文字小文字の組は含まれ、
C<[^01]> と同様です。

=back

=head1 Modules and Pragmata

(モジュールとプラグマ)

=head2 Updated Modules and Pragmata

(更新されたモジュールとプラグマ)

=over 4

=item *

=begin original

L<Archive::Tar> has been upgraded from version 2.30 to 2.32.

=end original

L<Archive::Tar> はバージョン 2.30 から 2.32 に更新されました。

=item *

=begin original

L<B> has been upgraded from version 1.74 to 1.76.

=end original

L<B> はバージョン 1.74 から 1.76 に更新されました。

=item *

=begin original

L<B::Concise> has been upgraded from version 1.003 to 1.004.

=end original

L<B::Concise> はバージョン 1.003 から 1.004 に更新されました。

=item *

=begin original

L<B::Deparse> has been upgraded from version 1.48 to 1.49.

=end original

L<B::Deparse> はバージョン 1.48 から 1.49 に更新されました。

=item *

=begin original

L<bignum> has been upgraded from version 0.49 to 0.51.

=end original

L<bignum> はバージョン 0.49 から 0.51 に更新されました。

=item *

=begin original

L<bytes> has been upgraded from version 1.06 to 1.07.

=end original

L<bytes> はバージョン 1.06 から 1.07 に更新されました。

=item *

=begin original

L<Carp> has been upgraded from version 1.38 to 1.50

=end original

L<Carp> はバージョン 1.38 から 1.5 に更新されました。

=item *

=begin original

L<Compress::Raw::Bzip2> has been upgraded from version 2.074 to 2.084.

=end original

L<Compress::Raw::Bzip2> はバージョン 2.074 から 2.084 に更新されました。

=item *

=begin original

L<Compress::Raw::Zlib> has been upgraded from version 2.076 to 2.084.

=end original

L<Compress::Raw::Zlib> はバージョン 2.076 から 2.084 に更新されました。

=item *

=begin original

L<Config::Extensions> has been upgraded from version 0.02 to 0.03.

=end original

L<Config::Extensions> はバージョン 0.02 から 0.03 に更新されました。

=item *

=begin original

L<Config::Perl::V>. has been upgraded from version 0.29 to 0.32. This was due
to a new configuration variable that has influence on binary compatibility:
C<USE_THREAD_SAFE_LOCALE>.

=end original

L<Config::Perl::V> はバージョン 0.29 から 0.32 に更新されました。
これは、バイナリ互換性に影響を与える新しい設定変数
C<USE_THREAD_SAFE_LOCALE> によるものです。

=item *

=begin original

L<CPAN> has been upgraded from version 2.20 to 2.22.

=end original

L<CPAN> はバージョン 2.20 から 2.22 に更新されました。

=item *

=begin original

L<Data::Dumper> has been upgraded from version 2.170 to 2.174

=end original

L<Data::Dumper> はバージョン 2.170 から 2.17 に更新されました。

=begin original

L<Data::Dumper> now avoids leaking when C<croak>ing.

=end original

L<Data::Dumper> は C<croak> したときにリークしなくなりました。

=item *

=begin original

L<DB_File> has been upgraded from version 1.840 to 1.843.

=end original

L<DB_File> はバージョン 1.840 から 1.843 に更新されました。

=item *

=begin original

L<deprecate> has been upgraded from version 0.03 to 0.04.

=end original

L<deprecate> はバージョン 0.03 から 0.04 に更新されました。

=item *

=begin original

L<Devel::Peek> has been upgraded from version 1.27 to 1.28.

=end original

L<Devel::Peek> はバージョン 1.27 から 1.28 に更新されました。

=item *

=begin original

L<Devel::PPPort> has been upgraded from version 3.40 to 3.52.

=end original

L<Devel::PPPort> はバージョン 3.40 から 3.52 に更新されました。

=item *

=begin original

L<Digest::SHA> has been upgraded from version 6.01 to 6.02.

=end original

L<Digest::SHA> はバージョン 6.01 から 6.02 に更新されました。

=item *

=begin original

L<Encode> has been upgraded from version 2.97 to 3.01.

=end original

L<Encode> はバージョン 2.97 から 3.01 に更新されました。

=item *

=begin original

L<Errno> has been upgraded from version 1.29 to 1.30.

=end original

L<Errno> はバージョン 1.29 から 1.30 に更新されました。

=item *

=begin original

L<experimental> has been upgraded from version 0.019 to 0.020.

=end original

L<experimental> はバージョン 0.019 から 0.020 に更新されました。

=item *

=begin original

L<ExtUtils::CBuilder> has been upgraded from version 0.280230 to 0.280231.

=end original

L<ExtUtils::CBuilder> はバージョン 0.280230 から 0.280231 に更新されました。

=item *

=begin original

L<ExtUtils::Manifest> has been upgraded from version 1.70 to 1.72.

=end original

L<ExtUtils::Manifest> はバージョン 1.70 から 1.72 に更新されました。

=item *

=begin original

L<ExtUtils::Miniperl> has been upgraded from version 1.08 to 1.09.

=end original

L<ExtUtils::Miniperl> はバージョン 1.08 から 1.09 に更新されました。

=item *

=begin original

L<ExtUtils::ParseXS> has been upgraded from version 3.39 to 3.40.
C<OUTLIST> parameters are no longer incorrectly included in the
automatically generated function prototype.
L<[perl #133654]|https://rt.perl.org/Ticket/Display.html?id=133654>.

=end original

L<ExtUtils::ParseXS> はバージョン 3.39 から 3.40 に更新されました。
C<OUTLIST> が誤って自動的に生成された関数プロトタイプに含まれていましたが、
もはや含まれなくなりました。
L<[perl #133654]|https://rt.perl.org/Ticket/Display.html?id=133654>.

=item *

=begin original

L<feature> has been upgraded from version 1.52 to 1.54.

=end original

L<feature> はバージョン 1.52 から 1.54 に更新されました。

=item *

=begin original

L<File::Copy> has been upgraded from version 2.33 to 2.34.

=end original

L<File::Copy> はバージョン 2.33 から 2.34 に更新されました。

=item *

=begin original

L<File::Find> has been upgraded from version 1.34 to 1.36.

=end original

L<File::Find> はバージョン 1.34 から 1.36 に更新されました。

=begin original

C<$File::Find::dont_use_nlink> now defaults to 1 on all
platforms.
L<[perl #133673]|https://rt.perl.org/Ticket/Display.html?id=133673>.

=end original

C<$File::Find::dont_use_nlink> はすべてのプラットフォームでデフォルトが
1 になりました。
L<[perl #133673]|https://rt.perl.org/Ticket/Display.html?id=133673>.

=begin original

Variables C<< $Is_Win32 >> and C<< $Is_VMS >> are being initialized.

=end original

変数 C<< $Is_Win32 >> と C<< $Is_VMS >> が初期化されるようになりました。

=item *

=begin original

L<File::Glob> has been upgraded from version 1.31 to 1.32.

=end original

L<File::Glob> はバージョン 1.31 から 1.32 に更新されました。

=item *

=begin original

L<File::Path> has been upgraded from version 2.15 to 2.16.

=end original

L<File::Path> はバージョン 2.15 から 2.16 に更新されました。

=item *

=begin original

L<File::Spec> has been upgraded from version 3.74 to 3.78.

=end original

L<File::Spec> はバージョン 3.74 から 3.78 に更新されました。

=begin original

Silence L<Cwd> warning on Android builds if C<targetsh> is not defined.

=end original

Android ビルドで C<targetsh> が定義されていないときの
L<Cwd> の警告が出なくなりました。

=item *

=begin original

L<File::Temp> has been upgraded from version 0.2304 to 0.2309.

=end original

L<File::Temp> はバージョン 0.2304 から 0.2309 に更新されました。

=item *

=begin original

L<Filter::Util::Call> has been upgraded from version 1.58 to 1.59.

=end original

L<Filter::Util::Call> はバージョン 1.58 から 1.59 に更新されました。

=item *

=begin original

L<GDBM_File> has been upgraded from version 1.17 to 1.18.

=end original

L<GDBM_File> はバージョン 1.17 から 1.18 に更新されました。

=item *

=begin original

L<HTTP::Tiny> has been upgraded from version 0.070 to 0.076.

=end original

L<HTTP::Tiny> はバージョン 0.070 から 0.076 に更新されました。

=item *

=begin original

L<I18N::Langinfo> has been upgraded from version 0.17 to 0.18.

=end original

L<I18N::Langinfo> はバージョン 0.17 から 0.18 に更新されました。

=item *

=begin original

L<IO> has been upgraded from version 1.39 to 1.40.

=end original

L<IO> はバージョン 1.39 から 1.40 に更新されました。

=item *

=begin original

IO-Compress has been upgraded from version 2.074 to 2.084.

=end original

IO-Compress はバージョン 2.074 から 2.084 に更新されました。

=begin original

Adds support for C<< IO::Uncompress::Zstd >> and
C<< IO::Uncompress::UnLzip >>.

=end original

C<< IO::Uncompress::Zstd >> と
C<< IO::Uncompress::UnLzip >> への対応が追加されました。

=begin original

The C<< BinModeIn >> and C<< BinModeOut >> options are now no-ops.
ALL files will be read/written in binmode.

=end original

オプション C<< BinModeIn >> と C<< BinModeOut >> は何もしなくなりました。
すべてのファイルはバイナリモードで読み書きされます。

=item *

=begin original

L<IPC::Cmd> has been upgraded from version 1.00 to 1.02.

=end original

L<IPC::Cmd> はバージョン 1.00 から 1.02 に更新されました。

=item *

=begin original

L<JSON::PP> has been upgraded from version 2.97001 to 4.02.

=end original

L<JSON::PP> はバージョン 2.97001 から 4.02 に更新されました。

=begin original

L<JSON::PP> as JSON::XS 4.0 enables C<allow_nonref> by default.

=end original

L<JSON::PP> は JSON::XS 4.0 と同様デフォルトで C<allow_nonref> を
有効にします。

=item *

=begin original

L<lib> has been upgraded from version 0.64 to 0.65.

=end original

L<lib> はバージョン 0.64 から 0.65 に更新されました。

=item *

=begin original

L<Locale::Codes> has been upgraded from version 3.56 to 3.57.

=end original

L<Locale::Codes> はバージョン 3.56 から 3.57 に更新されました。

=item *

=begin original

L<Math::BigInt> has been upgraded from version 1.999811 to 1.999816.

=end original

L<Math::BigInt> はバージョン 1.999811 から 1.999816 に更新されました。

=begin original

C<< bnok() >> now supports the full Kronenburg extension.
L<[cpan #95628]|https://rt.cpan.org/Ticket/Display.html?id=95628>.

=end original

C<< bnok() >> は完全な Kronenburg 拡張に対応しました。
L<[cpan #95628]|https://rt.cpan.org/Ticket/Display.html?id=95628>.

=item *

=begin original

L<Math::BigInt::FastCalc> has been upgraded from version 0.5006 to 0.5008.

=end original

L<Math::BigInt::FastCalc> はバージョン 0.5006 から 0.5008 に更新されました。

=item *

=begin original

L<Math::BigRat> has been upgraded from version 0.2613 to 0.2614.

=end original

L<Math::BigRat> はバージョン 0.2613 から 0.2614 に更新されました。

=item *

=begin original

L<Module::CoreList> has been upgraded from version 5.20180622 to 5.20190520.

=end original

L<Module::CoreList> はバージョン 5.20180622 から 5.20190520 に更新されました。

=begin original

Changes to B::Op_private and Config

=end original

B::Op_private と Config に変更しました。

=item *

=begin original

L<Module::Load> has been upgraded from version 0.32 to 0.34.

=end original

L<Module::Load> はバージョン 0.32 から 0.34 に更新されました。

=item *

=begin original

L<Module::Metadata> has been upgraded from version 1.000033 to 1.000036.

=end original

L<Module::Metadata> はバージョン 1.000033 から 1.000036 に更新されました。

=begin original

Properly clean up temporary directories after testing.

=end original

テスト後の一時ディレクトリを適切にクリアするようになりました。

=item *

=begin original

L<NDBM_File> has been upgraded from version 1.14 to 1.15.

=end original

L<NDBM_File> はバージョン 1.14 から 1.15 に更新されました。

=item *

=begin original

L<Net::Ping> has been upgraded from version 2.62 to 2.71.

=end original

L<Net::Ping> はバージョン 2.62 から 2.71 に更新されました。

=item *

=begin original

L<ODBM_File> has been upgraded from version 1.15 to 1.16.

=end original

L<ODBM_File> はバージョン 1.15 から 1.16 に更新されました。

=item *

=begin original

PathTools has been upgraded from version 3.74 to 3.78.

=end original

PathTools はバージョン 3.74 から 3.78 に更新されました。

=item *

=begin original

L<parent> has been upgraded from version 0.236 to 0.237.

=end original

L<parent> はバージョン 0.236 から 0.237 に更新されました。

=item *

=begin original

L<perl5db.pl> has been upgraded from version 1.54 to 1.55.

=end original

L<perl5db.pl> はバージョン 1.54 から 1.55 に更新されました。

=begin original

Debugging threaded code no longer deadlocks in C<DB::sub> nor
C<DB::lsub>.

=end original

デバッグスレッドコードはもはや C<DB::sub> や
C<DB::lsub> でデッドロックしなくなりました。

=item *

=begin original

L<perlfaq> has been upgraded from version 5.021011 to 5.20190126.

=end original

L<perlfaq> はバージョン 5.021011 から 5.20190126 に更新されました。

=item *

=begin original

L<PerlIO::encoding> has been upgraded from version 0.26 to 0.27.

=end original

L<PerlIO::encoding> はバージョン 0.26 から 0.27 に更新されました。

=begin original

Warnings enabled by setting the C<WARN_ON_ERR> flag in
C<$PerlIO::encoding::fallback> are now only produced if warnings are
enabled with C<use warnings "utf8";> or setting C<$^W>.

=end original

C<$PerlIO::encoding::fallback> の C<WARN_ON_ERR> を設定することによって
有効になる警告は、警告が C<use warnings "utf8";> か C<$^W> の設定によって
有効の場合にのみ発生するようになりました。

=item *

=begin original

L<PerlIO::scalar> has been upgraded from version 0.29 to 0.30.

=end original

L<PerlIO::scalar> はバージョン 0.29 から 0.30 に更新されました。

=item *

=begin original

podlators has been upgraded from version 4.10 to 4.11.

=end original

podlators はバージョン 4.10 から 4.11 に更新されました。

=item *

=begin original

L<POSIX> has been upgraded from version 1.84 to 1.88.

=end original

L<POSIX> はバージョン 1.84 から 1.88 に更新されました。

=item *

=begin original

L<re> has been upgraded from version 0.36 to 0.37.

=end original

L<re> はバージョン 0.36 から 0.37 に更新されました。

=item *

=begin original

L<SDBM_File> has been upgraded from version 1.14 to 1.15.

=end original

L<SDBM_File> はバージョン 1.14 から 1.15 に更新されました。

=item *

=begin original

L<sigtrap> has been upgraded from version 1.08 to 1.09.

=end original

L<sigtrap> はバージョン 1.08 から 1.09 に更新されました。

=item *

=begin original

L<Storable> has been upgraded from version 3.08 to 3.15.

=end original

L<Storable> はバージョン 3.08 から 3.15 に更新されました。

=begin original

Storable no longer probes for recursion limits at build time.
L<[perl #133708]|https://rt.perl.org/Ticket/Display.html?id=133708>
and others.

=end original

Storable はもはやビルドジに再帰上限について調べなくなりました。
L<[perl #133708]|https://rt.perl.org/Ticket/Display.html?id=133708>
など。

=begin original

Metasploit exploit code was included to test for CVE-2015-1992
detection, this caused anti-virus detections on at least one AV suite.
The exploit code has been removed and replaced with a simple
functional test.
L<[perl #133706]|https://rt.perl.org/Ticket/Display.html?id=133706>

=end original

Metasploit 攻撃コードが CVE-2015-1992 検出のためのテストに含まれていて、
これが少なくとも一つの対ウィルスシステムで検出されていました。
攻撃コードは取り除かれ、単純な機能テストに置き換えられました。
L<[perl #133706]|https://rt.perl.org/Ticket/Display.html?id=133706>

=item *

=begin original

L<Test::Simple> has been upgraded from version 1.302133 to 1.302162.

=end original

L<Test::Simple> はバージョン 1.302133 から 1.302162 に更新されました。

=item *

=begin original

L<Thread::Queue> has been upgraded from version 3.12 to 3.13.

=end original

L<Thread::Queue> はバージョン 3.12 から 3.13 に更新されました。

=item *

=begin original

L<threads::shared> has been upgraded from version 1.58 to 1.60.

=end original

L<threads::shared> はバージョン 1.58 から 1.60 に更新されました。

=begin original

Added support for extra tracing of locking, this requires a
C<-DDEBUGGING> and extra compilation flags.

=end original

追加のロックトレース対応が追加されました; これには
C<-DDEBUGGING> と追加のコンパイルフラグが必要です。

=item *

=begin original

L<Time::HiRes> has been upgraded from version 1.9759 to 1.9760.

=end original

L<Time::HiRes> はバージョン 1.9759 から 1.9760 に更新されました。

=item *

=begin original

L<Time::Local> has been upgraded from version 1.25 to 1.28.

=end original

L<Time::Local> はバージョン 1.25 から 1.28 に更新されました。

=item *

=begin original

L<Time::Piece> has been upgraded from version 1.3204 to 1.33.

=end original

L<Time::Piece> はバージョン 1.3204 から 1.33 に更新されました。

=item *

=begin original

L<Unicode::Collate> has been upgraded from version 1.25 to 1.27.

=end original

L<Unicode::Collate> はバージョン 1.25 から 1.27 に更新されました。

=item *

=begin original

L<Unicode::UCD> has been upgraded from version 0.70 to 0.72.

=end original

L<Unicode::UCD> はバージョン 0.70 から 0.72 に更新されました。

=item *

=begin original

L<User::grent> has been upgraded from version 1.02 to 1.03.

=end original

L<User::grent> はバージョン 1.02 から 1.03 に更新されました。

=item *

=begin original

L<utf8> has been upgraded from version 1.21 to 1.22.

=end original

L<utf8> はバージョン 1.21 から 1.22 に更新されました。

=item *

=begin original

L<vars> has been upgraded from version 1.04 to 1.05.

=end original

L<vars> はバージョン 1.04 から 1.05 に更新されました。

=begin original

C<vars.pm> no longer disables non-vars strict when checking if strict
vars is enabled.
L<[perl #130674]|https://rt.perl.org/Ticket/Display.html?id=130674>.

=end original

C<vars.pm> はもはや、strict vars が有効かどうかを調べるときに
非 vars strict を無効にしなくなりました。
L<[perl #130674]|https://rt.perl.org/Ticket/Display.html?id=130674>.

=item *

=begin original

L<version> has been upgraded from version 0.9923 to 0.9924.

=end original

L<version> はバージョン 0.9923 から 0.9924 に更新されました。

=item *

=begin original

L<warnings> has been upgraded from version 1.42 to 1.44.

=end original

L<warnings> はバージョン 1.42 から 1.44 に更新されました。

=item *

=begin original

L<XS::APItest> has been upgraded from version 0.98 to 1.00.

=end original

L<XS::APItest> はバージョン 0.98 から 1.00 に更新されました。

=item *

=begin original

L<XS::Typemap> has been upgraded from version 0.16 to 0.17.

=end original

L<XS::Typemap> はバージョン 0.16 から 0.17 に更新されました。

=back

=head2 Removed Modules and Pragmata

(削除されたモジュールとプラグマ)

=begin original

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

=end original

以下のモジュールは将来のリリースでコア配布から削除され、その時点で
CPAN からインストールされる必要があるようになります。
これらのモジュールを必要とする CPAN 配布はこれらを依存関係に入れる
必要があります。

=begin original

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

=end original

これらのモジュールのコア版は、この事実を知らせるために、
C<"deprecated"> カテゴリの警告を発生させます。
この廃止予定警告を止めるには、対象のモジュールを
CPAN からインストールしてください。

=begin original

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=end original

これらは(まれな例外を除いて)使い続けることを勧められる、
良いモジュールであることに注意してください。
コアからの除去は基本的に、完全な機能を持ち、CPAN が利用可能な Perl の
インストールに対する必要性を基準としていて、通常はその設計は考慮していません。

=over 4

=item *

=begin original

B::Debug is no longer distributed with the core distribution.  It
continues to be available on CPAN as
C<< L<B::Debug|https://metacpan.org/pod/B::Debug> >>.

=end original

B::Debug はもはやコア配布とともに配布されなくなりました。
これは引き続き
C<< L<B::Debug|https://metacpan.org/pod/B::Debug> >> として
CPAN から利用可能です。

=item *

=begin original

Locale::Codes has been removed at the request of its author.  It
continues to be available on CPAN as
C<< L<Locale::Codes|https://metacpan.org/pod/Locale::Codes> >>
L<[perl #133458]|https://rt.perl.org/Ticket/Display.html?id=133458>.

=end original

Locale::Codes は作者の要求により削除されました。
これは引き続き
C<< L<Locale::Codes|https://metacpan.org/pod/Locale::Codes> >> として
CPAN から利用可能です
L<[perl #133458]|https://rt.perl.org/Ticket/Display.html?id=133458>.

=back

=head1 Documentation

(文書)

=head2 Changes to Existing Documentation

(既存の文書の変更)

=begin original

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to L<perlbug@perl.org|mailto:perlbug@perl.org>.

=end original

私たちはこの文書で挙げられた変更を反映するように文書を更新しようとしています。
もし抜けている物を発見したら、
L<perlbug@perl.org|mailto:perlbug@perl.org> にメールしてください。

=head3 L<perlapi>

=over 4

=item *

=begin original

C<AvFILL()> was wrongly listed as deprecated.  This has been corrected.
L<[perl #133278]|https://rt.perl.org/Ticket/Display.html?id=133278>

=end original

C<AvFILL()> は間違って廃止予定とされていました。
これは修正されました。
L<[perl #133278]|https://rt.perl.org/Ticket/Display.html?id=133278>

=back

=head3 L<perlop>

=over 4

=item *

=begin original

We no longer have null (empty line) here doc terminators, so
L<perlop> should not refer to them.

=end original

もはや空(空行)ヒヤドキュメント終端子はないので、
L<perlop> はそれを参照するべきではありません。

=item *

=begin original

The behaviour of C<tr> when the delimiter is an apostrophe has been clarified.
In particular, hyphens aren't special, and C<\x{}> isn't interpolated.
L<[perl #130679]|https://rt.perl.org/Ticket/Display.html?id=130679>

=end original

区切り文字がアポストロフィのときの C<tr> の振る舞いが明確化されました。
特に、ハイフンは特別ではなく、C<\x{}> は展開されません。
L<[perl #130679]|https://rt.perl.org/Ticket/Display.html?id=130679>

=back

=head3 L<perlreapi>, L<perlvar>

=over 4

=item *

=begin original

Improve docs for lastparen, lastcloseparen.

=end original

lastparen, lastcloseparen に関する文書を改善しました。

=back

=head3 L<perlfunc>

=over 4

=item *

=begin original

The entry for L<perlfunc/-X> has been clarified to indicate that symbolic
links are followed for most tests.

=end original

L<perlfunc/-X> のエントリは、シンボリックリンクがほとんどのテストに
従うことを示すように明確化されました。

=item *

=begin original

Clarification of behaviour of C<reset EXPR>.

=end original

C<reset EXPR> の振る舞いの明確化。

=item *

=begin original

Try to clarify that C<< ref(qr/xx/) >> returns C<Regexp> rather than
C<REGEXP> and why.
L<[perl #133751]|https://rt.perl.org/Ticket/Display.html?id=133751>.

=end original

C<< ref(qr/xx/) >> は C<REGEXP> ではなく C<Regexp> を返すことと
その理由の明確化。
L<[perl #133751]|https://rt.perl.org/Ticket/Display.html?id=133751>.

=back

=head3 L<perlreref>

=over 4

=item *

=begin original

Clarification of the syntax of /(?(cond)yes)/.

=end original

/(?(cond)yes)/ の文法の明確化。

=back

=head3 L<perllocale>

=over 4

=item *

=begin original

There are actually two slightly different types of UTF-8 locales: one for Turkic
languages and one for everything else. Starting in Perl v5.30, Perl seamlessly 
handles both types.

=end original

UTF-8 ロケールには実際には二つの少し違う種類があります: 一つは
トルコ語用でもう一つはそれ以外全て用です。
Perl v5.30 から、Perl は両方の種類をシームレスに扱います。

=back

=head3 L<perlrecharclass>

=over 4

=item *

=begin original

Added a note for the ::xdigit:: character class.

=end original

::xdigit:: 文字クラスに関する注意の追加。

=back

=head3 L<perlvar>

=over 4

=item *

=begin original

More specific documentation of paragraph mode.
L<[perl #133722]|https://rt.perl.org/Ticket/Display.html?id=133722>.

=end original

段落モードに関するより具体的な文書。
L<[perl #133722]|https://rt.perl.org/Ticket/Display.html?id=133722>.

=back

=head1 Diagnostics

(診断メッセージ)

=begin original

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=end original

次のような追加と変更が、警告や致命的エラーメッセージを含む診断出力に
行われました。
診断メッセージの完全な一覧については、L<perldiag> を参照してください。

=head2 Changes to Existing Diagnostics

(既存の診断メッセージの変更)

=over 4

=item *

=begin original

As noted under L<Incompatible Changes> above, the deprecation warning
"Unescaped left brace in regex is deprecated here (and will be fatal in Perl
5.30), passed through in regex; marked by S<<-- HERE> in m/%s/" has been
changed to the non-deprecation warning "Unescaped left brace in regex is passed
through in regex; marked by S<<-- HERE> in m/%s/".

=end original

前述の L<Incompatible Changes> で記したように、
廃止予定警告
"Unescaped left brace in regex is deprecated here (and will be fatal in Perl
5.30), passed through in regex; marked by S<<-- HERE> in m/%s/" は
非廃止予定警告
"Unescaped left brace in regex is passed
through in regex; marked by S<<-- HERE> in m/%s/" 
に変更されました。

=item *

=begin original

Specifying C<\o{}> without anything between the braces now yields the
fatal error message "Empty \o{}".  Previously it was  "Number with no
digits".  This means the same wording is used for this kind of error as
with similar constructs such as C<\p{}>.

=end original

中かっこの中に何も指定しない C<\o{}> は致命的エラーメッセージ
"Empty \o{}" を出力するようになりました。
以前は "Number with no digits" でした。
これは、C<\p{}> のような同様の構文での同じ種類のエラーと同じ言葉遣いです。

=item *

=begin original

Within the scope of the experimental feature C<use re 'strict'>,
specifying C<\x{}> without anything between the braces now yields the
fatal error message "Empty \x{}".  Previously it was  "Number with no
digits".  This means the same wording is used for this kind of error as
with similar constructs such as C<\p{}>.  It is legal, though not wise
to have an empty C<\x> outside of C<re 'strict'>; it silently generates
a NUL character.

=end original

実験的機能 C<use re 'strict'> のスコープ内で、
中かっこの中に何も指定しない C<\x{}> は致命的エラーメッセージ
"Empty \x{}" を出力するようになりました。
以前は "Number with no digits" でした。
これは、C<\p{}> のような同様の構文での同じ種類のエラーと同じ言葉遣いです。
C<re 'strict'> の外側で C<\x> を使うことは正当ですが、賢明ではありません;
これは暗黙に NUL 文字を生成します。

=item *

L<Type of arg %d to %s must be %s (not %s)|perldiag/"Type of arg %d to %s must be %s (not %s)">

=begin original

Attempts to push, pop, etc on a hash or glob now produce this message
rather than complaining that they no longer work on scalars.
L<[perl #130367]|https://rt.perl.org/Ticket/Display.html?id=130367>.

=end original

ハッシュやグロブに対する push, pop などは、もはやスカラでは
動作しないというものではなく、このメッセージが出力されるようになりました。
L<[perl #130367]|https://rt.perl.org/Ticket/Display.html?id=130367>.

=item *

L<Prototype not terminated|perldiag/"Prototype not terminated">

=begin original

The file and line number is now reported for this error.
L<[perl #133524]|https://rt.perl.org/Ticket/Display.html?id=133524>

=end original

このエラーでファイルと行番号が報告されるようになりました。
L<[perl #133524]|https://rt.perl.org/Ticket/Display.html?id=133524>

=item *

=begin original

Under C<< -Dr >> (or C<< use re 'Debug' >>) the compiled regex engine
program is displayed. It used to use two different spellings for I<<
infinity >>,
C<< INFINITY >>, and C<< INFTY >>. It now uses the latter exclusively,
as that spelling has been around the longest.

=end original

C<< -Dr >> (あるいは C<< use re 'Debug' >>) の基では、
コンパイルされた正規表現エンジンプログラムが表示されます。
以前は I<< 無限 >> のために二つの異なる綴り
C<< INFINITY >>, C<< INFTY >> が使われていました。
これは後者のみが使われるようになりました; これが最も長い間
使われているからです。

=back

=head1 Utility Changes

(ツールの変更)

=head2 L<xsubpp>

=over 4

=item *

=begin original

The generated prototype (with C<< PROTOTYPES: ENABLE >>) would include
C<< OUTLIST >> parameters, but these aren't arguments to the perl function.
This has been rectified.
L<[perl #133654]|https://rt.perl.org/Ticket/Display.html?id=133654>.

=end original

(C<< PROTOTYPES: ENABLE >> によって) 生成されたプロトタイプには
C<< OUTLIST >> 引数が含まれていましたが、
これらは perl 関数への引数ではありません。
これは調整されました。
L<[perl #133654]|https://rt.perl.org/Ticket/Display.html?id=133654>.

=back

=head1 Configuration and Compilation

(設定とコンパイル)

=over 4

=item *

=begin original

Normally the thread-safe locale functions are used only on threaded
builds.  It is now possible to force their use on unthreaded builds on
systems that have them available, by including the
C<-Accflags='-DUSE_THREAD_SAFE_LOCALE'> option to F<Configure>.

=end original

通常はスレッドセーフロケール関数はスレッドビルドでしか使われません。
F<Configure> に C<-Accflags='-DUSE_THREAD_SAFE_LOCALE'> オプションを
加えることで、これらを利用可能なシステムで非スレッドビルドでも
これらを使うように強制できるようになりました。

=item *

=begin original

Improve detection of memrchr, strlcat, and strlcpy

=end original

memrchr, strlcat, strlcpy の検出の改善。

=item *

=begin original

Improve Configure detection of memmem().
L<[perl #133760]|https://rt.perl.org/Ticket/Display.html?id=133760>.

=end original

Configure での memmem() の検出の改善。
L<[perl #133760]|https://rt.perl.org/Ticket/Display.html?id=133760>.

=item *

=begin original

Multiple improvements and fixes for -DPERL_GLOBAL_STRUCT build option.

=end original

-DPERL_GLOBAL_STRUCT ビルドオプションに関する複数の改善と修正。

=item *

=begin original

Fix -DPERL_GLOBAL_STRUCT_PRIVATE build option.

=end original

-DPERL_GLOBAL_STRUCT_PRIVATE ビルドオプションの修正。

=back

=head1 Testing

(テスト)

=over 4

=item *

F<t/lib/croak/op>
L<[perl #130367]|https://rt.perl.org/Ticket/Display.html?id=130367>.

=begin original

separate error for C<push>, etc. on hash/glob.

=end original

ハッシュ/グロブでの C<push> のエラーを分離しました。

=item *

F<t/op/svleak.t>
L<[perl #133660]|https://rt.perl.org/Ticket/Display.html?id=133660>.

=begin original

Add test for C<goto &sub> in overload leaking.

=end original

オーバーロードでの C<goto &sub> のリークのテストを追加しました。

=item *

=begin original

Split F<t/re/fold_grind.t> into multiple test files.

=end original

F<t/re/fold_grind.t> を複数のテストファイルに分割しました。

=item *

=begin original

Fix intermittent tests which failed due to race conditions which
surface during parallel testing.
L<[perl #133740]|https://rt.perl.org/Ticket/Display.html?id=133740>.

=end original

並列テストの境界面での競合条件によりテストが断続的に停止する問題が
修正されました。
L<[perl #133740]|https://rt.perl.org/Ticket/Display.html?id=133740>.

=item *

=begin original

Thoroughly test paragraph mode, using a new test file,
F<t/io/paragraph_mode.t>.
L<[perl #133722]|https://rt.perl.org/Ticket/Display.html?id=133722>.

=end original

新しいテストファイル F<t/io/paragraph_mode.t> を使った
段落モードの完全なテスト。
L<[perl #133722]|https://rt.perl.org/Ticket/Display.html?id=133722>.

=item *

=begin original

Some tests in F<< t/io/eintr.t >> caused the process to hang on
pre-16 Darwin. These tests are skipped for those version of Darwin.

=end original

F<< t/io/eintr.t >> での一部のテストは 16 より前の Darwin で
プロセスのハングを引き起こしていました。
これらのバージョンの Darwin ではこれらのテストはスキップされます。

=back

=head1 Platform Support

(プラットフォーム対応)

=head2 Platform-Specific Notes

(プラットフォーム固有の注意)

=over 4

=item HP-UX 11.11

=begin original

An obscure problem in C<pack()> when compiling with HP C-ANSI-C has been fixed
by disabling optimizations in F<pp_pack.c>.

=end original

HP C-ANSI-C でビルドしたときの C<pack()> での不明確なエラーは、
F<pp_pack.c> の最適化を無効にすることで修正されました。

=item Mac OS X

=begin original

Perl's build and testing process on Mac OS X for C<-Duseshrplib>
builds is now compatible with Mac OS X System Integrity Protection
(SIP).

=end original

Perl の Mac OS X での C<-Duseshrplib> ビルドのビルドとテストの処理は
Mac OS X システム整合性保護 (SIP) と互換性を持つようになりました。

=begin original

SIP prevents binaries in F</bin> (and a few other places) being passed
the C<DYLD_LIBRARY_PATH> environment variable.  For our purposes this
prevents C<DYLD_LIBRARY_PATH> from being passed to the shell, which
prevents that variable being passed to the testing or build process,
so running C<perl> couldn't find F<libperl.dylib>.

=end original

SIP は F</bin> (およびその他のいくつかの場所) にあるバイナリに
C<DYLD_LIBRARY_PATH> 環境変数を渡すのを妨げます。
私たちの用途では、これは C<DYLD_LIBRARY_PATH> がシェルに渡されるのを妨げ、
この変数がテストやビルドの処理に渡されるのを妨げるので、
C<perl> を実行しても F<libperl.dylib> を見つけられません。

=begin original

To work around that, the initial build of the F<perl> executable
expects to find F<libperl.dylib> in the build directory, and the
library path is then adjusted during installation to point to the
installed library.

=end original

これを回避するために、F<perl> 実行ファイルの初期ビルドは
ビルドディレクトリに F<libperl.dylib> があることを想定し、
それからライブラリパスがインストール中にインストールされたライブラリを
示すように調整されます。

L<[perl #126706]|https://rt.perl.org/Ticket/Display.html?id=126706>.

=item Minix3

=begin original

Some support for Minix3 has been re-added.

=end original

Minix3 へのいくらかの対応が再び追加されました。

=item Cygwin

=begin original

Cygwin doesn't make C<< cuserid >> visible.

=end original

Cygwin は C<< cuserid >> を見えるようにしません。

=item Win32 Mingw

=begin original

C99 math functions are now available.

=end original

C99 算術関数が利用可能になりました。

=item Windows

=over 4

=item *

=begin original

The C<USE_CPLUSPLUS> build option which has long been available in
F<win32/Makefile> (for B<nmake>) and F<win32/makefile.mk> (for B<dmake>) is now
also available in F<win32/GNUmakefile> (for B<gmake>).

=end original

(B<nmake> 用の)F<win32/Makefile> と (B<dmake> 用の) F<win32/makefile.mk> で
長い間利用可能になっている C<USE_CPLUSPLUS> ビルドオプションが
(B<gmake> 用の) F<win32/GNUmakefile> でも利用可能になりました。

=item *

=begin original

The B<nmake> makefile no longer defaults to Visual C++ 6.0 (a very old version
which is unlikely to be widely used today).  As a result, it is now a
requirement to specify the C<CCTYPE> since there is no obvious choice of which
modern version to default to instead.  Failure to specify C<CCTYPE> will result
in an error being output and the build will stop.

=end original

B<nmake> makefile はもはや (現在広く使われているとは思えない
とても古いバージョンである) Visual C++ 6.0 をデフォルトにしなくなりました。
結果として、代わりにデフォルトにするモダンなバージョンとしての
明らかな選択肢がないので、C<CCTYPE> を指定することが必要になりました。
C<CCTYPE> の指定に失敗するとエラーが出力され、ビルドは停止します。

=begin original

(The B<dmake> and B<gmake> makefiles will automatically detect which compiler
is being used, so do not require C<CCTYPE> to be set.  This feature has not yet
been added to the B<nmake> makefile.)

=end original

(B<dmake> と B<gmake> の makefile はどのコンパイラが使われているのかを
自動的に検出するので、C<CCTYPE> を設定する必要はありません。
この機能は B<nmake> の makefile にはまだ実装されていません。)

=item *

=begin original

C<sleep()> with warnings enabled for a C<USE_IMP_SYS> build no longer
warns about the sleep timeout being too large.
L<[perl #133376]|https://rt.perl.org/Ticket/Display.html?id=133376>.

=end original

C<USE_IMP_SYS> ビルドの警告を有効にした C<sleep()> で、
もはやスリープタイムアウトが大きすぎる警告を出さなくなりました。
L<[perl #133376]|https://rt.perl.org/Ticket/Display.html?id=133376>.

=item *

=begin original

Support for compiling perl on Windows using Microsoft Visual Studio 2019
(containing Visual C++ 14.2) has been added.

=end original

(Visual C++ 14.2 を含む) Microsoft Visual Studio 2019 を使った
Windows 版 perl のコンパイル対応を追加しました。

=item *

=begin original

socket() now sets C<$!> if the protocol, address family and socket
type combination is not found.
L<[perl #133853]|https://rt.perl.org/Ticket/Display.html?id=133853>.

=end original

socket() は、プロトコル・アドレスファミリー・ソケットタイプの
組が見つからない場合、C<$!> を設定するようになりました。
L<[perl #133853]|https://rt.perl.org/Ticket/Display.html?id=133853>.

=item *

=begin original

The Windows Server 2003 SP1 Platform SDK build, with its early x64 compiler and
tools, was accidentally broken in Perl 5.27.9.  This has now been fixed.

=end original

初期の x64 コンパイラおよびツールを使った
Windows Server 2003 SP1 プラットフォーム SDK ビルドは Perl 5.27.9 から
誤って壊れていました。
これは修正されました。

=back

=back

=head1 Internal Changes

(内部の変更)

=over 4

=item *

=begin original

The sizing pass has been eliminated from the regular expression
compiler.  An extra pass may instead be needed in some cases to count
the number of parenthetical capture groups.

=end original

サイズ計測パスは正規表現コンパイラから削除されました。
一部の場合では代わりにかっこによる捕捉グループの数を数えるために
追加のパスが必要になることがあります。

=item *

=begin original

A new function L<perlapi/C<my_strtod>> or its synonym, Strtod(), is
now available with the same signature as the libc strtod().  It provides
strotod() equivalent behavior on all platforms, using the best available
precision, depending on platform capabilities and F<Configure> options,
while handling locale-related issues, such as if the radix character
should be a dot or comma.

=end original

新しい関数 L<perlapi/C<my_strtod>> あるいはその同義語である Strtod() が
libc の strtod() と同じシグネチャで利用可能になりました。
これは strotod() と等価な振る舞いを全てのプラットフォームで提供し、
プラットフォームの能力と F<Configure> オプションに依存して最良の
制度を使い、一方小数点がドットかコンマであるべきというような
ロケール関係の問題も処理します。

=item *

=begin original

Added C<newSVsv_nomg()> to copy a SV without processing get magic on
the source.
L<[perl #132964]|https://rt.perl.org/Ticket/Display.html?id=132964>.

=end original

ソースからマジックを取得することなく SV をコピーするための
C<newSVsv_nomg()> が追加されました。
L<[perl #132964]|https://rt.perl.org/Ticket/Display.html?id=132964>.

=item *

=begin original

It is now forbidden to malloc more than C<PTRDIFF_T_MAX> bytes.  Much
code (including C optimizers) assumes that all data structures will not
be larger than this, so this catches such attempts before overflow
happens.

=end original

C<PTRDIFF_T_MAX> バイト以上 malloc することが禁止されました。
(C 最適化器を含む)多くのコードが、全てのデータ構造がこれよりも
大きくないことを仮定しているので、これはそのような試みを
オーバーフローが起きる前に捕まえます。

=item *

=begin original

Two new regnodes have been introduced C<< EXACT_ONLY8 >>, and
C<< EXACTFU_ONLY8 >>. They're equivalent to C<< EXACT >> and C<< EXACTFU >>,
except that they contain a code point which requires UTF-8 to
represent/match. Hence, if the target string isn't UTF-8, we know
it can't possibly match, without needing to try.

=end original

二つの新しい regnode C<< EXACT_ONLY8 >> および
C<< EXACTFU_ONLY8 >> が導入されました。
これらは、表現/マッチングするために UTF-8 が必要な符号位置を
含んでいることを除けば C<< EXACT >> および C<< EXACTFU >> と等価です。
従って、ターゲット文字列が UTF-8 でない場合、試す前にマッチングすることが
ないことが分かります。

=item *

=begin original

C<< print_bytes_for_locale() >> is now defined if C<< DEBUGGING >>,
Prior, it didn't get defined unless C<< LC_COLLATE >> was defined
on the platform.

=end original

C<< print_bytes_for_locale() >> は、C<< DEBUGGING >> で
定義されるようになりました。
以前は、C<< LC_COLLATE >> がプラットフォームで定義されていない限り
定義されていませんでした。

=back

=head1 Selected Bug Fixes

(バグ修正の抜粋)

=over 4

=item *

=begin original

Compilation under C<-DPERL_MEM_LOG> and C<-DNO_LOCALE> have been fixed.

=end original

C<-DPERL_MEM_LOG> と C<-DNO_LOCALE> の基でのコンパイルは修正されました。

=item *

=begin original

Perl 5.28 introduced an C<index()> optimization when comparing to -1 (or
indirectly, e.g. >= 0).  When this optimization was triggered inside a C<when>
clause it caused a warning ("Argument %s isn't numeric in smart match").  This
has now been fixed.
L<[perl #133368]|https://rt.perl.org/Ticket/Display.html?id=133368>

=end original

Perl 5.28 では、C<index()> で -1 と比較する (あるいは間接的に 例えば >= 0)
場合の最適化が導入されました。
この最適化が C<when> 節の内側で引き起こされた場合、警告
("Argument %s isn't numeric in smart match") が発生していました。
これは修正されました。
L<[perl #133368]|https://rt.perl.org/Ticket/Display.html?id=133368>

=item *

=begin original

The new in-place editing code no longer leaks directory handles.
L<[perl #133314]|https://rt.perl.org/Ticket/Display.html?id=133314>.

=end original

その場修正コードはもはやディレクトリハンドルをリークしなくなりました。
L<[perl #133314]|https://rt.perl.org/Ticket/Display.html?id=133314>

=item *

=begin original

Warnings produced from constant folding operations on overloaded
values no longer produce spurious "Use of uninitialized value"
warnings.
L<[perl #132683]|https://rt.perl.org/Ticket/Display.html?id=132683>.

=end original

オーバーロードされた値に対する定数畳み込み操作から生成される警告は、
もはや偽の "Use of uninitialized value" 警告を出さなくなりました。
L<[perl #132683]|https://rt.perl.org/Ticket/Display.html?id=132683>.

=item *

=begin original

Fix for "mutator not seen in (lex = ...) .= ..."
L<[perl #133441]|https://rt.perl.org/Ticket/Display.html?id=133441>.

=end original

"mutator not seen in (lex = ...) .= ..." を修正しました。
L<[perl #133441]|https://rt.perl.org/Ticket/Display.html?id=133441>.

=item *

=begin original

C<pack "u", "invalid uuencoding"> now properly NUL terminates the
zero-length SV produced.
L<[perl #132655]|https://rt.perl.org/Ticket/Display.html?id=132655>.

=end original

C<pack "u", "invalid uuencoding"> は適切に NUL 終端された長さ 0 の SV を
生成するようになりました。
L<[perl #132655]|https://rt.perl.org/Ticket/Display.html?id=132655>

=item *

=begin original

Improve the debugging output for calloc() calls with C<-Dm>.
L<[perl #133439]|https://rt.perl.org/Ticket/Display.html?id=133439>.

=end original

C<-Dm> での calloc() 呼び出しのデバッグ出力が改良されました。
L<[perl #133439]|https://rt.perl.org/Ticket/Display.html?id=133439>.

=item *

=begin original

Regexp script runs were failing to permit ASCII digits in some cases.
L<[perl #133547]|https://rt.perl.org/Ticket/Display.html?id=133547>.

=end original

正規表現用字並びが一部の場合で ASCII 数字を許すのに失敗していました。
L<[perl #133547]|https://rt.perl.org/Ticket/Display.html?id=133547>.

=item *

=begin original

On Unix-like systems supporting a platform-specific technique for
determining L<< C<$^X>|perlvar/$^X >>, Perl failed to fall back to the
generic technique when the platform-specific one fails (for example, a Linux
system with /proc not mounted).  This was a regression in Perl 5.28.0.
L<[perl #133573]|https://rt.perl.org/Ticket/Display.html?id=133573>.

=end original

L<< C<$^X>|perlvar/$^X >> を決定するためのプラットフォーム固有の
テクニックに対応している Unix 風のシステムでは、
プラットフォーム固有のテクニックに失敗したとき (例えば、
Linux システムで /proc がマウントされていないとき)、
Perl は一般的なテクニックにフォールバックするのに失敗していました。
これは Perl 5.28.0 での退行でした。
L<[perl #133573]|https://rt.perl.org/Ticket/Display.html?id=133573>.

=item *

=begin original

L<SDBM_File> is now more robust with corrupt database files.  The
improvements do not make SDBM files suitable as an interchange format.
L<[perl #132147]|https://rt.perl.org/Ticket/Display.html?id=132147>.

=end original

L<SDBM_File> は壊れたデータベースファイルに対してより頑強になりました。
この改善は、SDBM ファイルを交換フォーマットとして
適しているものにするわけではありません。
L<[perl #132147]|https://rt.perl.org/Ticket/Display.html?id=132147>.

=item *

=begin original

C<binmode($fh);> or C<binmode($fh, ':raw');> now properly removes the
C<:utf8> flag from the default C<:crlf> I/O layer on Win32.
L<[perl #133604]|https://rt.perl.org/Ticket/Display.html?id=133604>.

=end original

C<binmode($fh);> や C<binmode($fh, ':raw');> は、
Win32 でのデフォルトの C<:crlf> I/O 層から適切に C<:utf8> フラグを
除去するようになりました。
L<[perl #133604]|https://rt.perl.org/Ticket/Display.html?id=133604>.

=item *

=begin original

The experimental reference aliasing feature was misinterpreting array and
hash slice assignment as being localised, e.g.

=end original

実験的なリファレンス別名機能は、配列とハッシュのスライス代入を
ローカル化と誤って解釈していました; 例えば:

    \(@a[3,5,7]) = \(....);

=begin original

was being interpreted as:

=end original

これは以下のように解釈していました:

    local \(@a[3,5,7]) = \(....);

L<[perl #133538]|https://rt.perl.org/Ticket/Display.html?id=133538>.

=item *

=begin original

C<sort SUBNAME> within an C<eval EXPR> when C<EXPR> was UTF-8 upgraded
could panic if the C<SUBNAME> was non-ASCII.
L<[perl #134061]|https://rt.perl.org/Ticket/Display.html?id=134061>.

=end original

C<EXPR> が昇格した UTF-8 のときの C<eval EXPR> の中の C<sort SUBNAME> は、
C<SUBNAME> が非 ASCII のときに panic することがありました。
L<[perl #134061]|https://rt.perl.org/Ticket/Display.html?id=134061>.

=item *

=begin original

Correctly handle realloc() modifying C<errno> on success so that the
modification isn't visible to the perl user, since realloc() is called
implicitly by the interpreter.  This modification is permitted by the
C standard, but has only been observed on FreeBSD 13.0-CURRENT.
L<[perl #133958]|https://rt.perl.org/Ticket/Display.html?id=133958>.

=end original

realloc() が成功時に C<errno> を変更してもそれが perl ユーザーから
見えないようにするために、正しく扱えるようになりました;
realloc() はインタプリタによって暗黙に呼び出されるからです。
この変更は C 標準によって許されていますが、FreeBSD 13.0-CURRENT でのみ
観測されています。
L<[perl #133958]|https://rt.perl.org/Ticket/Display.html?id=133958>.

=item *

=begin original

Perl now exposes POSIX C<getcwd> as C<Internals::getcwd()> if
available.  This is intended for use by C<Cwd.pm> during bootstrapping
and may be removed or changed without notice.  This fixes some
bootstrapping issues while building perl in a directory where some
ancestor directory isn't readable.
L<[perl #133951]|https://rt.perl.org/Ticket/Display.html?id=133951>.

=end original

Perl は、可能なら POSIX C<getcwd> を C<Internals::getcwd()> として
露出するようになりました。
これはブートストラップ中に C<Cwd.pm> が使うことを意図していて、
警告なしに削除されたり変更されたりするかもしれません。
これにより、上位ディレクトリの一部が読み込めないディレクトリで
perl をビルドするときのブートストラップの問題がいくつか修正されます。
L<[perl #133951]|https://rt.perl.org/Ticket/Display.html?id=133951>.

=item *

=begin original

C<pack()> no longer can return malformed UTF-8.  It croaks if it would
otherwise return a UTF-8 string that contains malformed UTF-8.  This
protects against potential security threats.
L<[perl #131642]|https://rt.perl.org/Ticket/Display.html?id=131642>.

=end original

C<pack()> はもはや不正な UTF-8 を返さなくなりました。
UTF-8 文字列を返すべきところに不正な UTF-8 が含まれている場合、croak します。
これはセキュリティ上の脅威の可能性から保護します。
L<[perl #131642]|https://rt.perl.org/Ticket/Display.html?id=131642>.

=item *

=begin original

See L</Any set of digits in the Common script are legal in a script run
of another script>.

=end original

L</Any set of digits in the Common script are legal in a script run
of another script> を参照して下さい。

=item *

=begin original

Regular expression matching no longer leaves stale UTF-8 length magic
when updating C<$^R>. This could result in C<length($^R)> returning
an incorrect value.

=end original

正規表現マッチングは C<$^R> を更新するときに古い UTF-8 length magic を
そのままにしなくなりました。
以前はこれにより C<length($^R)> が間違った値を返すことがありました。

=item *

=begin original

Reduce recursion on ops
L<[perl #108276]|https://rt.perl.org/Ticket/Display.html?id=108276>.

=end original

ops での再帰を減らしました
L<[perl #108276]|https://rt.perl.org/Ticket/Display.html?id=108276>。

=begin original

This can prevent stack overflow when processing extremely deep op
trees.

=end original

これにより、とても深い op 木の処理時にスタックオーバーフローを防ぎます。

=item *

=begin original

Avoid leak in multiconcat with overloading.
L<[perl #133789]|https://rt.perl.org/Ticket/Display.html?id=133789>.

=end original

オーバーロードでの multiconcat のリークをしなくなりました。
L<[perl #133789]|https://rt.perl.org/Ticket/Display.html?id=133789>

=item *

=begin original

The handling of user-defined C<\p{}> properties (see
L<perlunicode/User-Defined Character Properties>) has been rewritten to
be in C (instead of Perl).  This speeds things up, but in the process
several inconsistencies and bug fixes are made.

=end original

ユーザー定義 C<\p{}> (
L<perlunicode/User-Defined Character Properties> 参照) の処理は
(Perl ではなく) C で書き直されました。
これにより高速化されましたが、その過程でいくつかの非一貫性と
バグ修正が行われました。

=over 4

=item 1

=begin original

A few error messages have minor wording changes.  This is essentially
because the new way is integrated into the regex error handling
mechanism that marks the position in the input at which the error
occurred.  That was not possible previously.  The messages now also
contain additional back-trace-like information in case the error occurs
deep in nested calls.

=end original

いくつかのエラーメッセージの表現が少し変わりました。
これは基本的には、
エラーが起きた入力の位置をマークする新しい方法が正規表現
エラー処理機構に統合されたからです。
これは以前は不可能でした。
また、エラーがネストした呼び出しの深いところで起きた場合には、
メッセージに追加のバックトレース風の情報が含まれるようになりました。

=item 2

=begin original

A user-defined property is implemented as a perl subroutine with certain
highly constrained naming conventions.  It was documented previously
that the sub would be in the current package if the package was
unspecified.  This turned out not to be true in all cases, but now it
is.

=end original

ユーザー定義特性は、ある種の非常に制限された命名規則の
perl サブルーチンとして実装されています。
パッケージが未指定の場合、サブルーチンはカレントパッケージにあると
以前は文書かsれていました。
これは一部の場合では正しくなくなっていましたが、
正しくなりました。

=item 3

=begin original

All recursive calls are treated as infinite recursion.  Previously they
would cause the interpreter to panic.  Now, they cause the regex pattern
to fail to compile.

=end original

全ての再帰呼び出しは無限再帰として扱われるようになりました。
以前はこれらはインタプリタを panic させることがありました。
今では、これらは正規表現パターンのコンパイルに失敗します。

=item 4

=begin original

Similarly, any other error likely would lead to a panic; now to just the
pattern failing to compile.

=end original

同様に、その他の panic を引き起こすようなエラーは、単に
パターンのコンパイルに失敗するようになりました。

=item 5

=begin original

The old mechanism did not detect illegal ranges in the definition of the
property.  Now, the range max must not be smaller than the range min.
Otherwise, the pattern fails to compile.

=end original

古い機構は、特性を定義するときの不正な範囲を検出していませんでした。
範囲の最大値は範囲の最小値より小さくてはいけないようになりました。
さもなければ、パターンはコンパイルに失敗します。

=item 6

=begin original

The intention was to have each sub called only once during the lifetime
of the program, so that a property's definition is immutable.  This was
relaxed so that it could be called once for all /i compilations, and
potentially a second time for non-/i (the sub is passed a parameter
indicating which).  However, in practice there were instances when this
was broken, and multiple calls were possible.  Those have been fixed.
Now (besides the /i,non-/i cases) the only way a sub can be called
multiple times is if some component of it has not been defined yet.  For
example, suppose we have sub IsA() whose definition is known at compile
time, and it in turn calls isB() whose definition is not yet known.
isA() will be called each time a pattern it appears in is compiled.  If
isA() also calls isC() and that definition is known, isC() will be
called just once.

=end original

意図としては、特性の定義をイミュータブルにするために、
それぞれのサブルーチンはプログラムの生存期間中に一度しか呼び出されません。
これは、1 回目は全ての /i 系のため、そして 2 回目は非 /i 系というように
緩和されました(サブルーチンはどちらなのかを示す引数を受け取ります)。
しかし、実際にはこれは壊れていて、複数回の呼び出しが可能でした。
これらは修正されました。
(/i, 非/i の場合を置いておくと) あるサブルーチンが複数回呼び出される唯一の
方法は、一部の要素がまだ定義されていないときだけになりました。
例えば、コンパイル時に定義が分かっているサブルーチン IsA() があり、
それが定義がまだ分かっていない isB() を呼び出すとします。
isA() は、表れたパターンがコンパイルされるたびに呼び出されます。
もし isA() が isC() も呼び出していてその定義が分かっているなら、
isC() は一度だけ呼び出されます。

=item 7

=begin original

There were some races and very long hangs should one thread be compiling
the same property as another simultaneously.  These have now been fixed.

=end original

あるスレッドが他のスレッドと同時に同じ特性をコンパイルするときに
競合したりとても長い間ハングしたりしていました。
これは修正されました。

=back

=item *

=begin original

Fixed a failure to match properly.

=end original

適切にマッチングするのに失敗するのが修正されました。

=begin original

An EXACTFish regnode has a finite length it can hold for the string
being matched.  If that length is exceeded, a second node is used for
the next segment of the string, for as many regnodes as are needed.
Care has to be taken where to break the string, in order to deal
multi-character folds in Unicode correctly. If we want to break a
string at a place which could potentially be in the middle of a
multi-character fold, we back off one (or more) characters, leaving
a shorter EXACTFish regnode. This backing off mechanism contained
an off-by-one error.
L<[perl #133756]|https://rt.perl.org/Ticket/Display.html?id=133756>.

=end original

EXACTF 風の regnode はマッチングした文字列を保持しておくための
有限の長さを持ちます。
この長さを超えると、2 番目のノードが文字列の次の部分のために使われ、
必要な分だけの regnode が使われます。
文字列を分割するときには、Unicode の複数文字畳み込みを扱うために
注意が必要です。
複数文字畳み込みの途中になり得る場所で文字列を分割したい場合、
より短い EXACTF 風 regnode のままにします。
この後退機構に off-by-one エラーがありました。
L<[perl #133756]|https://rt.perl.org/Ticket/Display.html?id=133756>.

=item *

=begin original

A bare C<eof> call with no previous file handle now returns true.
L<[perl #133721]|https://rt.perl.org/Ticket/Display.html?id=133721>

=end original

以前のファイルハンドルのない、裸の C<eof> 呼び出しは真を
返すようになりました。
L<[perl #133721]|https://rt.perl.org/Ticket/Display.html?id=133721>

=item *

=begin original

Failing to compile a format now aborts compilation.  Like other errors
in sub-parses this could leave the parser in a strange state, possibly
crashing perl if compilation continued.
L<[perl #132158]|https://rt.perl.org/Ticket/Display.html?id=132158>

=end original

フォーマットのコンパイルに失敗するとコンパイルを中断するようになりました。
その他の部分パース中のエラーと同様、これはパーサをおかしな状態のままに
することがあり、コンパイルを続行すると perl がクラッシュすることがありました。
L<[perl #132158]|https://rt.perl.org/Ticket/Display.html?id=132158>

=item *

=begin original

If an in-place edit is still in progress during global destruction and
the process exit code (as stored in C<$?>) is zero, perl will now
treat the in-place edit as successful, replacing the input file with
any output produced.

=end original

大域破壊中にまだその場編集が作業中で、(C<$?> に保管されている) 
プロセス終了コードがゼロの場合、
perl はその場編集が成功したものとして扱い、
入力ファイルを出力されたファイルで置き換えるようになりました。

=begin original

This allows code like:

=end original

これにより次のようなコードは:

  perl -i -ne 'print "Foo"; last'

=begin original

to replace the input file, while code like:

=end original

入力ファイルを置き換える一方、次のようなコードは:

  perl -i -ne 'print "Foo"; die'

=begin original

will not.  Partly resolves
L<[perl #133659]|https://rt.perl.org/Ticket/Display.html?id=133659>.

=end original

置き換えません。
L<[perl #133659]|https://rt.perl.org/Ticket/Display.html?id=133659>
で部分的に解決しました。

=item *

=begin original

A regression in 5.28 caused the following code to fail

=end original

5.28 での退行により、次のコードは失敗していました:

 close(STDIN); open(CHILD, "|wc -l")'

=begin original

because the child's stdin would be closed on exec. This has now been fixed.

=end original

なぜなら子の標準入力は実行時に閉じられているからです。
これは修正されました。

=item *

=begin original

Fixed an issue where compiling a regexp containing both compile-time
and run-time code blocks could lead to trying to compile something
which is invalid syntax.

=end original

コンパイル時コードブロックと実行時コードブロックの両方を含む正規表現を
コンパイルするときに、不正な文法を持つものを
コンパイルしようとすることがある問題を修正しました。

=item *

=begin original

Fixed build failures with C<< -DNO_LOCALE_NUMERIC >> and
C<< -DNO_LOCALE_COLLATE >>.
L<[perl #133696]|https://rt.perl.org/Ticket/Display.html?id=133696>.

=end original

C<< -DNO_LOCALE_NUMERIC >> と C<< -DNO_LOCALE_COLLATE >> での
ビルド失敗が修正されました。
L<[perl #133696]|https://rt.perl.org/Ticket/Display.html?id=133696>.

=item *

=begin original

Prevent the tests in F<< ext/B/t/strict.t >> from being skipped.
L<[perl #133713]|https://rt.perl.org/Ticket/Display.html?id=133713>.

=end original

F<< ext/B/t/strict.t >> のテストが飛ばされないようになりました。
L<[perl #133713]|https://rt.perl.org/Ticket/Display.html?id=133713>.

=item *

=begin original

C<< /di >> nodes ending or beginning in I<s> are now C<< EXACTF >>. We do not
want two C<< EXACTFU >> to be joined together during optimization,
and to form a C<< ss >>, C<< sS >>, C<< Ss >> or C<< SS >> sequence;
they are the only multi-character sequences which may match differently
under C<< /ui >> and C<< /di >>.

=end original

I<s> で始まるか終わる C<< /di >> ノードは
C<< EXACTF >> になりました。
私たちは最適化中に二つの C<< EXACTFU >> を結合したり、
C<< ss >>, C<< sS >>, C<< Ss >>, C<< SS >> のような並びを作ったり
したくありません;
これらは C<< /ui >> や C<< /di >> の基で異なってマッチングするかもしれない
複数文字並びのみです。

=back

=head1 Acknowledgements

=begin original

Perl 5.30.0 represents approximately 11 months of development since Perl
5.28.0 and contains approximately 620,000 lines of changes across 1,300
files from 58 authors.

=end original

Perl 5.30.0 は、Perl 5.28.0 以降、58 人の作者によって、
1,300 のファイルに約 620,000 行の変更を加えて、
約 11 ヶ月開発されてきました。

=begin original

Excluding auto-generated files, documentation and release tools, there were
approximately 510,000 lines of changes to 750 .pm, .t, .c and .h files.

=end original

自動生成ファイル、文書、リリースツールを除くと、750 の .pm, .t, .c,
.h ファイルに約 510,000 行の変更を加えました。

=begin original

Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.30.0:

=end original

Perl は、活気のあるユーザーと開発者のコミュニティのおかげで 30 年を超えて
繁栄しています。
以下の人々が、Perl 5.30.0 になるための改良に貢献したことが分かっています:

Aaron Crane, Abigail, Alberto SimE<otilde>es, Alexandr Savca, Andreas KE<ouml>nig, Andy
Dougherty, Aristotle Pagaltzis, Brian Greenfield, Chad Granum, Chris
'BinGOs' Williams, Craig A. Berry, Dagfinn Ilmari MannsE<aring>ker, Dan Book, Dan
Dedrick, Daniel Dragan, Dan Kogai, David Cantrell, David Mitchell, Dominic
Hargreaves, E. Choroba, Ed J, Eugen Konkov, FranE<ccedil>ois Perrad, Graham Knop,
Hauke D, H.Merijn Brand, Hugo van der Sanden, Jakub Wilk, James Clarke,
James E Keenan, Jerry D. Hedden, Jim Cromie, John SJ Anderson, Karen
Etheridge, Karl Williamson, Leon Timmermans, Matthias Bethke, Nicholas
Clark, Nicolas R., Niko Tyni, Pali, Petr PE<iacute>saE<0x159>, Phil Pearl (Lobbes),
Richard Leach, Ryan Voots, Sawyer X, Shlomi Fish, Sisyphus, Slaven Rezic,
Steve Hay, Sullivan Beck, Tina ME<uuml>ller, Tomasz Konojacki, Tom Wyant, Tony
Cook, Unicode Consortium, Yves Orton, Zak B. Elep.

=begin original

The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of most of the (very much appreciated) contributors who reported
issues to the Perl bug tracker. Noteworthy in this release were the large
number of bug fixes made possible by Sergey Aleynikov's high quality perlbug
reports for issues he discovered by fuzzing with AFL.

=end original

これはバージョンコントロール履歴から自動的に生成しているので、ほぼ確実に
不完全です。
特に、Perl バグトラッカーに問題を報告をしてくれた (とてもありがたい)貢献者の
名前を含んでいません。
このリリースで注目するべき点は、多くのバグ修正は、 AFL による
ファジングによって発見された Sergey Aleynikov による高品質の
perlbug 報告によって行われたということです。

=begin original

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

=end original

このバージョンに含まれている変更の多くは、Perl コアに含まれている CPAN
モジュール由来のものです。
私たちは Perl の発展を助けている CPAN コミュニティ全体に感謝します。

=begin original

For a more complete list of all of Perl's historical contributors, please
see the F<AUTHORS> file in the Perl source distribution.

=end original

全ての Perl の歴史的な貢献者のより完全な一覧については、どうか Perl ソース
配布に含まれている F<AUTHORS> を参照してください。

=head1 Reporting Bugs

(バグ報告)

=begin original

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/>.  There may also be information at
L<http://www.perl.org/>, the Perl Home Page.

=end original

もしバグと思われるものを見つけたら、 L<https://rt.perl.org/> にある perl バグ
データベースを確認してください。
Perl ホームページ、L<http://www.perl.org/> にも情報があります。

=begin original

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

=end original

もしまだ報告されていないバグだと確信したら、そのリリースに含まれている
L<perlbug> プログラムを実行してください。
バグの再現スクリプトを十分小さく、しかし有効なコードに切りつめることを
意識してください。
バグレポートは C<perl -V> の出力と一緒に perlbug@perl.org に送られ
Perl porting チームによって解析されます。

=begin original

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=end original

報告しようとしているバグがセキュリティに関するもので、公開されている
メーリングリストに送るのが不適切なものなら、バグの報告方法の詳細について
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION> を参照してください。

=head1 Give Thanks

(感謝を伝える)

=begin original

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

=end original

もし Perl 5 でなされた作業について Perl 5 Porters に感謝したいと考えたなら、
C<perlthanks> プログラムを実行することでそうできます:

    perlthanks

=begin original

This will send an email to the Perl 5 Porters list with your show of thanks.

=end original

これは Perl 5 Porters メーリングリストにあなたの感謝の言葉をメールします。

=head1 SEE ALSO

=begin original

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

=end original

変更点の完全な詳細を見る方法については F<Changes> ファイル。

=begin original

The F<INSTALL> file for how to build Perl.

=end original

Perl のビルド方法については F<INSTALL> ファイル。

=begin original

The F<README> file for general stuff.

=end original

一般的なことについては F<README> ファイル。

=begin original

The F<Artistic> and F<Copying> files for copyright information.

=end original

著作権情報については F<Artistic> 及び F<Copying> ファイル。

=cut

=begin meta

Translate: SHIRAKATA Kentaro <argrath@ub32.org>
Status: completed

=end meta

