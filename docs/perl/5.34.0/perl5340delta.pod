
=encoding utf8

=head1 NAME

=begin original

perldelta - what is new for perl v5.34.0

=end original

perl5340delta - perl v5.34.0 での変更点

=head1 DESCRIPTION

=begin original

This document describes differences between the 5.32.0 release and the 5.34.0
release.

=end original

この文書は 5.32.0 リリースと 5.34.0 リリースの変更点を記述しています。

=begin original

If you are upgrading from an earlier release such as 5.30.0, first read
L<perl5320delta>, which describes differences between 5.30.0 and 5.32.0.

=end original

5.30.0 のような以前のリリースから更新する場合は、まず 5.30.0 と
5.32.0 の違いについて記述している L<perl5320delta> を読んでください。

=head1 Core Enhancements

(コアの拡張)

=head2 Experimental Try/Catch Syntax

(実験的な Try/Catch 構文)

=begin original

An initial experimental attempt at providing C<try>/C<catch> notation has
been added.

=end original

C<try>/C<catch> 記法を提供するための初期の実験的な試みが追加されました。

    use feature 'try';

    try {
        a_function();
    }
    catch ($e) {
        warn "An error occurred: $e";
    }

=begin original

For more information, see L<perlsyn/"Try Catch Exception Handling">.

=end original

さらなる情報については、L<perlsyn/"Try Catch Exception Handling"> を
参照してください。

=head2 C<qr/{,n}/> is now accepted

(C<qr/{,n}/> が受け入れられます)

=begin original

An empty lower bound is now accepted for regular expression quantifiers,
like C<{,3}>.

=end original

C<{,3}> のような、正規表現量指定子の下弦を空にするのが
許されるようになりました。

=head2 Blanks freely allowed within but adjacent to curly braces

(中かっこの隣に自由に空白を入れられます)

=begin original

(in double-quotish contexts and regular expression patterns)

=end original

(ダブルクォート風コンテキストと正規表現の内部)

=begin original

This means you can write things like S<C<\x{ FFFC }>> if you like.  This
applies to all such constructs, namely C<\b{}>, C<\g{}>, C<\k{}>,
C<\N{}>, C<\o{}>, and C<\x{}>; as well as the regular expression
quantifier C<{I<m>,I<n>}>.  C<\p{}> and C<\P{}> retain their
already-existing, even looser, rules mandated by the Unicode standard
(see L<perluniprops/Properties accessible through \p{} and \P{}>).

=end original

これは、もし望むなら S<C<\x{ FFFC }>> のように書けるということです。
これはこのような構文全て、つまり C<\b{}>, C<\g{}>, C<\k{}>,
C<\N{}>, C<\o{}>, C<\x{}> に適用されます;
正規表現量指定子 C<{I<m>,I<n>}> も同様です。
C<\p{}> と C<\P{}> は、例え緩い方でも、既にある Unicode 標準
(L<perluniprops/Properties accessible through \p{} and \P{}> 参照) で
定められた規則のままです。

=begin original

This ability is in effect regardless of the presence of the C</x>
regular expression pattern modifier.

=end original

この機能は、C</x> 正規表現パターン修飾子の有無に関わらず有効です。

=begin original

Additionally, the comma in a regular expression braced quantifier may
have blanks (tabs or spaces) before and/or after the comma, like
S<C<qr/a{ 5, 7 }/>>.

=end original

さらに、正規表現中かっこ量指定子のカンマは、
S<C<qr/a{ 5, 7 }/>> のように、カンマの前後に空白
(タブかスペース)を置くことができます。

=head2 New octal syntax C<0oI<ddddd>>

(新しい 8 進構文 C<0oI<ddddd>>)

=begin original

It is now possible to specify octal literals with C<0o> prefixes,
as in C<0o123_456>, parallel to the existing construct to specify
hexadecimal literal C<0xI<ddddd>> and binary literal C<0bI<ddddd>>.
Also, the builtin C<oct()> function now accepts this new syntax.

=end original

既にある 16 進リテラル C<0xI<ddddd>> と 2 進リテラル C<0bI<ddddd>> の
構文と並列な、C<0o123_456> のような C<0o> 接頭辞を付けた 8 進
リテラルを指定できるようになりました。
また、組み込みの C<oct()> 関数はこの新しい文法を
受け付けるようになりました。

=begin original

See L<perldata/Scalar value constructors> and L<perlfunc/oct EXPR>.

=end original

L<perldata/Scalar value constructors> と L<perlfunc/oct EXPR> を
参照してください。

=head1 Performance Enhancements

(性能改善)

=over 4

=item *

=begin original

Fix a memory leak in RegEx
[L<GH #18604|https://github.com/Perl/perl5/issues/18604>]

=end original

RegEx のメモリリークを修正しました
[L<GH #18604|https://github.com/Perl/perl5/issues/18604>]

=back

=head1 Modules and Pragmata

(モジュールとプラグマ)

=head2 New Modules and Pragmata

(新しいモジュールとプラグマ)

=over 4

=item *

=begin original

L<ExtUtils::PL2Bat> 0.004 has been added to the Perl core.

=end original

L<ExtUtils::PL2Bat> 0.004 が Perl コアに追加されました。

=begin original

This module is a generalization of the C<pl2bat> script. It being a script has
led to at least two forks of this code; this module will unify them under one
implementation with tests.

=end original

このモジュールは、C<pl2bat> スクリプトの一般化です。
これはスクリプトとして、このコードから少なくとも二つのフォークを
引き起こしました; このモジュールはテスト付きの一つの実装として
統合します。

=back

=head2 Updated Modules and Pragmata

(更新されたモジュールとプラグマ)

=over 4

=item *

=begin original

L<Archive::Tar> has been upgraded from version 2.36 to 2.38.

=end original

L<Archive::Tar> はバージョン 2.36 から 2.38 に更新されました。

=item *

=begin original

L<autodie> has been upgraded from version 2.32 to 2.34.

=end original

L<autodie> はバージョン 2.32 から 2.34 に更新されました。

=item *

=begin original

L<B> has been upgraded from version 1.80 to 1.82.

=end original

L<B> はバージョン 1.80 から 1.82 に更新されました。

=item *

=begin original

L<B::Deparse> has been upgraded from version 1.54 to 1.56.

=end original

L<B::Deparse> はバージョン 1.54 から 1.56 に更新されました。

=item *

=begin original

L<bytes> has been upgraded from version 1.07 to 1.08.

=end original

L<bytes> はバージョン 1.07 から 1.08 に更新されました。

=item *

=begin original

L<Carp> has been upgraded from version 1.50 to 1.52.

=end original

L<Carp> はバージョン 1.50 から 1.52 に更新されました。

=item *

=begin original

L<Compress::Raw::Bzip2> has been upgraded from version 2.093 to 2.101.

=end original

L<Compress::Raw::Bzip2> はバージョン 2.093 から 2.101 に更新されました。

=item *

=begin original

L<Compress::Raw::Zlib> has been upgraded from version 2.093 to 2.101.

=end original

L<Compress::Raw::Zlib> はバージョン 2.093 から 2.101 に更新されました。

=item *

=begin original

L<Config::Perl::V> has been upgraded from version 0.32 to 0.33.

=end original

L<Config::Perl::V> はバージョン 0.32 から 0.33 に更新されました。

=item *

=begin original

L<CPAN> has been upgraded from version 2.27 to 2.28.

=end original

L<CPAN> はバージョン 2.27 から 2.28 に更新されました。

=item *

=begin original

L<Data::Dumper> has been upgraded from version 2.174 to 2.179.

=end original

L<Data::Dumper> はバージョン 2.174 から 2.179 に更新されました。

=item *

=begin original

L<DB> has been upgraded from version 1.58 to 1.59.

=end original

L<DB> はバージョン 1.58 から 1.59 に更新されました。

=item *

=begin original

L<DB_File> has been upgraded from version 1.853 to 1.855.

=end original

L<DB_File> はバージョン 1.853 から 1.855 に更新されました。

=item *

=begin original

L<Devel::Peek> has been upgraded from version 1.28 to 1.30.

=end original

L<Devel::Peek> はバージョン 1.28 から 1.30 に更新されました。

=item *

=begin original

L<Devel::PPPort> has been upgraded from version 3.57 to 3.62.

=end original

L<Devel::PPPort> はバージョン 3.57 から 3.62 に更新されました。

=begin original

New C<PERL_VERSION_*> comparison macros are now available.

=end original

新しい C<PERL_VERSION_*> 比較マクロが利用可能になりました。

=begin original

C<ppport.h --api-info> no longer includes non-API info unless that is the only
match

=end original

C<ppport.h --api-info> は、唯一のマッチングでない限り
非 API 情報を含まなくなりました。

=item *

=begin original

L<Digest> has been upgraded from version 1.17_01 to 1.19.

=end original

L<Digest> はバージョン 1.17_01 から 1.19 に更新されました。

=item *

=begin original

L<Digest::MD5> has been upgraded from version 2.55_01 to 2.58.

=end original

L<Digest::MD5> はバージョン 2.55_01 から 2.58 に更新されました。

=item *

=begin original

L<DynaLoader> has been upgraded from version 1.47 to 1.50.

=end original

L<DynaLoader> はバージョン 1.47 から 1.50 に更新されました。

=item *

=begin original

L<Encode> has been upgraded from version 3.06 to 3.08.

=end original

L<Encode> はバージョン 3.06 から 3.08 に更新されました。

=item *

=begin original

L<Env> has been upgraded from version 1.04 to 1.05.

=end original

L<Env> はバージョン 1.04 から 1.05 に更新されました。

=item *

=begin original

L<Errno> has been upgraded from version 1.30 to 1.33.

=end original

L<Errno> はバージョン 1.30 から 1.33 に更新されました。

=item *

=begin original

L<experimental> has been upgraded from version 0.020 to 0.024.

=end original

L<experimental> はバージョン 0.020 から 0.024 に更新されました。

=item *

=begin original

L<Exporter> has been upgraded from version 5.74 to 5.76.

=end original

L<Exporter> はバージョン 5.74 から 5.76 に更新されました。

=item *

=begin original

L<ExtUtils::CBuilder> has been upgraded from version 0.280234 to 0.280236.

=end original

L<ExtUtils::CBuilder> はバージョン 0.280234 から 0.280236 に更新されました。

=item *

=begin original

L<ExtUtils::Install> has been upgraded from version 2.14 to 2.20.

=end original

L<ExtUtils::Install> はバージョン 2.14 から 2.20 に更新されました。

=item *

=begin original

L<ExtUtils::MakeMaker> has been upgraded from version 7.44 to 7.62.

=end original

L<ExtUtils::MakeMaker> はバージョン 7.44 から 7.62 に更新されました。

=item *

=begin original

L<ExtUtils::Manifest> has been upgraded from version 1.72 to 1.73.

=end original

L<ExtUtils::Manifest> はバージョン 1.72 から 1.73 に更新されました。

=item *

=begin original

L<ExtUtils::Miniperl> has been upgraded from version 1.09 to 1.10.

=end original

L<ExtUtils::Miniperl> はバージョン 1.09 から 1.10 に更新されました。

=item *

=begin original

L<ExtUtils::ParseXS> has been upgraded from version 3.40 to 3.43.

=end original

L<ExtUtils::ParseXS> はバージョン 3.40 から 3.43 に更新されました。

=item *

=begin original

L<ExtUtils::Typemaps> has been upgraded from version 3.38 to 3.43.

=end original

L<ExtUtils::Typemaps> はバージョン 3.38 から 3.43 に更新されました。

=item *

=begin original

L<Fcntl> has been upgraded from version 1.13 to 1.14.

=end original

L<Fcntl> はバージョン 1.13 から 1.14 に更新されました。

=item *

=begin original

L<feature> has been upgraded from version 1.58 to 1.64.

=end original

L<feature> はバージョン 1.58 から 1.64 に更新されました。

=begin original

Added the default enabled C<bareword_filehandles> feature.

=end original

デフォルトで有効な C<bareword_filehandles> 機能の追加。

=begin original

A new L<multidimensional|feature/"The 'multidimensional' feature">
feature has been added, which is enabled by
default but allows turning off L<multi-dimensional array
emulation|perldata/Multi-dimensional array emulation>.

=end original

新しい L<multidimensional|feature/"The 'multidimensional' feature">
機能が追加されました; これはデフォルトで有効ですが
L<多元配列エミュレーション
|perldata/Multi-dimensional array emulation> を
オフにできます。

=item *

=begin original

L<File::Copy> has been upgraded from version 2.34 to 2.35.

=end original

L<File::Copy> はバージョン 2.34 から 2.35 に更新されました。

=item *

=begin original

L<File::Fetch> has been upgraded from version 0.56 to 1.00.

=end original

L<File::Fetch> はバージョン 0.56 から 1.00 に更新されました。

=item *

=begin original

L<File::Find> has been upgraded from version 1.37 to 1.39.

=end original

L<File::Find> はバージョン 1.37 から 1.39 に更新されました。

=item *

=begin original

L<File::Path> has been upgraded from version 2.16 to 2.18.

=end original

L<File::Path> はバージョン 2.16 から 2.18 に更新されました。

=item *

=begin original

L<File::Spec> has been upgraded from version 3.78 to 3.80.

=end original

L<File::Spec> はバージョン 3.78 から 3.80 に更新されました。

=item *

=begin original

L<File::Temp> has been upgraded from version 0.2309 to 0.2311.

=end original

L<File::Temp> はバージョン 0.2309 から 0.2311 に更新されました。

=item *

=begin original

L<Filter::Util::Call> has been upgraded from version 1.59 to 1.60.

=end original

L<Filter::Util::Call> はバージョン 1.59 から 1.60 に更新されました。

=item *

=begin original

L<FindBin> has been upgraded from version 1.51 to 1.52.

=end original

L<FindBin> はバージョン 1.51 から 1.52 に更新されました。

=item *

=begin original

L<GDBM_File> has been upgraded from version 1.18 to 1.19.

=end original

L<GDBM_File> はバージョン 1.18 から 1.19 に更新されました。

=begin original

New functions and compatibility for newer versions of GDBM.
[L<GH #18435|https://github.com/Perl/perl5/pull/18435>]

=end original

より新しいバージョンの GDBM のための新しい関数と互換性。
[L<GH #18435|https://github.com/Perl/perl5/pull/18435>]

=item *

=begin original

L<Getopt::Long> has been upgraded from version 2.51 to 2.52.

=end original

L<Getopt::Long> はバージョン 2.51 から 2.52 に更新されました。

=item *

=begin original

L<Getopt::Std> has been upgraded from version 1.12 to 1.13.

=end original

L<Getopt::Std> はバージョン 1.12 から 1.13 に更新されました。

=item *

=begin original

L<Hash::Util> has been upgraded from version 0.23 to 0.25.

=end original

L<Hash::Util> はバージョン 0.23 から 0.25 に更新されました。

=item *

=begin original

L<Hash::Util::FieldHash> has been upgraded from version 1.20 to 1.21.

=end original

L<Hash::Util::FieldHash> はバージョン 1.20 から 1.21 に更新されました。

=item *

=begin original

L<I18N::LangTags> has been upgraded from version 0.44 to 0.45.

=end original

L<I18N::LangTags> はバージョン 0.44 から 0.45 に更新されました。

=item *

=begin original

L<if> has been upgraded from version 0.0608 to 0.0609.

=end original

L<if> はバージョン 0.0608 から 0.0609 に更新されました。

=item *

=begin original

L<IO> has been upgraded from version 1.43 to 1.46.

=end original

L<IO> はバージョン 1.43 から 1.46 に更新されました。

=begin original

IO::Socket now stores error messages in C<$IO::Socket::errstr>, in
addition to in C<$@>.

=end original

IO::Socket は、エラーメッセージを C<$@> に加えて
C<$IO::Socket::errstr> にも保管するようになりました。

=begin original

The C<error> method now reports the error state for both the input and
output streams for sockets and character devices.  Similarly
C<clearerr> now clears the error state for both streams.

=end original

C<error> メソッドは、ソケットやキャラクタデバイスに対して
入力と出力の両方のストリームのエラー状態を報告します。
同様に、C<clearerr> は両方のストリームのエラー状態をクリアします。

=begin original

A spurious error reported for regular file handles has been
fixed in L<IO::Handle>.
[L<GH #18019|https://github.com/Perl/perl5/issues/18019>]

=end original

中将のファイルハンドルに対して報告されていた誤ったエラーは
L<IO::Handle> で修正されました。
[L<GH #18019|https://github.com/Perl/perl5/issues/18019>]

=item *

=begin original

IO-Compress has been upgraded from version 2.093 to 2.102.

=end original

IO-Compress はバージョン 2.093 から 2.102 に更新されました。

=begin original

bin/zipdetails version 2.02

=end original

bin/zipdetails バージョン 2.02

=item *

=begin original

L<IO::Socket::IP> has been upgraded from version 0.39 to 0.41.

=end original

L<IO::Socket::IP> はバージョン 0.39 から 0.41 に更新されました。

=item *

=begin original

L<IO::Zlib> has been upgraded from version 1.10 to 1.11.

=end original

L<IO::Zlib> はバージョン 1.10 から 1.11 に更新されました。

=item *

=begin original

L<IPC::SysV> has been upgraded from version 2.07 to 2.09.

=end original

L<IPC::SysV> はバージョン 2.07 から 2.09 に更新されました。

=item *

=begin original

L<JSON::PP> has been upgraded from version 4.04 to 4.06.

=end original

L<JSON::PP> はバージョン 4.04 から 4.06 に更新されました。

=item *

=begin original

The libnet distribution has been upgraded from version 3.11 to 3.13.

=end original

distribution はバージョン 3.11 から 3.13 に更新されました。

=item *

=begin original

L<locale> has been upgraded from version 1.09 to 1.10.

=end original

L<locale> はバージョン 1.09 から 1.10 に更新されました。

=item *

=begin original

L<Math::Complex> has been upgraded from version 1.5901 to 1.5902.

=end original

L<Math::Complex> はバージョン 1.5901 から 1.5902 に更新されました。

=item *

=begin original

L<MIME::Base64> has been upgraded from version 3.15 to 3.16.

=end original

L<MIME::Base64> はバージョン 3.15 から 3.16 に更新されました。

=item *

=begin original

L<Module::CoreList> has been upgraded from version 5.20200620 to 5.20210520.

=end original

L<Module::CoreList> はバージョン 5.20200620 から 5.20210520 に更新されました。

=item *

=begin original

L<Module::Load> has been upgraded from version 0.34 to 0.36.

=end original

L<Module::Load> はバージョン 0.34 から 0.36 に更新されました。

=item *

=begin original

L<Module::Load::Conditional> has been upgraded from version 0.70 to 0.74.

=end original

L<Module::Load::Conditional> はバージョン 0.70 から 0.74 に更新されました。

=item *

=begin original

L<mro> has been upgraded from version 1.23 to 1.25_001.

=end original

L<mro> はバージョン 1.23 から 1.25_001 に更新されました。

=item *

=begin original

L<Net::Ping> has been upgraded from version 2.72 to 2.74.

=end original

L<Net::Ping> はバージョン 2.72 から 2.74 に更新されました。

=item *

=begin original

L<NEXT> has been upgraded from version 0.67_01 to 0.68.

=end original

L<NEXT> はバージョン 0.67_01 から 0.68 に更新されました。

=item *

=begin original

L<ODBM_File> has been upgraded from version 1.16 to 1.17.

=end original

L<ODBM_File> はバージョン 1.16 から 1.17 に更新されました。

=item *

=begin original

L<Opcode> has been upgraded from version 1.47 to 1.50.

=end original

L<Opcode> はバージョン 1.47 から 1.50 に更新されました。

=item *

=begin original

L<overload> has been upgraded from version 1.31 to 1.33.

=end original

L<overload> はバージョン 1.31 から 1.33 に更新されました。

=item *

=begin original

L<perlfaq> has been upgraded from version 5.20200523 to 5.20210411.

=end original

L<perlfaq> はバージョン 5.20200523 から 5.20210411 に更新されました。

=item *

=begin original

L<PerlIO::encoding> has been upgraded from version 0.28 to 0.30.

=end original

L<PerlIO::encoding> はバージョン 0.28 から 0.30 に更新されました。

=item *

=begin original

L<PerlIO::mmap> has been upgraded from version 0.016 to 0.017.

=end original

L<PerlIO::mmap> はバージョン 0.016 から 0.017 に更新されました。

=item *

=begin original

L<PerlIO::scalar> has been upgraded from version 0.30 to 0.31.

=end original

L<PerlIO::scalar> はバージョン 0.30 から 0.31 に更新されました。

=item *

=begin original

L<PerlIO::via::QuotedPrint> has been upgraded from version 0.08 to 0.09.

=end original

L<PerlIO::via::QuotedPrint> はバージョン 0.08 から 0.09 に更新されました。

=item *

=begin original

L<Pod::Checker> has been upgraded from version 1.73 to 1.74.

=end original

L<Pod::Checker> はバージョン 1.73 から 1.74 に更新されました。

=item *

=begin original

L<Pod::Html> has been upgraded from version 1.25 to 1.27.

=end original

L<Pod::Html> はバージョン 1.25 から 1.27 に更新されました。

=item *

=begin original

L<Pod::Simple> has been upgraded from version 3.40 to 3.42.

=end original

L<Pod::Simple> はバージョン 3.40 から 3.42 に更新されました。

=item *

=begin original

L<Pod::Usage> has been upgraded from version 1.69 to 2.01.

=end original

L<Pod::Usage> はバージョン 1.69 から 2.01 に更新されました。

=item *

=begin original

L<POSIX> has been upgraded from version 1.94 to 1.97.

=end original

L<POSIX> はバージョン 1.94 から 1.97 に更新されました。

=begin original

POSIX::signbit() behaviour has been improved.
[L<GH #18441|https://github.com/Perl/perl5/pull/18441>]

=end original

POSIX::signbit() の振る舞いが改良されました。
[L<GH #18441|https://github.com/Perl/perl5/pull/18441>]

=begin original

Documentation for C<asctime> clarifies that the result is always in English.
(Use C<strftime> for a localized result.)

=end original

C<asctime> の文書は、結果が常に英語になることが明確化されました。
(地域化された結果のためには C<strftime> を使ってください。)

=item *

=begin original

L<re> has been upgraded from version 0.40 to 0.41.

=end original

L<re> はバージョン 0.40 から 0.41 に更新されました。

=begin original

(See under L</Internal Changes> for more information.)

=end original

(さらなる情報については L</Internal Changes> を参照してください。)

=item *

=begin original

L<Safe> has been upgraded from version 2.41 to 2.43.

=end original

L<Safe> はバージョン 2.41 から 2.43 に更新されました。

=item *

=begin original

L<Socket> has been upgraded from version 2.029 to 2.031.

=end original

L<Socket> はバージョン 2.029 から 2.031 に更新されました。

=item *

=begin original

L<Storable> has been upgraded from version 3.21 to 3.23.

=end original

L<Storable> はバージョン 3.21 から 3.23 に更新されました。

=item *

=begin original

L<strict> has been upgraded from version 1.11 to 1.12.

=end original

L<strict> はバージョン 1.11 から 1.12 に更新されました。

=item *

=begin original

L<subs> has been upgraded from version 1.03 to 1.04.

=end original

L<subs> はバージョン 1.03 から 1.04 に更新されました。

=item *

=begin original

L<Symbol> has been upgraded from version 1.08 to 1.09.

=end original

L<Symbol> はバージョン 1.08 から 1.09 に更新されました。

=item *

=begin original

L<Test::Harness> has been upgraded from version 3.42 to 3.43.

=end original

L<Test::Harness> はバージョン 3.42 から 3.43 に更新されました。

=item *

=begin original

L<Test::Simple> has been upgraded from version 1.302175 to 1.302183.

=end original

L<Test::Simple> はバージョン 1.302175 から 1.302183 に更新されました。

=item *

=begin original

L<Text::Balanced> has been upgraded from version 2.03 to 2.04.

=end original

L<Text::Balanced> はバージョン 2.03 から 2.04 に更新されました。

=item *

=begin original

L<threads> has been upgraded from version 2.25 to 2.26.

=end original

L<threads> はバージョン 2.25 から 2.26 に更新されました。

=item *

=begin original

L<threads::shared> has been upgraded from version 1.61 to 1.62.

=end original

L<threads::shared> はバージョン 1.61 から 1.62 に更新されました。

=item *

=begin original

L<Tie::RefHash> has been upgraded from version 1.39 to 1.40.

=end original

L<Tie::RefHash> はバージョン 1.39 から 1.40 に更新されました。

=item *

=begin original

L<Time::HiRes> has been upgraded from version 1.9764 to 1.9767.

=end original

L<Time::HiRes> はバージョン 1.9764 から 1.9767 に更新されました。

=item *

=begin original

L<Time::Local> has been upgraded from version 1.28 to 1.30.

=end original

L<Time::Local> はバージョン 1.28 から 1.30 に更新されました。

=item *

=begin original

L<Unicode::Collate> has been upgraded from version 1.27 to 1.29.

=end original

L<Unicode::Collate> はバージョン 1.27 から 1.29 に更新されました。

=item *

=begin original

L<Unicode::Normalize> has been upgraded from version 1.27 to 1.28.

=end original

L<Unicode::Normalize> はバージョン 1.27 から 1.28 に更新されました。

=item *

=begin original

L<utf8> has been upgraded from version 1.22 to 1.24.

=end original

L<utf8> はバージョン 1.22 から 1.24 に更新されました。

=item *

=begin original

L<version> has been upgraded from version 0.9924 to 0.9928.

=end original

L<version> はバージョン 0.9924 から 0.9928 に更新されました。

=item *

=begin original

L<warnings> has been upgraded from version 1.47 to 1.51.

=end original

L<warnings> はバージョン 1.47 から 1.51 に更新されました。

=item *

=begin original

L<Win32> has been upgraded from version 0.53 to 0.57.

=end original

L<Win32> はバージョン 0.53 から 0.57 に更新されました。

=begin original

Fix calling convention for C<PFNRegGetValueA>.

=end original

C<PFNRegGetValueA> の呼び出し仕様を修正しました。

=begin original

Added C<Win32::IsSymlinkCreationAllowed()>,
C<Win32::IsDeveloperModeEnabled()>, and C<Win32::GetProcessPrivileges()>.

=end original

C<Win32::IsSymlinkCreationAllowed()>,
C<Win32::IsDeveloperModeEnabled()>, C<Win32::GetProcessPrivileges()> が
追加されました。

=begin original

Removed old code for versions before Windows 2000.

=end original

Windows 2000 より前のバージョンのための古いコードが削除されました。

=item *

=begin original

L<XS::APItest> has been upgraded from version 1.09 to 1.16.

=end original

L<XS::APItest> はバージョン 1.09 から 1.16 に更新されました。

=item *

=begin original

L<XS::Typemap> has been upgraded from version 0.17 to 0.18.

=end original

L<XS::Typemap> はバージョン 0.17 から 0.18 に更新されました。

=back

=head1 Documentation

(文書)

=head2 New Documentation

(新しい文書)

=head3 L<perldocstyle>

=begin original

This document is a guide for the authorship and maintenance of the
documentation that ships with Perl.

=end original

この文書は、Perl に同梱されている文書の作成と保守に関するガイドです。

=head3 L<perlgov>

=begin original

This document describes the goals, scope, system, and rules for Perl's new
governance model.

=end original

この文書は Perl の新しい統治モデルに関するゴール、スコープ、システム、
ルールを記述しています。

=begin original

Other pod files, most notably L<perlpolicy>, were amended to reflect
its adoption.

=end original

その他の pod ファイル、特に  L<perlpolicy> は、これの採用を反映して
修正されました。

=head2 Changes to Existing Documentation

(既存の文書の変更)

=begin original

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, open an issue
at L<https://github.com/Perl/perl5/issues>.

=end original

私たちはこの文書で挙げられた変更を反映するように文書を更新しようとしています。
もし抜けている物を発見したら、
L<https://github.com/Perl/perl5/issues> でイシューを開いてください。

=begin original

Additionally, the following selected changes have been made:

=end original

それに加えて、以下のような変更が行われました。

=over 4

=item *

=begin original

L<perlapi>, L<perlguts>, L<perlxs>, and L<perlxstut> now prefer C<SvPVbyte>
over C<SvPV>.

=end original

L<perlapi>, L<perlguts>, L<perlxs>, and L<perlxstut> は
C<SvPV> より C<SvPVbyte> を好むようになりました。

=item *

=begin original

References to B<Pumpking> have been replaced with a more accurate term or
B<Steering Council> where appropriate.

=end original

B<Pumpking> への参照を、より正確な用語、あるいは適切な場所では
B<Steering Council> に置き換えました。

=item *

=begin original

B<The Perl Steering Council> is now the fallback contact for security issues.

=end original

B<The Perl Steering Council> は
セキュリティ問題へのフォールバック連絡先になりました。

=back

=head3 L<perlapi>

=over 4

=item *

=begin original

Efforts continue in improving the presentation of this document, and to
document more API elements.

=end original

この文書の表現を向上し、より多くの API 要素を文書化するする努力が
続けられました。

=back

=head3 L<perlcommunity>

=over 4

=item *

=begin original

The freenode IRC URL has been updated.

=end original

freenode IRC の URL が更新されました。

=back

=head3 L<perldebguts>

=over 4

=item *

=begin original

Corrected the description of the scalar C<< ${"_<$filename"} >>
variables.

=end original

C<< ${"_<$filename"} >> スカラ変数の記述が修正されました。

=back

=head3 L<perldiag>

=over 4

=item *

=begin original

Now documents additional examples of "not imported" warnings.

=end original

"not imported" 警告の追加の例が文書化されました。

=back

=head3 L<perlfaq>

=over 4

=item *

=begin original

The Perl FAQ was updated to CPAN version 5.20201107 with minor
improvements.

=end original

The 
Perl FAQ は CPAN バージョン 5.20201107 に小さな改良を加えたものに
更新されました。

=back

=head3 L<perlfunc>

=over 4

=item *

=begin original

L<my()|perlfunc/my> and L<state()|perlfunc/state> now explicitly warn
the reader that lexical variables should typically not be redeclared
within the same scope or statement.
[L<GH #18389|https://github.com/Perl/perl5/issues/18389>]

=end original

L<my()|perlfunc/my> と L<state()|perlfunc/state> は、
レキシカル変数は典型的には同じスコープや文の中で再宣言されるべきではないと
いうことを読者に明示的に警告するようになりました。
[L<GH #18389|https://github.com/Perl/perl5/issues/18389>]

=item *

=begin original

The L<localtime|perlfunc/localtime> entry has been improved and now
also states that the result of the function is always in English.

=end original

L<localtime|perlfunc/localtime> エントリは改良され、
この関数の結果は常に英語であることが記述されました。

=item *

=begin original

L<msgsnd()|perlfunc/msgsnd> documented a length field included in the
packed C<MSG> parameter to C<msgsnd()>, but there was no such field.
C<MSG> contains only the type and the message content.

=end original

L<msgsnd()|perlfunc/msgsnd> は C<msgsnd()> へのパックされた
C<MSG> 引数に含まれている長さフィールドについて記述していました。
そのようなフィールドはありませんでした。
C<MSG> は型とメッセージの内容のみを含みます。

=item *

=begin original

Better explanation of what happens when C<sleep> is called with a zero or
negative value.

=end original

Better explanation of what happens when 
C<sleep> がゼロや負の値で呼び出されたときに起こることについて
より良い説明をするようになりました。

=item *

=begin original

Simplify the C<split()> documentation by removing the C<join()>s from the
examples
[L<GH #18676|https://github.com/Perl/perl5/issues/18676>]

=end original

例から C<join()> を除去することで C<split()> の文書を単純化しました。
[L<GH #18676|https://github.com/Perl/perl5/issues/18676>]

=back

=head3 L<perlgit>

=over 4

=item *

=begin original

document how to create a remote-tracking branch for every PR

=end original

全ての PR についてリモートトラックブランチを作る方法について
文書化しました。

=item *

=begin original

document how to get a PR as a local branch

=end original

PR をローカルブランチとして得る方法について文書化しました。

=back

=head3 L<perlguts>

=over 4

=item *

=begin original

L<perlguts> now explains in greater detail the need to consult C<SvUTF8>
when calling C<SvPV> (or variants). A new "How do I pass a Perl string to a C
library?" section in the same document discusses when to use which style of
macro to read an SV's string value.

=end original

L<perlguts> は、 C<SvPV> (およびその亜種) を呼び出すときに
C<SvUTF8> を参照する必要性についてより詳しく説明するようになりました。
同じ文書の新しい "How do I pass a Perl string to a C library?" 節は、
SV の文字列値を読むためにいつどの形式のマクロを使うべきかを
議論しています。

=item *

=begin original

Corrected C<my_rpeep> example in perlguts.

=end original

C<my_rpeep> の例を修正しました。

=item *

=begin original

A section has been added on the formatted printing of special sizes.

=end original

特殊なサイズのフォーマットされた表示に関する節が追加されました。

=back

=head3 L<perlop>

=over 4

=item *

=begin original

The C<< <> >> and C<<< <<>> >>> operators are commonly referred to as
the diamond and double diamond operators respectively, but that wasn't
mentioned previously in their documentation.

=end original

C<< <> >> と C<<< <<>> >>> 演算子は一般的に、
それぞれダイヤモンド演算子および二重ダイヤモンド演算子として
参照されていますが、それらの文書に以前は言及されていませんでした。

=item *

=begin original

Document range op behavior change.

=end original

range op の振る舞いの変更について文書化しました。

=back

=head3 L<perlpacktut>

=over 4

=item *

=begin original

Incorrect variables used in an example have been fixed.

=end original

例で誤った値が使われていたのが修正されました。

=back

=head3 L<perlsyn>

=over 4

=item *

=begin original

Document that caller() does not see try{} blocks

=end original

caller() は try{} ブロックを見ないことが文書化されました。

=item *

=begin original

A new example shows how a lexical C<my> variable can be declared
during the initialization of a C<for> loop.

=end original

新しい例は、レキシカルな C<my> 変数が
C<for> ループの初期化の間にどのように宣言できるかを示します。

=back

=head3 L<perlunifaq>

=over 4

=item *

=begin original

Fix description of what Perl does with unencoded strings

=end original

Perl がエンコードされていない文字列をどうするかの記述を修正しました。

=back

=head1 Diagnostics

(診断メッセージ)

=begin original

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=end original

次のような追加と変更が、警告や致命的エラーメッセージを含む診断出力に
行われました。
診断メッセージの完全な一覧については、L<perldiag> を参照してください。

=head2 New Diagnostics

(新しい警告メッセージ)

=head3 New Errors

(新しいエラー)

=over 4

=item *

L<Bareword filehandle "%s" not allowed under 'no feature "bareword_filehandles"'|perldiag/"Bareword filehandle "%s" not allowed under 'no feature "bareword_filehandles"'">

=begin original

This accompanies the new
L<bareword_filehandles|feature/"The 'bareword_filehandles' feature."> feature.

=end original

これは新しい
L<bareword_filehandles|feature/"The 'bareword_filehandles' feature."> 機能に
対応します。

=item *

L<Multidimensional hash lookup is disabled|perldiag/"Multidimensional hash lookup is disabled">

=begin original

This accompanies the new
L<multidimensional|feature/"The 'multidimensional' feature"> feature.

=end original

これは新しい
 L<multidimensional|feature/"The 'multidimensional' feature"> 機能に
対応します。

=back

=head3 New Warnings

(新しい警告)

=over 4

=item *

L<Wide character in setenv key (encoding to utf8)|perldiag/"Wide character in %s">

=begin original

Attempts to put wide characters into environment variable keys via C<%ENV> now
provoke this warning.

=end original

C<%ENV> 経由でワイド文字を環境変数に入れようとするとこの警告が発生します。

=back

=head2 Changes to Existing Diagnostics

(既存の診断メッセージの変更)

=over 4

=item *

L<Error %s in expansion of %s|perldiag/"Error %s in expansion of %s">

=begin original

An error was encountered in handling a user-defined property
(L<perlunicode/User-Defined Character Properties>).  These are
programmer written subroutines, hence subject to errors that may
prevent them from compiling or running.

=end original

ユーザー定義特性
(L<perlunicode/User-Defined Character Properties>) の扱いで
エラーに遭遇しました。
これらはプログラマが書いたサブルーチンなので、
エラーの主題はコンパイルや実行を妨げます。

=item *

L<Infinite recursion in user-defined property|perldiag/"Infinite recursion in user-defined property">

=begin original

A user-defined property (L<perlunicode/User-Defined Character Properties>)
can depend on the definitions of other user-defined
properties.  If the chain of dependencies leads back to this property,
infinite recursion would occur, were it not for the check that raised
this error.

=end original

ユーザー定義特性 (L<perlunicode/User-Defined Character Properties>) は
他のユーザー定義特性の定義に依存できます。
依存の連鎖がこの特性に戻ってくると、このエラーを発生させるチェックが
なければ無限再帰が起きます。

=item *

L<Timeout waiting for another thread to define \p{%s}|perldiag/"Timeout waiting for another thread to define \p{%s}">

=begin original

The first time a user-defined property
(L<perlunicode/User-Defined Character Properties>) is used, its
definition is looked up and converted into an internal form for more
efficient handling in subsequent uses.  There could be a race if two or
more threads tried to do this processing nearly simultaneously.

=end original

ユーザー定義特性
(L<perlunicode/User-Defined Character Properties>) が最初に使われると、
その定義は調べられ、その後の仕様でより効率的に扱うために
内部形式に変換されます。
二つ以上のスレッドがこの処理をほぼ同時に使用とすると、
競合条件になることがあります。

=item *

L<Unknown user-defined property name \p{%s}|perldiag/"Unknown user-defined property name \p{%s}">

=begin original

You specified to use a property within the C<\p{...}> which was a
syntactically valid user-defined property, but no definition was found
for it

=end original

文法的に正当なユーザー定義特性の C<\p{...}> の中で特性を
使うように指定しましたが、その定義が見つかりませんでした。

=item *

L<Too few arguments for subroutine '%s' (got %d; expected %d)|perldiag/"Too few arguments for subroutine '%s' (got %d; expected %d)">

=begin original

Subroutine argument-count mismatch errors now include the number of
given and expected arguments.

=end original

サブルーチンの引数の数の不一致エラーは、与えられた引数の数と
想定される引数の数を含むようになりました。

=item *

L<Too many arguments for subroutine '%s' (got %d; expected %d)|perldiag/"Too many arguments for subroutine '%s' (got %d; expected %d)">

=begin original

Subroutine argument-count mismatch errors now include the number of
given and expected arguments.

=end original

サブルーチンの引数の数の不一致エラーは、与えられた引数の数と
想定される引数の数を含むようになりました。

=item *

L<Lost precision when %s %f by 1|perldiag/"Lost precision when %s %f by 1">

=begin original

This warning was only issued for positive too-large values when
incrementing, and only for negative ones when decrementing.
It is now issued for both positive or negative too-large values.
[L<GH #18333|https://github.com/Perl/perl5/issues/18333>]

=end original

この警告は、インクリメントの時には大きすぎる正数のとき、
デクリメントの時は小さすぎる負数のときにのみ発生していました。
これは、大きすぎる正数と小さすぎる負数の両方について
発生するようになりました。
[L<GH #18333|https://github.com/Perl/perl5/issues/18333>]

=item *

L<\K not permitted in lookahead/lookbehind in regex; marked by <-- HERE in mE<sol>%sE<sol>|perldiag/"\K not permitted in lookahead/lookbehind in regex; marked by <-- HERE in m/%s/">

=begin original

This error was incorrectly produced in some cases involving nested
lookarounds.  This has been fixed.
[L<GH #18123|https://github.com/Perl/perl5/issues/18123>]

=end original

このエラーは、ネストした先読みに関係する一部の場合で誤って
発生していました。
これは修正されました。
[L<GH #18123|https://github.com/Perl/perl5/issues/18123>]

=item *

L<Use of uninitialized value%s|perldiag/"Use of uninitialized value%s">

=begin original

This warning may now include the array or hash index when the
uninitialized value is the result of an element not found.  This will
only happen if the index is a simple non-magical variable.

=end original

この警告は、未初期化値が見つからない要素の結果の場合は、
配列やハッシュのインデックスを含むようになりました。
これは、インデックスが単純な非マジカル変数の場合にのみ起きます。

=back

=head1 Utility Changes

(ツールの変更)

=head2 L<perl5db.pl> (the debugger)

(L<perl5db.pl> (デバッガ))

=over 4

=item * New option: C<HistItemMinLength>

(新しいオプション: C<HistItemMinLength>)

=begin original

This option controls the minimum length a command must be to get stored in
history.  Traditionally, this has been fixed at 2.  Changes to the debugger
are often perilous, and new bugs should be reported so the debugger can be
debugged.

=end original

このオプションは、ヒストリに保管されなければならないコマンドの
最小長を制御します。
伝統的に、これは 2 に固定されていました。
デバッガを変更するのはしばしば危険で、新しいバグが報告されるので、
デバッガはデバッグされるようになりました。

=item * Fix to C<i> and C<l> commands

(C<i> と C<l> コマンドの修正)

=begin original

The C<i $var> and C<l $var> commands work again with lexical variables.

=end original

C<i $var> と C<l $var> コマンドは再びレキシカル変数で
動作するようになりました。

=back

=head1 Configuration and Compilation

(設定とコンパイル)

=over 4

=item *

=begin original

Prevented incpath to spill into libpth

=end original

incpath が libpth に漏れるのを防ぎました

=item *

=begin original

Use realpath if available. (This might catch more duplicate paths.)

=end original

利用可能なら realpath を使うようになりました。
(これはより多くの重複したパスを捕まえるかもしれません。)

=item *

=begin original

Only include real existing paths.

=end original

実際に存在するパスのみを含むようになりました。

=item *

=begin original

Filter inc paths out of libpth.

=end original

libpth から inc パスをフィルタリングしました。

=item * stadtx hash support has been removed

(stadtx 対応は完全に除去されました)

=begin original

stadtx support has been entirely removed.  Previously, it could be requested
with C<PERL_HASH_FUNC_STADTX>, and was default in 64-bit builds.  It has been
replaced with SipHash.  SipHash has been more rigorously reviewed than stadtx.

=end original

stadtx 対応は完全に除去されました。
以前は、C<PERL_HASH_FUNC_STADTX> で要求することができ、
デフォルトは 64 ビットビルドでした。
これは SipHash に置き換えられました。
SipHash は stadtx より厳格にレビューされています。

=item * Configure

=begin original

A new probe checks for buggy libc implementations of the C<gcvt>/C<qgcvt>
functions.
[L<GH #18170|https://github.com/Perl/perl5/issues/18170>]

=end original

新しいプローブ は C<gcvt>/C<qgcvt> 関数のバグっぽい libc 実装を調べます。
[L<GH #18170|https://github.com/Perl/perl5/issues/18170>]

=item * C<-Dusedefaultstrict>

=begin original

Perl can now be built with L<strict> on by default (using the configuration
option C<-Dusedefaultstrict>.

=end original

Perl は (C<-Dusedefaultstrict> 設定オプションを使って) デフォルトで
L<strict> を有効にしてビルドできるようになりました。

=begin original

These strict defaults do not apply when C<perl> is run via C<-e> or C<-E>.

=end original

これらのデフォルト strict は C<perl> が C<-e> や C<-E> 経由で
実行されているときは適用されません。

=begin original

This setting provides a diagnostic mechanism intended for development
purposes only and is thus undefined by default.

=end original

この設定は開発目的のための診断機構を提供するためだけの物なので、
デフォルトでは未定義です。

=item *

=begin original

The minimum supported Bison version is now 2.4, and the maximum is 3.7.

=end original

Bison の対応最低バージョンは 2.4、最大は 3.7 になりました。

=item *

=begin original

Newer 64-bit versions of the Intel C/C++ compiler are now recognised
and have the correct flags set.

=end original

より新しい 64 ビット版の Intel C/C++ コンパイラが認識され、
正しいフラグ集合を持つようになりました。

=item *

=begin original

We now trap SIGBUS when F<Configure> checks for C<va_copy>.

=end original

F<Configure> は C<va_copy> をチェックするときに SIGBUS を
トラップするようになりました。

=begin original

On several systems the attempt to determine if we need C<va_copy> or similar
results in a SIGBUS instead of the expected SIGSEGV, which previously caused a
core dump.

=end original

いくつかのシステムでは、C<va_copy> のようなものが必要かどうか
決定しようと試みると、想定している SIGSEGV ではなく
SIGBUS となることがあり、以前はこれはコアダンプを引き起こしていました。

[L<GH #18148|https://github.com/Perl/perl5/issues/18148>]

=back

=head1 Testing

(テスト)

=begin original

Tests were added and changed to reflect the other additions and
changes in this release.  Furthermore, these significant changes were
made:

=end original

このリリースのその他の追加と変更を反映してテストが追加、変更されました。
さらに、主に以下のような変更が行われました:

=over 4

=item *

=begin original

Split Config-dependent tests in F<t/opbasic/arith.t> to F<t/op/arith2.t>

=end original

Split 
F<t/opbasic/arith.t> の中の Config 依存のテストを
F<t/op/arith2.t> に分離しました。

=item *

=begin original

F<t/re/opt.t> was added, providing a test harness for regexp optimization.
[L<GH #18213|https://github.com/Perl/perl5/pull/18213>]

=end original

F<t/re/opt.t> が追加されました;
正規表現最適化のためのテストハーネスを提供します。
[L<GH #18213|https://github.com/Perl/perl5/pull/18213>]

=item *

=begin original

A workaround for CPAN distributions needing dot in C<@INC> has been removed
[L<GH #18394|https://github.com/Perl/perl5/pull/18394>].
All distributions that previously required the workaround have now been
adapted.

=end original

C<@INC> にドットが必要な CPAN 配布のための回避策が削除されました
[L<GH #18394|https://github.com/Perl/perl5/pull/18394>]。
以前回避策が必要だった全ての配布は対応されました。

=item *

=begin original

When testing in parallel on many-core platforms, you can now cause the
test suite to finish somewhat earlier, but with less logical ordering of
the tests, by setting

=end original

メニーコアプラットフォームで並列にテストをするとき、
テスト順序の論理性を減らしてテストスイートをいくらか早く
完了できるようになりました; 次のものを

 PERL_TEST_HARNESS_ASAP=1

=begin original

while running the test suite.

=end original

テストスイート実行中に指定します。

=back

=head1 Platform Support

(プラットフォーム対応)

=head2 New Platforms

(新しいプラットフォーム)

=over 4

=item 9front

=begin original

Allow building Perl on i386 9front systems (a fork of plan9).

=end original

(plan9 のフォークである) i386 9front システムで Perl を
ビルドできるようになりました。

=back

=head2 Updated Platforms

(更新されたプラットフォーム)

=over 4

=item Plan9

=begin original

Improve support for Plan9 on i386 platforms.

=end original

i386 プラットフォームでの Plan9 の対応を改良しました。

=item MacOS (Darwin)

=begin original

The hints file for darwin has been updated to handle future MacOS versions
beyond 10. [L<GH #17946|https://github.com/Perl/perl5/issues/17946>]

=end original

10 を超える将来のバージョンの MacOS を扱えるように、
darwin 用ヒントファイルが更新されました。
[L<GH #17946|https://github.com/Perl/perl5/issues/17946>]

=back

=head2 Discontinued Platforms

(廃止されたプラットフォーム)

=over 4

=item Symbian

=begin original

Support code relating to Symbian has been removed.  Symbian was an
operating system for mobile devices.  The port was last updated in July
2009, and the platform itself in October 2012.

=end original

Symbian に関連する対応コードは削除されました。
Symbian はモバイルデバイス向けのオペレーティングシステムです。
この対応が最後に更新されたのは 2009 年 7 月で、
プラットフォーム自身の最後の更新も 2012 年 10 月です。

=back

=head2 Platform-Specific Notes

(プラットフォーム固有の注意)

=over 4

=item DragonFlyBSD

=begin original

Tests were updated to workaround DragonFlyBSD bugs in L<tc*()
functions|https://bugs.dragonflybsd.org/issues/3252> and L<ctime
updates|https://bugs.dragonflybsd.org/issues/3251>.

=end original

L<tc*() 関数|https://bugs.dragonflybsd.org/issues/3252> と
L<ctime の更新|https://bugs.dragonflybsd.org/issues/3251> の
DragonFlyBSD のバグを回避するためにテストが更新されました。

=item Mac OS X

=begin original

A number of system libraries no longer exist as actual files on Big Sur,
even though C<dlopen> will pretend they do, so now we fall back to C<dlopen>
if a library file can not be found.
[L<GH #18407|https://github.com/Perl/perl5/issues/18407>]

=end original

Big Sur では、たとえ C<dlopen> があるふりをしていたとしても、
多くのシステムライブラリはもはや実際のファイルとしては存在しません;
なので、ライブラリファイルが見つからなかったときは C<dlopen> に
フォールバックするようになりました。
[L<GH #18407|https://github.com/Perl/perl5/issues/18407>]

=item Windows

=begin original

Reading non-ASCII characters from the console when its codepage was set to
65001 (UTF-8) was broken due to a bug in Windows. A workaround for this
problem has been implemented.
[L<GH #18701|https://github.com/Perl/perl5/issues/18701>]

=end original

コードページが 65001 (UTF-8) に設定されているコンソールから非 ASCII 文字を
読み込むのは、Windows のバグによって壊れていました。
この問題の回避策が実装されました。
[L<GH #18701|https://github.com/Perl/perl5/issues/18701>]

=begin original

Building with mingw.org compilers (version 3.4.5 or later) using mingw runtime
versions < 3.22 now works again.  This was broken in Perl 5.31.4.

=end original

mingw ランタイムバージョン < 3.22 を使っての
mingw.org コンパイラ (バージョン 3.4.5 以降) でのビルドは
再び動作するようになりました。
これは Perl 5.31.4 で壊れていました。

=begin original

Building with mingw.org compilers (version 3.4.5 or later) using mingw runtime
versions >= 3.21 now works (for compilers up to version 5.3.0).

=end original

mingw ランタイムバージョン >= 3.21 を使っての
mingw.org コンパイラ (バージョン 3.4.5 以降) でのビルドは
(バージョン 5.3.0 までのコンパイラで) 動作するようになりました。

=begin original

F<Makefile.mk>, and thus support for dmake, has been removed. It is still
possible to build Perl on Windows using nmake (Makefile) and GNU make
(GNUmakefile).
[L<GH #18511|https://github.com/Perl/perl5/pull/18511>]

=end original

F<Makefile.mk> と dmake 対応は削除されました。
nmake (Makefile) と GNU make (GNUmakefile) を使って Windows で
Perl をビルドするのはまだ可能です。.
[L<GH #18511|https://github.com/Perl/perl5/pull/18511>]

=begin original

perl can now be built with C<USE_QUADMATH> on MS Windows using
(32-bit and 64-bit) mingw-w64 ports of gcc.
[L<GH #18465|https://github.com/Perl/perl5/pull/18465>]

=end original

perl は MS Windows で (32 ビットと 64 ビットの) mingw-w64 版の
gcc を使って C<USE_QUADMATH> でビルドできるようになりました。
[L<GH #18465|https://github.com/Perl/perl5/pull/18465>]

=begin original

The F<pl2bat.pl> utility now needs to C<use ExtUtils::PL2Bat>. This could
cause failures in parallel builds.

=end original

F<pl2bat.pl> ユーティリティは C<use ExtUtils::PL2Bat> に必要になりました。
これは並列ビルドで失敗を引き起こすことがありました。

=begin original

Windows now supports L<symlink()|perlfunc/symlink> and
L<readlink()|perlfunc/readlink>, and L<lstat()|perlfunc/lstat> is no
longer an alias for L<stat()|perlfunc/stat>.
[L<GH #18005|https://github.com/Perl/perl5/issues/18005>].

=end original

Windows は L<symlink()|perlfunc/symlink> と
L<readlink()|perlfunc/readlink> に対応し、
L<lstat()|perlfunc/lstat> は L<stat()|perlfunc/stat> の
別名ではなくなりました。
[L<GH #18005|https://github.com/Perl/perl5/issues/18005>].

=begin original

Unlike POSIX systems, creating a symbolic link on Windows requires
either elevated privileges or Windows 10 1703 or later with Developer
Mode enabled.

=end original

POSIX システムと異なり、Windows でシンボリックリンクを作るには、
権限昇格か、開発者モードを有効にした Windows 10 1703 以降が必要です。

=begin original

stat(), including C<stat FILEHANDLE>, and lstat() now uses our own
implementation that populates the device C<dev> and inode numbers
C<ino> returned rather than always returning zero.  The number of
links C<nlink> field is now always populated.

=end original

C<stat FILEHANDLE> を含む stat() と lstat() は、
デバイス C<dev> と iノード番号 C<ino> について、常にゼロを返すのではなく
返されたものを展開する独自実装を使うようになりました。
リンク数を示す C<nlink> フィールドは常に展開されます。

=begin original

L<< C<${^WIN32_SLOPPY_STAT}> |perlvar/${^WIN32_SLOPPY_STAT} >> previously
controlled whether the C<nlink> field was populated requiring a
separate Windows API call to fetch, since C<nlink> and the other
information required for C<stat()> is now retrieved in a single API call.

=end original

L<< C<${^WIN32_SLOPPY_STAT}> |perlvar/${^WIN32_SLOPPY_STAT} >> は
以前は C<nlink> フィールドが代入されているかどうかを制御するために、
値の取得と異なる Windows API 呼び出しを必要としていました。
C<nlink> と C<stat()> に必要なその他な情報は
単一の API 呼び出しで取得されるようになりました。

=begin original

The C<-r> and C<-w> operators now return true for the C<STDIN>,
C<STDOUT> and C<STDERR> handles.  Unfortunately it still won't return
true for duplicates of those handles.
[L<GH #8502|https://github.com/Perl/perl5/issues/8502>].

=end original

C<-r> と C<-w> 演算子は、C<STDIN>,
C<STDOUT>, C<STDERR> ハンドルに関して真を返すようになりました。
残念ながら、これらのハンドルの複製に関してはまだ
真を返しません。
[L<GH #8502|https://github.com/Perl/perl5/issues/8502>].

=begin original

The times returned by stat() and lstat() are no longer incorrect
across Daylight Savings Time adjustments.
[L<GH #6080|https://github.com/Perl/perl5/issues/6080>].

=end original

stat() と lstat() で返される時刻は、夏時間補正をまたいでも
間違わなくなりました。
[L<GH #6080|https://github.com/Perl/perl5/issues/6080>].

=begin original

C<-x> on a filehandle should now match C<-x> on the corresponding
filename on Vista or later.
[L<GH #4145|https://github.com/Perl/perl5/issues/4145>].

=end original

ファイルハンドルに対する C<-x> は、
Vista 以降対応するファイル名での C<-x> に一致するべきです。
[L<GH #4145|https://github.com/Perl/perl5/issues/4145>].

=begin original

C<-e '"'> no longer incorrectly returns true.
[L<GH #12431|https://github.com/Perl/perl5/issues/12431>].

=end original

C<-e '"'> はもはや誤って真を返さなくなりました。
[L<GH #12431|https://github.com/Perl/perl5/issues/12431>].

=begin original

The same manifest is now used for Visual C++ and gcc builds.

=end original

Visual C++ と gcc のビルドで同じマニフェストを使うようになりました。

=begin original

Previously, MSVC builds were using the B</manifestdependency> flag instead of
embedding F<perlexe.manifest>, which caused issues such as C<GetVersionEx()>
returning the wrong version number on Windows 10.

=end original

以前は、MSVC ビルドは組み込みの F<perlexe.manifest> ではなく
B</manifestdependency> フラグを使っていました;
これにより、Windows 10 で C<GetVersionEx()> が誤ったバージョン番号を
返すというような問題を引き起こしていました。

=item z/OS

=begin original

The locale categories C<LC_SYNTAX> and C<LC_TOD> are now recognized.
Perl doesn't do anything with these, except it now allows you to specify
them.  They are included in C<LC_ALL>.

=end original

ロケールカテゴリ C<LC_SYNTAX> と C<LC_TOD> が認識されるようになりました。
Perl では、これらを指定することができるという以外にこれらに対して
何もしません。
これらは C<LC_ALL> に含まれます。

=back

=head1 Internal Changes

(内部の変更)

=over 4

=item *

=begin original

Corrected handling of double and long double parameters for perl's
implementation of formatted output for C<-Dusequadmath> builds.

=end original

C<-Dusequadmath> ビルドでの perl のフォーマットされた出力の実装において
double と long double の引数の扱いが修正されました。

=begin original

This applies to C<PerlIO_printf()>, C<croak()>, C<warn()>, C<sv_catpvf()> and
their variants.

=end original

これは C<PerlIO_printf()>, C<croak()>, C<warn()>, C<sv_catpvf()> および
これらの亜種に適用されます。

=begin original

Previously in C<quadmath> builds, code like:

=end original

以前は C<quadmath> ビルドでは、次のようなコード:

  PerlIO_printf(PerlIO_stderr(), "%g", somedouble);

=begin original

or

=end original

または

  PerlIO_printf(PerlIO_stderr(), "%Lg", somelongdouble);

=begin original

would erroneously throw an exception "panic: quadmath invalid format
...", since the code added for quadmath builds assumed C<NV>s were the
only floating point format passed into these functions.

=end original

は誤って例外 "panic: quadmath invalid format ..." を投げていました;
4 倍精度ビルドのために追加されたコードは
C<NV> がこれらの関数に渡される唯一の浮動小数点形式であることを
仮定していたからです。


=begin original

This code would also process the standard C long double specifier C<L>
as if it expected an C<NV> (C<__float128> for quadmath builds),
resulting in undefined behaviour.

=end original

このコードはまた、標準 C long double 指定子 C<L> を
C<NV> (4 倍精度では C<__float128>) であるかのように想定するので、
未定義な振る舞いとなっていました。

=begin original

These functions now correctly accept doubles, long doubles and NVs.

=end original

これらの関数は正しく double, long double, NV を受け付けるようになりました。

=item *

=begin original

Previously the right operand of bitwise shift operators (shift amount)
was implicitly cast from IV to int, but it might lead wrong results
if IV does not fit in int.

=end original

以前はビット単位シフト演算子の右オペランド(シフト量)は暗黙に IV から
int にキャストされていましたが、これは IV が int に収まらない場合に
誤った結果を引き起こすことがありました。

=begin original

And also, shifting INT_MIN bits used to yield the shiftee unchanged
(treated as 0-bit shift instead of negative shift).

=end original

また、INT_MIN ビットのシフトはシフト対象が変化していませんでした
(負のシフトではなく 0 ビットシフトと扱われていました)。

=item *

=begin original

A set of C<cop_hints_exists_{pv,pvn,pvs,sv}> functions was added,
to support checking for the existence of keys in the hints hash of a
specific cop without needing to create a mortal copy of said value.

=end original

C<cop_hints_exists_{pv,pvn,pvs,sv}> 関数が追加されました;
それぞれの値の揮発性のコピーを作る必要なしに
特定の cop のヒントハッシュの中のキーの存在のチェックを支援するためです。

=item *

=begin original

An aid has been added for using the C<DEBUG> macros when debugging XS or
C code. The comments in F<perl.h> describe C<DEBUG_PRE_STMTS> and
C<DEBUG_POST_STMTS>. which you can C<#define> to do things like save and
restore C<errno>, in case the C<DEBUG> calls are interfering with that,
or to display timestamps, or which thread it's coming from, or the
location of the call, or whatever.  You can make a quick hack to help
you track something down without having to edit individual C<DEBUG>
calls.

=end original

XS や C コードをデバッグするときに C<DEBUG> マクロを使うための
助けが追加されました。
F<perl.h> 内のコメントは C<DEBUG_PRE_STMTS> と C<DEBUG_POST_STMTS> を
記述します; これにより、C<errno> の保管と復元をしたり(この場合
C<DEBUG> 呼び出しはこれを妨げます)、
あるいはタイムスタンプや、どのスレッドから来たかや、呼び出しの位置などを
表示したりするために C<#define> できます。
個々の C<DEBUG> 呼び出しを編集することなしに何かを追いかけるための
クイックハックをすることができます。

=item *

=begin original

Make C<REFCOUNTED_HE_EXISTS> available outside of core

=end original

C<REFCOUNTED_HE_EXISTS> をコアの外側で利用できるようにしました

=item *

=begin original

All C<SvTRUE>-ish functions now evaluate their arguments exactly once.
In 5.32, plain L<perlapi/C<SvTRUE>> was changed to do that; now the rest
do as well.

=end original

全ての C<SvTRUE> 風の関数は引数を正確に 1 回だけ評価するようになりました。
5.32 では、単なる L<perlapi/C<SvTRUE>> がそのように変更されました;
今回残り全ても同様になりました。

=item *

=begin original

Unicode is now a first class citizen when considering the pattern /A*B/ where
A and B are arbitrary.  The pattern matching code tries to make a tight loop
to match the span of A's.  The logic of this was now really updated with
support for UTF-8.

=end original

任意の A と B に対してパターン /A*B/ を考えるとき、
Unicode は一級市民になりました。
パターンマッチングのコードは A の並びにマッチングするために小さいループを
作ろうとします。
このロジックは UTF-8 に対応するために本当に更新されました。

=item *

=begin original

The L<re> module has a new function C<optimization>, which can return a
hashref of optimization data discovered about a compiled regexp.

=end original

L<re> モジュールに新しい関数 C<optimization> が追加されました;
これはコンパイルされた正規表現に関して発見された最適化データの
ハッシュリファレンスを返すことができます。

=item *

=begin original

The C<PERL_GLOBAL_STRUCT> compilation option has been removed, and
with it the need or the C<dVAR> macro.  C<dVAR> remains defined as a
no-op outside C<PERL_CORE> for backwards compatiblity with XS modules.

=end original

C<PERL_GLOBAL_STRUCT> コンパイルオプションは除去され、
C<dVAR> の必要性もなくなりました。
C<dVAR> は、XS モジュールとの後方互換性のために C<PERL_CORE> の外側で
何もしないものとして定義されたままです。

=item *

=begin original

A new savestack type C<SAVEt_HINTS_HH> has been added, which neatens the
previous behaviour of C<SAVEt_HINTS>.  On previous versions the types and
values pushed to the save stack would depend on whether the hints included the
C<HINT_LOCALIZE_HH> bit, which complicates external code that inspects the
save stack. The new version uses a different savestack type to indicate the
difference.

=end original

新しい保存スタック型 C<SAVEt_HINTS_HH> が追加されました;
これは C<SAVEt_HINTS> の以前の振る舞いをきれいにしたものです。
以前のバージョンでは、保存スタックにプッシュされた型と値は
C<HINT_LOCALIZE_HH> ビットに含まれているヒントに依存していて、
これは保存スタックを調べる外部コードを複雑にしていました。
新しいバージョンは、違いを示すために異なる保存スタック型を使います。

=item *

=begin original

A new API function L<perlapi/av_count> has been added which gives a
clearly named way to find how many elements are in an array.

=end original

新しい API 関数 L<perlapi/av_count> が追加されました; これは
配列にいくつ要素があるかを見つけるための明らかに名前付けされた方法を
提供します。

=back

=head1 Selected Bug Fixes

(バグ修正の抜粋)

=over 4

=item *

=begin original

Setting C<%ENV> now properly handles upgraded strings in the key. Previously
Perl sent the SV's internal PV directly to the OS; now it will handle keys
as it has handled values since 5.18: attempt to downgrade the string first;
if that fails then warn and use the utf8 form.

=end original

C<%ENV> への設定は、キーの中の昇格された文字列を正しく扱えるようになりました。
以前は Perl は SV の内部 PV を直接 OS に送っていました;
5.18 からの値の扱いと同じように扱うようになりました:
まず文字列を降格しようとします;
これに失敗すると、警告を出して utf8 形式で使います。

=item *

=begin original

Fix a memory leak in regcomp.c
[L<GH #18604|https://github.com/Perl/perl5/issues/18604>]

=end original

regcomp.c のメモリリークを修正
[L<GH #18604|https://github.com/Perl/perl5/issues/18604>]

=item * pack/unpack format 'D' now works on all systems that could support it

(pack/unpack フォーマット 'D' は対応できる全てのシステムで動作するようになりました)

=begin original

Previously if C<NV == long double>, now it is supported on all platforms that
have long doubles. In particular that means it is now also supported on
quadmath platforms.

=end original

以前は、C<NV == long double> なら、long double を持つ全ての
プラットフォームで対応されました。
特に、これは 4 倍精度プラットフォームも対応されたということです。

=item *

=begin original

Skip trying to constant fold an incomplete op tree
[L<GH #18380|https://github.com/Perl/perl5/issues/18380>]

=end original

不完全な op 木を定数畳み込みしようとしなくなりました
[L<GH #18380|https://github.com/Perl/perl5/issues/18380>]

=begin original

Constant folding of chained comparison op trees could fail under certain
conditions, causing perl to crash. As a quick fix, constant folding is
now skipped for such op trees. This also addresses
[L<GH #17917|https://github.com/Perl/perl5/issues/17917>].

=end original

連鎖比較 op 木の定数畳み込みは、特定の条件で失敗することがあり、
perl のクラッシュを引き起こしていました。
応急措置として、そのような op 木では定数畳み込みをしないようになりました。
これは
[L<GH #17917|https://github.com/Perl/perl5/issues/17917>] でも
対応しています。

=item *

=begin original

C<%g> formatting broken on Ubuntu-18.04, C<NVSIZE == 8>
[L<GH #18170|https://github.com/Perl/perl5/issues/18170>]

=end original

C<%g> フォーマットは Ubuntu-18.04, C<NVSIZE == 8> で壊れていました
[L<GH #18170|https://github.com/Perl/perl5/issues/18170>]

=begin original

Buggy libc implementations of the C<gcvt> and C<qgcvt> functions
caused C<(s)printf> to incorrectly truncate C<%g> formatted numbers.
A new Configure probe now checks for this, with the result that the libc
C<sprintf> will be used in place of C<gcvt> and C<qgcvt>.

=end original

C<gcvt> と C<qgcvt> 関数のバグっぽい libc 実装により、
C<(s)printf> は C<%g> フォーマットされた数値を誤って切り詰めていました。
新しい Configure プローブはこれをチェックし、その結果により
C<gcvt> と C<qgcvt> の代わりに libc の C<sprintf> を使います。

=begin original

Tests added as part of this fix also revealed related problems in
some Windows builds. The makefiles for MINGW builds on Windows have
thus been adjusted to use C<USE_MINGW_ANSI_STDIO> by default, ensuring
that they also provide correct C<(s)printf> formatting of numbers.

=end original

この修正の一部として追加されたテストは、一部の Windows ビルドでの
関連する問題も明らかにしました。
Windows での MINGW ビルドのための makefile はデフォルトで
C<USE_MINGW_ANSI_STDIO> を使うように調整され、これも
正しい C<(s)printf> 数値フォーマットを提供するようになりました。

=item *

=begin original

F<op.c>: croak on C<my $_> when C<use utf8> is in effect
[L<GH #18449|https://github.com/Perl/perl5/issues/18449>]

=end original

F<op.c>: C<use utf8> が有効のときに C<my $_> が隠されます
[L<GH #18449|https://github.com/Perl/perl5/issues/18449>]

=begin original

The lexical topic feature experiment was removed in Perl v5.24 and
declaring C<my $_> became a compile time error. However, it was previously
still possible to make this declaration if C<use utf8> was in effect.

=end original

The lexical topic feature experiment was 
Perl v5.24 で削除され、C<my $_> 宣言はコンパイル時エラーになりました。
しかし、C<use utf8> が有効の場合は依然としてこの宣言をすることが可能でした。

=item *

=begin original

F<regexec.c>: Fix assertion failure
[L<GH #18451|https://github.com/Perl/perl5/issues/18451>]

=end original

F<regexec.c>: アサート失敗の修正
[L<GH #18451|https://github.com/Perl/perl5/issues/18451>]

=begin original

Fuzzing triggered an assertion failure in the regexp engine when too many
characters were copied into a buffer.

=end original

ファジングにより多すぎる文字がバッファにコピーされたときに、
正規表現エンジンでアサート失敗を引き起こしていました。

=item *

=begin original

L<semctl()|perlfunc/semctl>, L<msgctl()|perlfunc/msgctl>, and
L<shmctl()|perlfunc/shmctl> now properly reset the UTF-8 flag on the
C<ARG> parameter if it's modified for C<IPC_STAT> or C<GETALL>
operations.

=end original

L<semctl()|perlfunc/semctl>, L<msgctl()|perlfunc/msgctl>,
L<shmctl()|perlfunc/shmctl> は
C<IPC_STAT> または C<GETALL> 操作のために修正されたとき、
C<ARG> の UTF-8 フラグを正しくリセットするようになりました。

=item *

=begin original

C<semctl()>, C<msgctl()>, and C<shmctl()> now attempt to downgrade the C<ARG>
parameter if its value is being used as input to C<IPC_SET> or
C<SETALL> calls.  A failed downgrade will thrown an exception.

=end original

C<semctl()>, C<msgctl()>, C<shmctl()> は、
C<ARG> 引数の値が C<IPC_SET> or C<SETALL> 呼び出しの入力として使われる
場合は、その値を降格しようとするようになりました。
降格に失敗すると例外を投げます。

=item *

=begin original

In cases where C<semctl()>, C<msgctl()> or C<shmctl()> would treat the C<ARG>
parameter as a pointer, an undefined value no longer generates a
warning.  In most such calls the pointer isn't used anyway and this
allows you to supply C<undef> for a value not used by the underlying
function.

=end original

C<semctl()>, C<msgctl()>, C<shmctl()> が C<ARG> 引数をポインタとして
扱う場合、未定義値はもはや警告を生成しなくなりました。
そのような呼び出しのほとんどでは、ポインタはどちらにしろ使われず、
これにより、基となる関数で使われない値に対して
C<undef> を指定できるようになります。

=item *

=begin original

L<semop()|perlfunc/semop> now downgrades the C<OPSTRING> parameter,
L<msgsnd()|perlfunc/msgsnd> now downgrades the C<MSG> parameter and
L<shmwrite|perlfunc/shmwrite> now downgrades the C<STRING> parameter
to treat them as bytes.  Previously they would be left upgraded,
providing a corrupted structure to the underlying function call.

=end original

値をバイトとして扱うために、
L<semop()|perlfunc/semop> は C<OPSTRING> 引数を降格し、
L<msgsnd()|perlfunc/msgsnd> は C<MSG> 引数を降格し、
L<shmwrite|perlfunc/shmwrite> は C<STRING> 引数を降格するようになりました。
以前はこれらは昇格したままで、基となる関数呼び出しに
壊れた構造体を提供していました。

=item *

=begin original

L<msgrcv()|perlfunc/msgrcv> now properly resets the UTF-8 flag the
C<VAR> parameter when it is modified.  Previously the UTF-8 flag could
be left on, resulting in a possibly corrupt result in C<VAR>.

=end original

L<msgrcv()|perlfunc/msgrcv> は、C<VAR> 引数が変更されたときに
適切に UTF-8 フラグをリセットするようになりました。
以前は UTF-8 フラグがオンのままになり、C<VAR> の結果が
壊れることがありました。

=item *

=begin original

Magic is now called correctly for stacked file test operators.
[L<GH #18293|https://github.com/Perl/perl5/issues/18293>]

=end original

スタックしたファイルテスト演算子で正しくマジックが
呼び出されるようになりました。
[L<GH #18293|https://github.com/Perl/perl5/issues/18293>]

=item *

=begin original

The C<@ary = split(...)> optimization no longer switches in the target
array as the value stack.
[L<GH #18232|https://github.com/Perl/perl5/issues/18232>]
Also see discussion at
L<https://github.com/Perl/perl5/pull/18014#issuecomment-671299506>.

=end original

C<@ary = split(...)> 最適化は、
もはやターゲットの配列を値のスタックとして切り替えなくなりました。
[L<GH #18232|https://github.com/Perl/perl5/issues/18232>]
L<https://github.com/Perl/perl5/pull/18014#issuecomment-671299506> の
議論も参照してください。

=item *

=begin original

Fixed a bug in which some regexps with recursive subpatterns matched
incorrectly.

=end original

再帰する部分パターンを含む一部の正規表現が誤ってマッチングするバグが
修正されました。

[L<GH #18096|https://github.com/Perl/perl5/issues/18096>]

=item *

=begin original

On Win32, C<waitpid(-1, WNOHANG)> could sometimes have a very large
timeout.  [L<GH #16529|https://github.com/Perl/perl5/issues/16529>]

=end original

Win32 では、C<waitpid(-1, WNOHANG)> が時々とても長い中断時間になる
ことがありました。
[L<GH #16529|https://github.com/Perl/perl5/issues/16529>]

=item *

=begin original

C<MARK> and hence C<items> are now correctly initialized in C<BOOT> XSUBs.

=end original

C<MARK> と C<items> が C<BOOT> XSUB で正しく初期化されるようになりました。

=item *

=begin original

Some list assignments involving C<undef> on the left-hand side were
over-optimized and produced incorrect results.
[L<GH #16685|https://github.com/Perl/perl5/issues/16685>],
[L<GH #17816|https://github.com/Perl/perl5/issues/17816>]

=end original

左側の C<undef> に関係する一部のリスト代入は最適化されすぎて
正しくない結果になっていました。
[L<GH #16685|https://github.com/Perl/perl5/issues/16685>],
[L<GH #17816|https://github.com/Perl/perl5/issues/17816>]

=back

=head1 Known Problems

(既知の問題)

=begin original

None

=end original

なし

=head1 Errata From Previous Releases

(以前のリリースの訂正)

=begin original

None

=end original

なし

=head1 Obituary

(おくやみ)

=begin original

Kent Fredric (KENTNL) passed away in February 2021.  A native of New Zealand
and a self-described "huge geek," Kent was the author or maintainer of 178
CPAN distributions, the Perl maintainer for the Gentoo Linux distribution and
a contributor to the Perl core distribution.  He is mourned by his family,
friends and open source software communities worldwide.

=end original

Kent Fredric (KENTNL) は 2021 年 2 月に亡くなりました。
ニュージーランド人で "huge geek" と自称していた Kent は、178 個の CPAN 配布の
作者またはメンテナであり、Gentoo Linux の Perl メンテナであり、
Perl コア配布の貢献者でした。
彼は彼の家族、友人、および世界中のオープンソースソフトウェアコミュニティに
よって追悼されました。

=head1 Acknowledgements

=begin original

Perl 5.34.0 represents approximately 11 months of development since Perl
5.32.0 and contains approximately 280,000 lines of changes across 2,100
files from 78 authors.

=end original

Perl 5.34.0 は、Perl 5.32.0 以降、77 人の作者によって、
2,100 のファイルに約 280,000 行の変更を加えて、
約 10 ヶ月開発されてきました。

=begin original

Excluding auto-generated files, documentation and release tools, there were
approximately 150,000 lines of changes to 1,300 .pm, .t, .c and .h files.

=end original

自動生成ファイル、文書、リリースツールを除くと、1,300 の .pm, .t, .c,
.h ファイルに約 150,000 行の変更を加えました。

=begin original

Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.34.0:

=end original

Perl は、活気のあるユーザーと開発者のコミュニティのおかげで 30 年を超えて
繁栄しています。
以下の人々が、Perl 5.34.0 になるための改良に貢献したことが分かっています:

Aaron Crane, Adam Hartley, Andy Dougherty, Ben Cornett, Branislav
Zahradník, brian d foy, Chris 'BinGOs' Williams, Christian Walde
(Mithaldu), Craig A. Berry, Dagfinn Ilmari Mannsåker, Dan Book, Daniel
Böhmer, Daniel Laügt, Dan Kogai, David Cantrell, David Mitchell, Dominic
Hamon, E. Choroba, Ed J, Eric Herman, Eric Lindblad, Eugene Alvin Villar,
Felipe Gasper, Giovanni Tataranni, Graham Knop, Graham Ollis, Hauke D,
H.Merijn Brand, Hugo van der Sanden, Ichinose Shogo, Ivan Baidakou, Jae
Bradley, James E Keenan, Jason McIntosh, jkahrman, John Karr, John Lightsey,
Kang-min Liu, Karen Etheridge, Karl Williamson, Keith Thompson, Leon
Timmermans, Marc Reisner, Marcus Holland-Moritz, Max Maischein, Michael G
Schwern, Nicholas Clark, Nicolas R., Paul Evans, Petr Písař, raiph, Renee
Baecker, Ricardo Signes, Richard Leach, Romano, Ryan Voots, Samanta Navarro,
Samuel Thibault, Sawyer X, Scott Baker, Sergey Poznyakoff, Sevan Janiyan,
Shirakata Kentaro, Shlomi Fish, Sisyphus, Sizhe Zhao, Steve Hay, TAKAI
Kousuke, Thibault Duponchelle, Todd Rinaldo, Tomasz Konojacki, Tom Hukins,
Tom Stellard, Tony Cook, vividsnow, Yves Orton, Zakariyya Mughal,
Михаил Козачков.

=begin original

The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of the (very much appreciated) contributors who reported issues to
the Perl bug tracker.

=end original

これはバージョンコントロール履歴から自動的に生成しているので、ほぼ確実に
不完全です。
特に、Perl バグトラッカーに問題を報告をしてくれた (とてもありがたい)貢献者の
名前を含んでいません。

=begin original

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

=end original

このバージョンに含まれている変更の多くは、Perl コアに含まれている CPAN
モジュール由来のものです。
私たちは Perl の発展を助けている CPAN コミュニティ全体に感謝します。

=begin original

For a more complete list of all of Perl's historical contributors, please
see the F<AUTHORS> file in the Perl source distribution.

=end original

全ての Perl の歴史的な貢献者のより完全な一覧については、どうか Perl ソース
配布に含まれている F<AUTHORS> を参照してください。

=head1 Reporting Bugs

(バグ報告)

=begin original

If you find what you think is a bug, you might check the perl bug database
at L<https://github.com/Perl/perl5/issues>.  There may also be information at
L<http://www.perl.org/>, the Perl Home Page.

=end original

もしバグと思われるものを見つけたら、
L<https://github.com/Perl/perl5/issues> にある perl バグデータベースを
確認してください。
Perl ホームページ、L<http://www.perl.org/> にも情報があります。

=begin original

If you believe you have an unreported bug, please open an issue at
L<https://github.com/Perl/perl5/issues>.  Be sure to trim your bug down to a
tiny but sufficient test case.

=end original

もしまだ報告されていないバグだと確信したら、
L<https://github.com/Perl/perl5/issues> にイシューを登録してください。
バグの再現スクリプトを十分小さく、しかし有効なコードに切りつめることを
意識してください。

=begin original

If the bug you are reporting has security implications which make it
inappropriate to send to a public issue tracker, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=end original

報告しようとしているバグがセキュリティに関するもので、公開されている
イシュートラッカーに送るのが不適切なものなら、バグの報告方法の詳細について
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION> を参照してください。

=head1 Give Thanks

(感謝を伝える)

=begin original

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

=end original

もし Perl 5 でなされた作業について Perl 5 Porters に感謝したいと考えたなら、
C<perlthanks> プログラムを実行することでそうできます:

    perlthanks

=begin original

This will send an email to the Perl 5 Porters list with your show of thanks.

=end original

これは Perl 5 Porters メーリングリストにあなたの感謝の言葉をメールします。

=head1 SEE ALSO

=begin original

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

=end original

変更点の完全な詳細を見る方法については F<Changes> ファイル。

=begin original

The F<INSTALL> file for how to build Perl.

=end original

Perl のビルド方法については F<INSTALL> ファイル。

=begin original

The F<README> file for general stuff.

=end original

一般的なことについては F<README> ファイル。

=begin original

The F<Artistic> and F<Copying> files for copyright information.

=end original

著作権情報については F<Artistic> 及び F<Copying> ファイル。

=begin meta

Translate: SHIRAKATA Kentaro <argrath@ub32.org>
Status: completed

=end meta

=cut

