
=encoding euc-jp

=head1 NAME

=begin original

perlutil - utilities packaged with the Perl distribution

=end original

perlutil - Perl 配布と共にパッケージされているユーティリティ

=head1 DESCRIPTION

=begin original

Along with the Perl interpreter itself, the Perl distribution installs a
range of utilities on your system. There are also several utilities
which are used by the Perl distribution itself as part of the install
process. This document exists to list all of these utilities, explain
what they are for and provide pointers to each module's documentation,
if appropriate.

=end original

Perl 配布は、Perl インタプリタ自身と共に、様々なユーティリティをシステムに
インストールします。
また、Perl 配布自身がインストール処理の一部として使うユーティリティも
あります。
この文書はこれらのユーティリティの一覧を示し、何をするものかを説明し、
もしあれば各モジュールの文書へのポインタを提供するために存在しています。

=head1 LIST OF UTILITIES

(ユーティリティの一覧)

=head2 Documentation

(文書)

=over 3

=item L<perldoc|perldoc>

=begin original

The main interface to Perl's documentation is C<perldoc>, although
if you're reading this, it's more than likely that you've already found
it. F<perldoc> will extract and format the documentation from any file
in the current directory, any Perl module installed on the system, or
any of the standard documentation pages, such as this one. Use 
C<perldoc E<lt>nameE<gt>> to get information on any of the utilities
described in this document.

=end original

Perl 文書のメインのインターフェースは C<perldoc> ですが、これを読めていると
いうことは、おそらくこれをすでに発見していることでしょう。
F<perldoc> は、現在のディレクトリにあるファイル、システムに
インストールされた Perl モジュール、(この文書のような) 標準文書ページを
抽出およびフォーマットします。
この文書に記述されているユーティリティに関する情報を得るには、
C<perldoc E<lt>nameE<gt>> を使ってください。

=item L<pod2man|pod2man> and L<pod2text|pod2text>

(L<pod2man|pod2man> と L<pod2text|pod2text>)

=begin original

If it's run from a terminal, F<perldoc> will usually call F<pod2man> to
translate POD (Plain Old Documentation - see L<perlpod> for an
explanation) into a manpage, and then run F<man> to display it; if
F<man> isn't available, F<pod2text> will be used instead and the output
piped through your favourite pager.

=end original

端末から実行すると、F<perldoc> は普通は POD (Plain Old Documentation -
説明については L<perlpod> を参照) を man ページに変換するのに
F<pod2man> を使い、それからこれを表示するために F<man> を使います;
もし F<man> が利用できない場合は、代わりに F<pod2text> が使われて出力は
好みのページャにパイプされます。

=item L<pod2html|pod2html> and L<pod2latex|pod2latex>

(L<pod2html|pod2html> と L<pod2latex|pod2latex>)

=begin original

As well as these two, there are two other converters: F<pod2html> will
produce HTML pages from POD, and F<pod2latex>, which produces LaTeX
files.

=end original

上述の二つと共に、もう二つのコンバータがあります: F<pod2html> は
POD から HTML ページを生成し、F<pod2latex> は LaTeX ファイルを
生成します。

=item L<pod2usage|pod2usage>

=begin original

If you just want to know how to use the utilities described here,
F<pod2usage> will just extract the "USAGE" section; some of
the utilities will automatically call F<pod2usage> on themselves when
you call them with C<-help>.

=end original

単にここに記述されているユーティリティの使い方が知りたいだけなら、
F<pod2usage> は "USAGE" の節のみを抽出します; 一部のユーティリティは
C<-help> 付きで呼び出されたときに自動的に自分自身に対して F<pod2usage> を
呼び出します。

=item L<podselect|podselect>

=begin original

F<pod2usage> is a special case of F<podselect>, a utility to extract
named sections from documents written in POD. For instance, while
utilities have "USAGE" sections, Perl modules usually have "SYNOPSIS"
sections: C<podselect -s "SYNOPSIS" ...> will extract this section for
a given file.

=end original

F<pod2usage> は F<podselect> の特殊ケースで、POD で書かれている文書から
特定の名前の節を抽出するためのユーティリティです。
例えば、ユーティリティには "USAGE" 節がありますが、Perl モジュールには
普通 "SYNOPSIS" 節があります: C<podselect -s "SYNOPSIS" ...> は指定された
ファイルからこの節を抽出します。

=item L<podchecker|podchecker>

=begin original

If you're writing your own documentation in POD, the F<podchecker>
utility will look for errors in your markup.

=end original

自身の文書を POD で書いたなら、F<podchecker> ユーティリティは
マークアップのエラーを探します。

=item L<splain|splain>

=begin original

F<splain> is an interface to L<perldiag> - paste in your error message
to it, and it'll explain it for you.

=end original

F<splain> は L<perldiag> へのインターフェースです - エラーメッセージを
ペースとして、あなたのために説明します。

=item L<roffitall|roffitall>

=begin original

The C<roffitall> utility is not installed on your system but lives in
the F<pod/> directory of your Perl source kit; it converts all the
documentation from the distribution to F<*roff> format, and produces a
typeset PostScript or text file of the whole lot.

=end original

C<roffitall> ユーティリティはシステムにはインストールされませんが、
Perl そースキットの F<pod/> ディレクトリにいます; これは
配布の全ての文書を F<*roff> 形式に変換して、
全体のタイプセット PostScript かテキストファイルを生成します。

=back

=head2 Converters

(コンバータ)

=begin original

To help you convert legacy programs to Perl, we've included three
conversion filters:

=end original

レガシープログラムを Perl に変換するのを助けるために、三つの変換フィルタを
同梱しています:

=over 3

=item L<a2p|a2p>

=begin original

F<a2p> converts F<awk> scripts to Perl programs; for example, C<a2p -F:>
on the simple F<awk> script C<{print $2}> will produce a Perl program
based around this code:

=end original

F<a2p> は F<awk> スクリプトを Perl プログラムに変換します; 例えば、
単純な F<awk> スクリプトである C<{print $2}> を C<a2p -F:> すると、
以下のようなコードを元にした Perl プログラムを生成します:

    while (<>) {
        ($Fld1,$Fld2) = split(/[:\n]/, $_, -1);
        print $Fld2;
    }

=item L<s2p|s2p> and L<psed>

(L<s2p|s2p> と L<psed>)

=begin original

Similarly, F<s2p> converts F<sed> scripts to Perl programs. F<s2p> run
on C<s/foo/bar> will produce a Perl program based around this:

=end original

同様に、F<s2p> は F<sed> スクリプトを Perl プログラムに変換します。
C<s/foo/bar> に対して F<s2p> を実行すると、以下のようなコードを
基にした Perl プログラムを生成します:

    while (<>) {
        chomp;
        s/foo/bar/g;
        print if $printit;
    }

=begin original

When invoked as F<psed>, it behaves as a F<sed> implementation, written in
Perl.

=end original

F<psed> として起動すると、Perl で書かれた F<sed> 実装のように振る舞います。

=item L<find2perl|find2perl>

=begin original

Finally, F<find2perl> translates C<find> commands to Perl equivalents which 
use the L<File::Find|File::Find> module. As an example, 
C<find2perl . -user root -perm 4000 -print> produces the following callback
subroutine for C<File::Find>:

=end original

最後に、F<find2perl> は C<find> コマンドを、L<File::Find|File::Find>
モジュールを使った Perl の等価物に変換します。
C<find2perl . -user root -perm 4000 -print> は、以下のような
C<File::Find> のためのコールバックサブルーチンを生成します:

    sub wanted {
        my ($dev,$ino,$mode,$nlink,$uid,$gid);
        (($dev,$ino,$mode,$nlink,$uid,$gid) = lstat($_)) &&
        $uid == $uid{'root'}) &&
        (($mode & 0777) == 04000);
        print("$name\n");
    }

=back

=begin original

As well as these filters for converting other languages, the
L<pl2pm|pl2pm> utility will help you convert old-style Perl 4 libraries to 
new-style Perl5 modules.

=end original

他の言語を変換するためのこれらのフィルタと同様に、
L<pl2pm|pl2pm> ユーティリティは古いスタイルの Perl 4 ライブラリを新しい
スタイルの Perl5 モジュールに変換するのを助けます。

=head2 Administration

(管理)

=over 3

=item L<config_data|config_data>

=begin original

Query or change configuration of Perl modules that use Module::Build-based
configuration files for features and config data.

=end original

昨日とデータ設定のための Module::Build ベースの設定ファイルを使っている
Perl モジュールの設定の問い合わせと変更を行う。

=item L<libnetcfg|libnetcfg>

=begin original

To display and change the libnet configuration run the libnetcfg command.

=end original

libnet 設定の表示と変更をするには libnetcfg コマンドを実行します。

=item L<perlivp>

=begin original

The F<perlivp> program is set up at Perl source code build time to test
the Perl version it was built under.  It can be used after running C<make
install> (or your platform's equivalent procedure) to verify that perl
and its libraries have been installed correctly.

=end original

F<perlivp> プログラムはビルドされた Perl バージョンをテストするために
Perl ソースコードをビルド時に設定します。
これは、perl やライブラリが正しくインストールされているかを検証するために、
C<make install> (あるいはプラットフォームによる等価な手続き) の
後に実行されます。

=back

=head2 Development

(開発)

=begin original

There are a set of utilities which help you in developing Perl programs, 
and in particular, extending Perl with C.

=end original

Perl プログラムの開発、特に Perl を C で拡張するのを助ける一群の
ユーティリティがあります。

=over 3

=item L<perlbug|perlbug>

=begin original

F<perlbug> is the recommended way to report bugs in the perl interpreter
itself or any of the standard library modules back to the developers;
please read through the documentation for F<perlbug> thoroughly before
using it to submit a bug report.

=end original

F<perlbug> は、perl インタプリタ自身や標準ライブラリモジュールのバグを
開発者に報告するための推奨の方法です;
バグ報告を投稿するために使う前に、F<perlbug> の文書全体をよく
読んでください。

=item L<perlthanks|perlthanks>

=begin original

This program provides an easy way to send a thank-you message back to the
authors and maintainers of perl. It's just F<perlbug> installed under
another name.

=end original

このプログラムは perl の作者とメンテナに感謝のメッセージを送るための
簡単な方法です。
単に F<perlbug> を別の名前でインストールしたものです。

=item L<h2ph|h2ph>

=begin original

Back before Perl had the XS system for connecting with C libraries,
programmers used to get library constants by reading through the C
header files. You may still see C<require 'syscall.ph'> or similar
around - the F<.ph> file should be created by running F<h2ph> on the
corresponding F<.h> file. See the F<h2ph> documentation for more on how
to convert a whole bunch of header files at once.

=end original

Perl に C ライブラリと接続するための XS システムができる前、
プログラマは C ヘッダファイルを読み込むことでライブラリの定数を
読み込んでいました。
今でも C<require 'syscall.ph'> のようなこともできます - F<.ph> ファイルは
対応する F<.h> ファイルに対して F<h2ph> を実行して作成されるべきです。
ヘッダ全体を一度に変換する方法については F<h2ph> の文書を
参照してください。

=item L<c2ph|c2ph> and L<pstruct|pstruct>

(L<c2ph|c2ph> と L<pstruct|pstruct>)

=begin original

F<c2ph> and F<pstruct>, which are actually the same program but behave
differently depending on how they are called, provide another way of
getting at C with Perl - they'll convert C structures and union declarations
to Perl code. This is deprecated in favour of F<h2xs> these days.

=end original

F<c2ph> と F<pstruct> (実際には同じプログラムですがどのように
呼び出されるかで振る舞いが変わります) は、C を Perl から使うための
もう一つの方法を提供します - C 構造体と共用体定義を Perl コードに
変換します。
これは最近は F<h2xs> によって非推奨となっています。

=item L<h2xs|h2xs>

=begin original

F<h2xs> converts C header files into XS modules, and will try and write
as much glue between C libraries and Perl modules as it can. It's also
very useful for creating skeletons of pure Perl modules.

=end original

F<h2xs> は C ヘッダファイルを XS モジュールに変換し、C と Perl モジュールとの
間をくっつけるコードを出来るだけ作成しようとします。
これはまた、ピュア Perl モジュールのスケルトンを作成するのにも
便利です。

=item L<enc2xs>

=begin original

F<enc2xs> builds a Perl extension for use by Encode from either
Unicode Character Mapping files (.ucm) or Tcl Encoding Files (.enc).
Besides being used internally during the build process of the Encode
module, you can use F<enc2xs> to add your own encoding to perl.
No knowledge of XS is necessary.

=end original

F<enc2xs> は Unicode Character Mapping ファイル (.ucm) か
Tcl Encoding Files (.enc) のどちらかから Encode で使うための
Perl エクステンションを構築します。
F<enc2xs> は、Encode モジュールのビルドプロセス中での内部での使用の他に
独自のエンコーディングを perl に追加するのにも使えます。
XS の知識は不要です。

=item L<xsubpp>

=begin original

F<xsubpp> is a compiler to convert Perl XS code into C code.
It is typically run by the makefiles created by L<ExtUtils::MakeMaker>.

=end original

F<xsubpp> は Perl XS コードを C コードに変換するコンパイラです。
これは典型的には L<ExtUtils::MakeMaker> によって作成された makefile によって
実行されます。

=begin original

F<xsubpp> will compile XS code into C code by embedding the constructs
necessary to let C functions manipulate Perl values and creates the glue
necessary to let Perl access those functions.

=end original

F<xsubpp> は、C の関数が Perl の値を操作するために必要な構造を
組み込むことで XS コードを C コードにコンパイルし、Perl がそれらの
関数にアクセスするために必要な糊コードを作成します。

=item L<dprofpp|dprofpp>

=begin original

Perl comes with a profiler, the F<Devel::DProf> module. The
F<dprofpp> utility analyzes the output of this profiler and tells you
which subroutines are taking up the most run time. See L<Devel::DProf>
for more information.

=end original

Perl にはプロファイラである F<Devel::DProf> モジュールが同梱されています。
F<dprofpp> ユーティリティはこのプロファイラの出力を解析して、
どのサブルーチンに一番時間がかかっているかを伝えます。
さらなる情報については L<Devel::DProf> を参照してください。

=item L<prove>

=begin original

F<prove> is a command-line interface to the test-running functionality
of F<Test::Harness>.  It's an alternative to C<make test>.

=end original

F<prove> は F<Test::Harness> のテスト実行機能へのコマンドライン
インターフェースです。
これは C<make test> の代替です。

=item L<corelist>

=begin original

A command-line front-end to C<Module::CoreList>, to query what modules
were shipped with given versions of perl.

=end original

C<Module::CoreList> へのコマンドラインインターフェースで、あるバージョンの
perl にどのモジュールが出荷されたかを問い合わせます。

=back

=head2 General tools

(一般的なツール)

=begin original

A few general-purpose tools are shipped with perl, mostly because they
came along modules included in the perl distribution.

=end original

いくつかの一般的な用途のツールが perl と共に出荷されています; ほとんどの
場合は perl 配布に含まれているモジュールに付いているものです。

=over 3

=item L<piconv>

=begin original

B<piconv> is a Perl version of B<iconv>, a character encoding converter
widely available for various Unixen today.  This script was primarily a
technology demonstrator for Perl 5.8.0, but you can use piconv in the
place of iconv for virtually any case.

=end original

B<piconv> は Perl 版の B<iconv> で、最近の様々な Unix 系で幅広く
利用可能な文字エンコーディングコンバータです。
このスクリプトは元々は Perl 5.8.0 の機能デモでしたが、ほぼどのような
場合でも iconv を使う場面で piconv を使えます。

=item L<ptar>

=begin original

F<ptar> is a tar-like program, written in pure Perl.

=end original

F<ptar> は tar 風のプログラムで、ピュア Perl で書かれています。

=item L<ptardiff>

=begin original

F<ptardiff> is a small utility that produces a diff between an extracted
archive and an unextracted one. (Note that this utility requires the
C<Text::Diff> module to function properly; this module isn't distributed
with perl, but is available from the CPAN.)

=end original

F<ptardiff> は、展開されたアーカイブと展開されていないアーカイブの
差分を生成する小さいユーティリティです。
(このユーティリティは C<Text::Diff> モジュールが正しく動作することが
必要であることに注意してください; このモジュールは perl と共に配布は
されていませんが、CPAN から利用可能です。)

=item L<ptargrep>

=begin original

F<ptargrep> is a utility to apply pattern matching to the contents of files 
in a tar archive.

=end original

F<ptargrep> は、tar アーカイブ内のファイルの内容にパターンマッチングを
適用するユーティリティです。

=item L<shasum>

=begin original

This utility, that comes with the C<Digest::SHA> module, is used to print
or verify SHA checksums.

=end original

C<Digest::SHA> モジュールと共に配布されているこのユーティリティは、
SHA チェックサムを表示または検証するために使われます。

=back

=head2 Installation

(インストール)

=begin original

These utilities help manage extra Perl modules that don't come with the perl
distribution.

=end original

これらのユーティリティは perl 配布に含まれていない追加の Perl モジュールの
管理を助けます。

=over 3

=item L<cpan>

=begin original

F<cpan> is a command-line interface to CPAN.pm.  It allows you to install
modules or distributions from CPAN, or just get information about them, and
a lot more.  It is similar to the command line mode of the L<CPAN> module,

=end original

F<cpan> は CPAN.pm へのコマンドラインインターフェースです。
CPAN からモジュールやディストリビューションをインストールしたり、
単にこれらの情報を入手したり、その他にも多くの機能があります。
これは L<CPAN> モジュールのコマンドラインモードと似ています。

    perl -MCPAN -e shell

=item L<cpanp>

=begin original

F<cpanp> is, like F<cpan>, a command-line interface to the CPAN, using
the C<CPANPLUS> module as a back-end. It can be used interactively or
imperatively.

=end original

F<cpanp> は F<cpan> と同様 CPAN へのコマンドラインインターフェースで、
バックエンドとして C<CPANPLUS> を使います。
対話的と命令的両方で使えます。

=item L<cpan2dist>

=begin original

F<cpan2dist> is a tool to create distributions (or packages) from CPAN
modules, then suitable for your package manager of choice. Support for
specific formats are available from CPAN as C<CPANPLUS::Dist::*> modules.

=end original

F<cpan2dist> は CPAN モジュールからディストリビューション(または
パッケージ) を作成して、選択したパッケージマネージャに適したものにする
ツールです。
特定の形式への対応は CPAN の C<CPANPLUS::Dist::*> モジュールから
利用可能です。

=item L<instmodsh>

=begin original

A little interface to ExtUtils::Installed to examine installed modules,
validate your packlists and even create a tarball from an installed module.

=end original

インストールしたモジュールの検査、packlists の検証、さらに
インストールしたモジュールから tarball の作成まで出来る、
ExtUtils::Installed への簡単なインターフェースです。

=back

=head1 SEE ALSO

L<perldoc|perldoc>, L<pod2man|pod2man>, L<perlpod>,
L<pod2html|pod2html>, L<pod2usage|pod2usage>, L<podselect|podselect>,
L<podchecker|podchecker>, L<splain|splain>, L<perldiag>,
L<roffitall|roffitall>, L<a2p|a2p>, L<s2p|s2p>, L<find2perl|find2perl>,
L<File::Find|File::Find>, L<pl2pm|pl2pm>, L<perlbug|perlbug>,
L<h2ph|h2ph>, L<c2ph|c2ph>, L<h2xs|h2xs>, L<dprofpp|dprofpp>,
L<Devel::DProf>, L<enc2xs>, L<xsubpp>, L<cpan>, L<cpanp>, L<cpan2dist>,
L<instmodsh>, L<piconv>, L<prove>, L<corelist>, L<ptar>, L<ptardiff>,
L<shasum>

=cut

=begin meta

Translate: SHIRAKATA Kentaro <argrath@ub32.org>
Status: completed

=end meta

