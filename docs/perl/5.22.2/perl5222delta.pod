
=encoding euc-jp

=head1 NAME

=begin original

perldelta - what is new for perl v5.22.2

=end original

perl5222delta - perl v5.22.2 での変更点

=head1 DESCRIPTION

=begin original

This document describes differences between the 5.22.1 release and the 5.22.2
release.

=end original

この文書は 5.22.1 リリースと 5.22.2 リリースの変更点を記述しています。

=begin original

If you are upgrading from an earlier release such as 5.22.0, first read
L<perl5221delta>, which describes differences between 5.22.0 and 5.22.1.

=end original

5.22.0 のような以前のリリースから更新する場合は、まず 5.22.0 と
5.22.1 の違いについて記述している L<perl5221delta> を読んでください。

=head1 Security

=head2 Fix out of boundary access in Win32 path handling

=begin original

This is CVE-2015-8608.  For more information see
L<[perl #126755]|https://rt.perl.org/Ticket/Display.html?id=126755>.

=end original

これは CVE-2015-8608 です。
さらなる情報については
L<[perl #126755]|https://rt.perl.org/Ticket/Display.html?id=126755> を
参照してください。

=head2 Fix loss of taint in C<canonpath()>

=begin original

This is CVE-2015-8607.  For more information see
L<[perl #126862]|https://rt.perl.org/Ticket/Display.html?id=126862>.

=end original

これは CVE-2015-8607 です。
さらなる情報については
L<[perl #126862]|https://rt.perl.org/Ticket/Display.html?id=126862> を
参照してください。

=head2 Set proper umask before calling C<mkstemp(3)>

=begin original

In 5.22.0 perl started setting umask to C<0600> before calling C<mkstemp(3)>
and restoring it afterwards.  This wrongfully tells C<open(2)> to strip the
owner read and write bits from the given mode before applying it, rather than
the intended negation of leaving only those bits in place.

=end original

5.22.0 から、perl は C<mkstemp(3)> を呼び出す前に umask を C<0600> に設定し、
後で復元するようになりました。
これにより、所有者の読み込みと書き込みのビットだけを残したいという意図とは
逆に、間違って C<open(2)> に、与えられたモードを適用する前に、
これらのビットを取り除くように伝えていました。

=begin original

Systems that use mode C<0666> in C<mkstemp(3)> (like old versions of glibc)
create a file with permissions C<0066>, leaving world read and write permissions
regardless of current umask.

=end original

(古いバージョンの glibc のように) C<mkstemp(3)> でモード C<0666> を使う
システムはパーミッション C<0066> でファイルを作ります; これにより現在の
umask に関わらず誰でも読み書きできるパーミッションのままになります。

=begin original

This has been fixed by using umask C<0177> instead.

=end original

これは代わりに umask C<0177> を使うことによって修正されました。

L<[perl #127322]|https://rt.perl.org/Ticket/Display.html?id=127322>

=head2 Avoid accessing uninitialized memory in Win32 C<crypt()>

(Win32 C<crypt()> で未初期化メモリにアクセスしないように)

=begin original

Validation that will detect both a short salt and invalid characters in the
salt has been added.

=end original

短いソルトやソルトの中の不正な文字の検出処理が追加されました。

L<[perl #126922]|https://rt.perl.org/Ticket/Display.html?id=126922>

=head2 Remove duplicate environment variables from C<environ>

(C<environ> から重複した環境変数を削除する)

=begin original

Previously, if an environment variable appeared more than once in C<environ[]>,
L<C<%ENV>|perlvar/%ENV> would contain the last entry for that name, while a
typical C<getenv()> would return the first entry.  We now make sure C<%ENV>
contains the same as what C<getenv()> returns.

=end original

以前は、一つの環境変数が C<environ[]> に複数回現れると、
C<%ENV|perlvar/%ENV> はその名前の最後のエントリを保持していました; 一方
典型的なC<getenv()> は最初のエントリを保持します。
C<%ENV> は C<getenv()> が返すものと同じものを保持するようになりました。

=begin original

Secondly, we now remove duplicates from C<environ[]>, so if a setting with that
name is set in C<%ENV> we won't pass an unsafe value to a child process.

=end original

次に、C<environ[]> から重複を取り除くようになったので、その名前の設定が
C<%ENV> で設定された場合、安全でない値が子プロセスに渡らないようになりました。

=begin original

This is CVE-2016-2381.

=end original

これは CVE-2016-2381 です。

=head1 Incompatible Changes

(互換性のない変更)

=begin original

There are no changes intentionally incompatible with Perl 5.22.1.  If any
exist, they are bugs, and we request that you submit a report.  See
L</Reporting Bugs> below.

=end original

故意に、5.22.1 から互換性がなくなるようにした変更はありません。
もし 5.22.1 との互換性がなければ、それはバグですので、報告をお願いします。
以下の L</Reporting Bugs> を参照してください。

=head1 Modules and Pragmata

(モジュールとプラグマ)

=head2 Updated Modules and Pragmata

(更新されたモジュールとプラグマ)

=over 4

=item *

=begin original

L<File::Spec> has been upgraded from version 3.56 to 3.56_01.

=end original

L<File::Spec> はバージョン 3.56 から 3.56_01 に更新されました。

=begin original

C<canonpath()> now preserves taint.  See L</"Fix loss of taint in
C<canonpath()>">.

=end original

C<canonpath()> は汚染状況を保存するようになりました。
L</"Fix loss of taint in C<canonpath()>"> を参照してください。

=item *

=begin original

L<Module::CoreList> has been upgraded from version 5.20151213 to 5.20160429.

=end original

L<Module::CoreList> はバージョン 5.20151213 から 5.20160410 に更新されました。

=begin original

The version number of L<Digest::SHA> listed for Perl 5.18.4 was wrong and has
been corrected.  Likewise for the version number of L<Config> in 5.18.3 and
5.18.4.
L<[perl #127624]|https://rt.perl.org/Ticket/Display.html?id=127624>

=end original

Perl 5.18.4 での L<Digest::SHA> のバージョン番号が間違っていたので
修正されました。
5.18.3 と 5.18.4 での L<Config> のバージョン番号も同様です。
L<[perl #127624]|https://rt.perl.org/Ticket/Display.html?id=127624>

=back

=head1 Documentation

(文書)

=head2 Changes to Existing Documentation

(既存の文書の変更)

=head3 L<perldiag>

=over 4

=item *

=begin original

The explanation of the warning "unable to close filehandle %s properly: %s"
which can occur when doing an implicit close of a filehandle has been expanded
and improved.

=end original

ファイルハンドルを暗黙に閉じたときに怒ることがある警告
"unable to close filehandle %s properly: %s" の説明がが拡張、改良されました。

=back

=head3 L<perlfunc>

=over 4

=item *

=begin original

The documentation of L<C<hex()>|perlfunc/hex> has been revised to clarify valid
inputs.

=end original

C<hex()|perlfunc/hex> の文章は、有効な入力を明確化するために見直されました。

=back

=head1 Configuration and Compilation

(設定とコンパイル)

=over 4

=item *

=begin original

Dtrace builds now build successfully on systems with a newer dtrace that
require an input object file that uses the probes in the F<.d> file.

=end original

Dtrace ビルドは、F<.d> ファイルのプローブが使っている入力オブジェクト
ファイルが要求するよりも新しい dtrace を持つシステムでビルドに
成功するようになりました。

=begin original

Previously the probe would fail and cause a build failure.

=end original

以前はプローブに失敗して、ビルドが失敗していました。

L<[perl #122287]|https://rt.perl.org/Ticket/Display.html?id=122287>

=item *

=begin original

F<Configure> no longer probes for F<libnm> by default.  Originally this was the
"New Math" library, but the name has been re-used by the GNOME NetworkManager.

=end original

F<Configure> はもはやデフォルトでは F<libnm> をプローブしなくなりました。
元々はこれは "New Math" ライブラリでしたが、この名前は
GNOME NetworkManager によって再利用されました。

L<[perl #127131]|https://rt.perl.org/Ticket/Display.html?id=127131>

=item *

=begin original

F<Configure> now knows about gcc 5.

=end original

F<Configure> は gcc 5 について知るようになりました。

=item *

=begin original

Compiling perl with B<-DPERL_MEM_LOG> now works again.

=end original

B<-DPERL_MEM_LOG> 付きでの perl のコンパイルが再び動作するようになりました。

=back

=head1 Platform Support

(プラットフォーム対応)

=head2 Platform-Specific Notes

(プラットフォーム固有の注意)

=over 4

=item Darwin

=begin original

Compiling perl with B<-Dusecbacktrace> on Darwin now works again.

=end original

Darwin での B<-Dusecbacktrace> 付きでの perl のコンパイルが再び
動作するようになりました。

L<[perl #127764]|https://rt.perl.org/Ticket/Display.html?id=127764>

=item OS X/Darwin

=begin original

Builds with both B<-DDEBUGGING> and threading enabled would fail with a "panic:
free from wrong pool" error when built or tested from Terminal on OS X.  This
was caused by perl's internal management of the environment conflicting with an
atfork handler using the libc C<setenv()> function to update the environment.

=end original

C<-DDEBUGGING> とスレッドの両方を有効にしたビルドは、OS X の Terminal で
ビルドやテストをすると "panic: free from wrong pool" で失敗します。
これは、perl 内部の環境管理が、環境を更新するために libc の C<setenv()> 関数を
使う atfork ハンドラと競合するからです。

=begin original

Perl now uses C<setenv()>/C<unsetenv()> to update the environment on OS X.

=end original

Perl は OS X の環境の更新に C<setenv()>/C<unsetenv()> を使うようになりました。

L<[perl #126240]|https://rt.perl.org/Ticket/Display.html?id=126240>

=item ppc64el

=begin original

The floating point format of ppc64el (Debian naming for little-endian PowerPC)
is now detected correctly.

=end original

ppc64el (リトルエンディアン PowerPC の Debian での呼び名) の浮動小数点形式は
正しく検出されるようになりました。

=item Tru64

=begin original

A test failure in F<t/porting/extrefs.t> has been fixed.

=end original

F<t/porting/extrefs.t> でのテスト失敗が修正されました。

=back

=head1 Internal Changes

=over 4

=item *

=begin original

An unwarranted assertion in C<Perl_newATTRSUB_x()> has been removed.  If a stub
subroutine definition with a prototype has been seen, then any subsequent stub
(or definition) of the same subroutine with an attribute was causing an
assertion failure because of a null pointer.

=end original

C<Perl_newATTRSUB_x()> での保証されないアサートが取り除かれました。
プロトタイプ付きのスタブサブルーチン定義がある場合、属性を持つ同じ
サブルーチンのスタブ(または定義)が引き続くと、ヌルポインタによるアサート失敗が
発生していました。

L<[perl #126845]|https://rt.perl.org/Ticket/Display.html?id=126845>

=back

=head1 Selected Bug Fixes

(バグ修正の抜粋)

=over 4

=item *

=begin original

Calls to the placeholder C<&PL_sv_yes> used internally when an C<import()> or
C<unimport()> method isn't found now correctly handle scalar context.
L<[perl #126042]|https://rt.perl.org/Ticket/Display.html?id=126042>

=end original

C<import()> や C<unimport()> メソッドが見つからないときに内部で使われる
C<&PL_sv_yes> プレースホルダの呼び出しは、正しくスカラコンテキストを
扱えるようになりました。
L<[perl #126042]|https://rt.perl.org/Ticket/Display.html?id=126042>

=item *

=begin original

The L<C<pipe()>|perlfunc/pipe> operator would assert for C<DEBUGGING> builds
instead of producing the correct error message.  The condition asserted on is
detected and reported on correctly without the assertions, so the assertions
were removed.
L<[perl #126480]|https://rt.perl.org/Ticket/Display.html?id=126480>

=end original

C<pipe()|perlfunc/pipe> 演算子は C<DEBUGGING> ビルドのとき、正しいエラーメッセージを
出力せずにアサートを起こすことがありました。
アサートされる条件はアサートなしで正しく検出および報告されるので、
アサートは削除されました。
L<[perl #126480]|https://rt.perl.org/Ticket/Display.html?id=126480>

=item *

=begin original

In some cases, failing to parse a here-doc would attempt to use freed memory.
This was caused by a pointer not being restored correctly.
L<[perl #126443]|https://rt.perl.org/Ticket/Display.html?id=126443>

=end original

場合によっては、ヒヤドキュメントのパースの失敗時に解放されたメモリを
使おうとすることがありました。
これはポインタが正しく復元されないために起きていました。
L<[perl #126443]|https://rt.perl.org/Ticket/Display.html?id=126443>

=item *

=begin original

Perl now reports more context when it sees an array where it expects to see an
operator, and avoids an assertion failure.
L<[perl #123737]|https://rt.perl.org/Ticket/Display.html?id=123737>

=end original

演算子が想定される場所に配列があったときにより多くの情報を報告し、
アサート失敗を避けるようになりました。
L<[perl #123737]|https://rt.perl.org/Ticket/Display.html?id=123737>

=item *

=begin original

If a here-doc was found while parsing another operator, the parser had already
read end of file, and the here-doc was not terminated, perl could produce an
assertion or a segmentation fault.  This now reliably complains about the
unterminated here-doc.
L<[perl #125540]|https://rt.perl.org/Ticket/Display.html?id=125540>

=end original

他の演算子のパース中にヒヤドキュメントが見つかり、パーサが既にファイルの
末尾まで読み込んでいて、ヒヤドキュメントが終端していないとき、perl は
アサートしたりセグメンテーションフォルトしたりすることがありました。
終端していないヒヤドキュメントに関するエラーを確実に出力するようになりました。
L<[perl #125540]|https://rt.perl.org/Ticket/Display.html?id=125540>

=item *

=begin original

Parsing beyond the end of the buffer when processing a C<#line> directive with
no filename is now avoided.
L<[perl #127334]|https://rt.perl.org/Ticket/Display.html?id=127334>

=end original

ファイル名なしの C<#line> 指示子を処理するときにバッファの末尾を越えて
パースしなくなりました。
L<[perl #127334]|https://rt.perl.org/Ticket/Display.html?id=127334>

=item *

=begin original

Perl 5.22.0 added support for the C99 hexadecimal floating point notation, but
sometimes misparsed hex floats.  This has been fixed.
L<[perl #127183]|https://rt.perl.org/Ticket/Display.html?id=127183>

=end original

Perl 5.22.0 では C99 の 16 進浮動小数点記法対応が追加されましたが、時々
16 進小数を間違ってパースしていました。
これは修正されました。
L<[perl #127183]|https://rt.perl.org/Ticket/Display.html?id=127183>

=item *

=begin original

Certain regex patterns involving a complemented posix class in an inverted
bracketed character class, and matching something else optionally would
improperly fail to match.  An example of one that could fail is
C<qr/_?[^\Wbar]\x{100}/>.  This has been fixed.
L<[perl #127537]|https://rt.perl.org/Ticket/Display.html?id=127537>

=end original

否定の大かっこ文字クラスの中に反転 POSIX クラスがあり、何か他にオプションで
マッチングするような特定の正規表現パターンは、
間違ってマッチングに失敗することがありました。
失敗を引き起こすものの例は C<qr/_?[^\Wbar]\x{100}/> です。
これは修正されました。
L<[perl #127537]|https://rt.perl.org/Ticket/Display.html?id=127537>

=item *

=begin original

Fixed an issue with L<C<pack()>|perlfunc/pack> where C<< pack "H" >> (and
C<< pack "h" >>) could read past the source when given a non-utf8 source and a
utf8 target.
L<[perl #126325]|https://rt.perl.org/Ticket/Display.html?id=126325>

=end original

C<< pack "H" >> (および C<< pack "h" >>) が、非 utf8 のソースと utf8 の
ターゲットを与えられたとき、ソースの先頭より前を読むことがあるという
C<pack()|perlfunc/pack> の問題が修正されました。
L<[perl #126325]|https://rt.perl.org/Ticket/Display.html?id=126325>

=item *

=begin original

Fixed some cases where perl would abort due to a segmentation fault, or a
C-level assert.
L<[perl #126193]|https://rt.perl.org/Ticket/Display.html?id=126193>
L<[perl #126257]|https://rt.perl.org/Ticket/Display.html?id=126257>
L<[perl #126258]|https://rt.perl.org/Ticket/Display.html?id=126258>
L<[perl #126405]|https://rt.perl.org/Ticket/Display.html?id=126405>
L<[perl #126602]|https://rt.perl.org/Ticket/Display.html?id=126602>
L<[perl #127773]|https://rt.perl.org/Ticket/Display.html?id=127773>
L<[perl #127786]|https://rt.perl.org/Ticket/Display.html?id=127786>

=end original

セグメンテーションフォルトや C レベルのアサートで perl が異常終了する
いくつかのケースが修正されました。
L<[perl #126193]|https://rt.perl.org/Ticket/Display.html?id=126193>
L<[perl #126257]|https://rt.perl.org/Ticket/Display.html?id=126257>
L<[perl #126258]|https://rt.perl.org/Ticket/Display.html?id=126258>
L<[perl #126405]|https://rt.perl.org/Ticket/Display.html?id=126405>
L<[perl #126602]|https://rt.perl.org/Ticket/Display.html?id=126602>
L<[perl #127773]|https://rt.perl.org/Ticket/Display.html?id=127773>
L<[perl #127786]|https://rt.perl.org/Ticket/Display.html?id=127786>

=item *

=begin original

A memory leak when setting C<$ENV{foo}> on Darwin has been fixed.
L<[perl #126240]|https://rt.perl.org/Ticket/Display.html?id=126240>

=end original

darwin で C<$ENV{foo}> を設定するときのメモリリークが修正されました。
L<[perl #126240]|https://rt.perl.org/Ticket/Display.html?id=126240>

=item *

=begin original

Perl now correctly raises an error when trying to compile patterns with
unterminated character classes while there are trailing backslashes.
L<[perl #126141]|https://rt.perl.org/Ticket/Display.html?id=126141>

=end original

文字クラスが終端していないけれども末尾に逆スラッシュがあるパターンを
コンパイルしようとしたときに正しくエラーを発生させるようになりました。
L<[perl #126141]|https://rt.perl.org/Ticket/Display.html?id=126141>

=item *

=begin original

C<NOTHING> regops and C<EXACTFU_SS> regops in C<make_trie()> are now handled
properly.
L<[perl #126206]|https://rt.perl.org/Ticket/Display.html?id=126206>

=end original

C<make_trie()> で C<NOTHING> regops と C<EXACTFU_SS> regops を正しく
扱うようになりました。
L<[perl #126206]|https://rt.perl.org/Ticket/Display.html?id=126206>

=item *

=begin original

Perl now only tests C<semctl()> if we have everything needed to use it.  In
FreeBSD the C<semctl()> entry point may exist, but it can be disabled by
policy.
L<[perl #127533]|https://rt.perl.org/Ticket/Display.html?id=127533>

=end original

使うために必要なもの全てがある場合にだけ、C<semctl()> を
テストするようになりました。
FreeBSD では C<semctl()> エントリポイントは存在するかもしれませんが、
ポリシーにより無効になっているかもしれません。
L<[perl #127533]|https://rt.perl.org/Ticket/Display.html?id=127533>

=item *

=begin original

A regression that allowed undeclared barewords as hash keys to work despite
strictures has been fixed.
L<[perl #126981]|https://rt.perl.org/Ticket/Display.html?id=126981>

=end original

strict が指定されているにも関わらずハッシュキーとして未定義の裸の単語が
許されるという退行が修正されました。
L<[perl #126981]|https://rt.perl.org/Ticket/Display.html?id=126981>

=item *

=begin original

As an optimization (introduced in Perl 5.20.0), L<C<uc()>|perlfunc/uc>,
L<C<lc()>|perlfunc/lc>, L<C<ucfirst()>|perlfunc/ucfirst> and
L<C<lcfirst()>|perlfunc/lcfirst> sometimes modify their argument in-place
rather than returning a modified copy.  The criteria for this optimization has
been made stricter to avoid these functions accidentally modifying in-place
when they should not, which has been happening in some cases, e.g. in
L<List::Util>.

=end original

(Perl 5.20.0 から導入された) 最適化として、L<C<uc()>|perlfunc/uc>,
L<C<lc()>|perlfunc/lc>, L<C<ucfirst()>|perlfunc/ucfirst>,
L<C<lcfirst()>|perlfunc/lcfirst> は時々修正したコピーではなくその場で
引数を変更します。
この最適化の基準がより厳密になりました; その場で変更するべきではない場合に
間違ってその場で変更してしまうことを防ぐためです; これは L<List::Util> などの
一部の場合で発生していました。

=item *

=begin original

Excessive memory usage in the compilation of some regular expressions involving
non-ASCII characters has been reduced.  A more complete fix is forthcoming in
Perl 5.24.0.

=end original

非 ASCII 文字が関係する一部の正規表現のコンパイルに使用されるメモリが
減らされました。
より完全な修正は来るべき Perl 5.24.0 で行われます。

=back

=head1 Acknowledgements

=begin original

Perl 5.22.2 represents approximately 5 months of development since Perl 5.22.1
and contains approximately 3,000 lines of changes across 110 files from 24
authors.

=end original

Perl 5.22.2 は、Perl 5.22.1 以降、24 人の作者によって、
110 のファイルに約 3,000 行の変更を加えて、
約 5 ヶ月開発されてきました。

=begin original

Excluding auto-generated files, documentation and release tools, there were
approximately 1,500 lines of changes to 52 .pm, .t, .c and .h files.

=end original

自動生成ファイル、文書、リリースツールを除くと、52 の .pm, .t, .c,
.h ファイルに約 1,500 行の変更を加えました。

=begin original

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.22.2:

=end original

Perl は、活気のあるユーザーと開発者のコミュニティのおかげで 20 年を超えて
繁栄しています。
以下の人々が、Perl 5.22.2 になるための改良に貢献したことが分かっています:

Aaron Crane, Abigail, Andreas KE<ouml>nig, Aristotle Pagaltzis, Chris E<39>BinGOsE<39>
Williams, Craig A. Berry, Dagfinn Ilmari MannsE<aring>ker, David Golden, David
Mitchell, H.Merijn Brand, James E Keenan, Jarkko Hietaniemi, Karen Etheridge,
Karl Williamson, Matthew Horsfall, Niko Tyni, Ricardo Signes, Sawyer X, Stevan
Little, Steve Hay, Todd Rinaldo, Tony Cook, Vladimir Timofeev, Yves Orton.

=begin original

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

=end original

これはバージョンコントロール履歴から自動的に生成しているので、ほぼ確実に
不完全です。
特に、Perl バグトラッカーに問題を報告をしてくれた (とてもありがたい)貢献者の
名前を含んでいません。

=begin original

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

=end original

このバージョンに含まれている変更の多くは、Perl コアに含まれている CPAN
モジュール由来のものです。
私たちは Perl の発展を助けている CPAN コミュニティ全体に感謝します。

=begin original

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=end original

全ての Perl の歴史的な貢献者のより完全な一覧については、どうか Perl ソース
配布に含まれている F<AUTHORS> を参照してください。

=head1 Reporting Bugs

(バグ報告)

=begin original

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at http://www.perl.org/ ,
the Perl Home Page.

=end original

もしバグと思われるものを見つけたら、comp.lang.perl.misc ニュースグループに
最近投稿された記事や https://rt.perl.org/ にある perl バグ
データベースを確認してください。
Perl ホームページ、http://www.perl.org/ にも情報があります。

=begin original

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

=end original

もしまだ報告されていないバグだと確信したら、そのリリースに含まれている
L<perlbug> プログラムを実行してください。
バグの再現スクリプトを十分小さく、しかし有効なコードに切りつめることを
意識してください。
バグレポートは C<perl -V> の出力と一緒に perlbug@perl.org に送られ
Perl porting チームによって解析されます。

=begin original

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=end original

もし報告しようとしているバグがセキュリティに関するもので、公開されている
メーリングリストに送るのが不適切なものなら、
perl5-security-report@perl.org に送ってください。
このアドレスは、問題の影響を評価し、解決法を見つけ、Perl が対応している
全てのプラットフォームで問題を軽減または解決するパッチをリリースするのを
助けることが出来る、全てのコアコミッタが参加している非公開の
メーリングリストになっています。
このアドレスは、独自に CPAN で配布されているモジュールではなく、
Perl コアのセキュリティ問題だけに使ってください。

=head1 SEE ALSO

=begin original

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

=end original

変更点の完全な詳細を見る方法については F<Changes> ファイル。

=begin original

The F<INSTALL> file for how to build Perl.

=end original

Perl のビルド方法については F<INSTALL> ファイル。

=begin original

The F<README> file for general stuff.

=end original

一般的なことについては F<README> ファイル。

=begin original

The F<Artistic> and F<Copying> files for copyright information.

=end original

著作権情報については F<Artistic> 及び F<Copying> ファイル。

=cut

=begin meta

Translate: SHIRAKATA Kentaro <argrath@ub32.org>
Status: completed

=end meta

