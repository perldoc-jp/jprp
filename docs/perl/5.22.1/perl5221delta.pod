
=encoding euc-jp

=head1 NAME

=begin original

perldelta - what is new for perl v5.22.1

=end original

perl5221delta - perl v5.22.1 での変更点

=head1 DESCRIPTION

=begin original

This document describes differences between the 5.22.0 release and the 5.22.1
release.

=end original

この文書は 5.22.0 リリースと 5.22.1 リリースの変更点を記述しています。

=begin original

If you are upgrading from an earlier release such as 5.20.0, first read
L<perl5220delta>, which describes differences between 5.20.0 and 5.22.0.

=end original

5.20.0 のような以前のリリースから更新する場合は、まず 5.20.0 と
5.22.0 の違いについて記述している L<perl5220delta> を読んでください。

=head1 Incompatible Changes

(互換性のない変更)

=begin original

There are no changes intentionally incompatible with 5.20.0 other than the
following single exception, which we deemed to be a sensible change to make in
order to get the new C<\b{wb}> and (in particular) C<\b{sb}> features sane
before people decided they're worthless because of bugs in their Perl 5.22.0
implementation and avoided them in the future.
If any others exist, they are bugs, and we request that you submit a report.
See L</Reporting Bugs> below.

=end original

故意に 5.20.0 から互換性がなくなるようにした変更は、以下の一つを除いて
ありません; 新しい C<\b{wb}> と (特に) C<\b{sb}> について、Perl 5.22.0 実装の
バグのために、人々がこれらを無価値であると決定し、将来これらを使わないように
するようになる前に、これらをまともにするために、目に見える変更を行いました。
もしその他にあれば、それはバグですので、報告をお願いします。
以下の L</Reporting Bugs> を参照してください。

=head2 Bounds Checking Constructs

=begin original

Several bugs, including a segmentation fault, have been fixed with the bounds
checking constructs (introduced in Perl 5.22) C<\b{gcb}>, C<\b{sb}>, C<\b{wb}>,
C<\B{gcb}>, C<\B{sb}>, and C<\B{wb}>.  All the C<\B{}> ones now match an empty
string; none of the C<\b{}> ones do.
L<[perl #126319]|https://rt.perl.org/Ticket/Display.html?id=126319>

=end original

(Perl 5.22 で導入された) 境界チェック構文 C<\b{gcb}>, C<\b{sb}>, C<\b{wb}>,
C<\B{gcb}>, C<\B{sb}>, C<\B{wb}> での、セグメンテーションフォルトを含む
いくつかのバグが修正されました。
全ての C<\B{}> で空文字列がマッチングするようになり、全ての C<\b{}> で
空文字列がマッチングしないようになりました。
L<[perl #126319]|https://rt.perl.org/Ticket/Display.html?id=126319>

=head1 Modules and Pragmata

(モジュールとプラグマ)

=head2 Updated Modules and Pragmata

(更新されたモジュールとプラグマ)

=over 4

=item *

=begin original

L<Module::CoreList> has been upgraded from version 5.20150520 to 5.20151213.

=end original

L<Module::CoreList> はバージョン 5.20150520 から 5.20151213 に更新されました。

=item *

=begin original

L<PerlIO::scalar> has been upgraded from version 0.22 to 0.23.

=end original

L<PerlIO::scalar> はバージョン 0.22 から 0.23 に更新されました。

=item *

=begin original

L<POSIX> has been upgraded from version 1.53 to 1.53_01.

=end original

L<POSIX> はバージョン 1.53 から 1.53_01 に更新されました。

=begin original

If C<POSIX::strerror> was passed C<$!> as its argument then it accidentally
cleared C<$!>.  This has been fixed.
L<[perl #126229]|https://rt.perl.org/Ticket/Display.html?id=126229>

=end original

C<POSIX::strerror> の引数に C<$!> が渡されると、誤って C<$!> を
クリアしていました。
これは修正されました。
L<[perl #126229]|https://rt.perl.org/Ticket/Display.html?id=126229>

=item *

=begin original

L<Storable> has been upgraded from version 2.53 to 2.53_01.

=end original

L<Storable> はバージョン 2.53 から 2.53_01 に更新されました。

=item *

=begin original

L<warnings> has been upgraded from version 1.32 to 1.34.

=end original

L<warnings> はバージョン 1.32 から 1.34 に更新されました。

=begin original

The C<warnings::enabled> example now actually uses C<warnings::enabled>.
L<[perl #126051]|https://rt.perl.org/Ticket/Display.html?id=126051>

=end original

C<warnings::enabled> の例は、実際に C<warnings::enabled> を
使うようになりました。
L<[perl #126051]|https://rt.perl.org/Ticket/Display.html?id=126051>

=item *

=begin original

L<Win32> has been upgraded from version 0.51 to 0.52.

=end original

L<Win32> はバージョン 0.51 から 0.52 に更新されました。

=begin original

This has been updated for Windows 8.1, 10 and 2012 R2 Server.

=end original

これは Windows 8.1, 10, 2012 R2 Server のために更新されました。

=back

=head1 Documentation

(文書)

=head2 Changes to Existing Documentation

(既存の文書の変更)

=head3 L<perltie>

=over 4

=item *

=begin original

The usage of C<FIRSTKEY> and C<NEXTKEY> has been clarified.

=end original

C<FIRSTKEY> と C<NEXTKEY> の使用法が明確化されました。

=back

=head3 L<perlvar>

=over 4

=item *

=begin original

The specific true value of C<$!{E...}> is now documented, noting that it is
subject to change and not guaranteed.

=end original

C<$!{E...}> の特定の真の値について、変更される可能性があり、保証されないことが
文書化されました。

=back

=head1 Diagnostics

(診断メッセージ)

=begin original

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=end original

以下の追加や変更が、警告や致命的エラーメッセージ含む診断出力に行われました。
完全な診断メッセージの一覧については、L<perldiag> を参照してください。

=head2 Changes to Existing Diagnostics

(既存の診断メッセージの変更)

=over 4

=item *

=begin original

The C<printf> and C<sprintf> builtins are now more careful about the warnings
they emit: argument reordering now disables the "redundant argument" warning in
all cases.
L<[perl #125469]|https://rt.perl.org/Ticket/Display.html?id=125469>

=end original

組み込み関数 C<printf> と C<sprintf> は、警告の出力に対してより慎重に
なりました: 引数の並べ替えは全ての場合において "redundant argument" 警告を
無効にするようになりました。
L<[perl #125469]|https://rt.perl.org/Ticket/Display.html?id=125469>

=back

=head1 Configuration and Compilation

(設定とコンパイル)

=over 4

=item *

=begin original

Using the C<NO_HASH_SEED> define in combination with the default hash algorithm
C<PERL_HASH_FUNC_ONE_AT_A_TIME_HARD> resulted in a fatal error while compiling
the interpreter, since Perl 5.17.10.  This has been fixed.

=end original

Perl 5.17.10 から、C<NO_HASH_SEED> 定義をデフォルトのハッシュアルゴリズム
C<PERL_HASH_FUNC_ONE_AT_A_TIME_HARD> と共に使うと、インタプリタの
コンパイル時に致命的エラーになっていました。
これは修正されました。

=item *

=begin original

Configuring with ccflags containing quotes (e.g.
C<< -Accflags='-DAPPLLIB_EXP=\"/usr/libperl\"' >>) was broken in Perl 5.22.0
but has now been fixed again.
L<[perl #125314]|https://rt.perl.org/Ticket/Display.html?id=125314>

=end original

クォートを含む ccflags (例えば
C<< -Accflags='-DAPPLLIB_EXP=\"/usr/libperl\"' >>) での Configure は
Perl 5.22.0 で壊れていましたが、再び修正されました。
L<[perl #125314]|https://rt.perl.org/Ticket/Display.html?id=125314>

=back

=head1 Platform Support

(プラットフォーム対応)

=head2 Platform-Specific Notes

(プラットフォーム固有の注意)

=over 4

=item IRIX

=over

=item *

=begin original

Under some circumstances IRIX stdio fgetc() and fread() set the errno to
C<ENOENT>, which made no sense according to either IRIX or POSIX docs.  Errno
is now cleared in such cases.
L<[perl #123977]|https://rt.perl.org/Ticket/Display.html?id=123977>

=end original

IRIX の stdio の fgetc() と fread() は、ある種の状況で errno に C<ENOENT> を
設定しますが、IRIX や POSIX の文書によればこれは無意味なものです。
errno はこのような場合ではクリアされるようになりました。
L<[perl #123977]|https://rt.perl.org/Ticket/Display.html?id=123977>

=item *

=begin original

Problems when multiplying long doubles by infinity have been fixed.
L<[perl #126396]|https://rt.perl.org/Ticket/Display.html?id=126396>

=end original

long double に無限を掛けたときの問題が修正されました。
L<[perl #126396]|https://rt.perl.org/Ticket/Display.html?id=126396>

=item *

=begin original

All tests pass now on IRIX with the default build configuration.

=end original

IRIX 上で、デフォルトのビルド設定で全てのテストが通るようになりました。

=back

=back

=head1 Selected Bug Fixes

(バグ修正の抜粋)

=over 4

=item *

=begin original

C<qr/(?[ () ])/> no longer segfaults, giving a syntax error message instead.
L<[perl #125805]|https://rt.perl.org/Ticket/Display.html?id=125805>

=end original

C<qr/(?[ () ])/> はもはやセグメンテーションフォルトを起こさず、代わりに
文法エラーを出すようになりました。
L<[perl #125805]|https://rt.perl.org/Ticket/Display.html?id=125805>

=item *

=begin original

Regular expression possessive quantifier Perl 5.20 regression now fixed.
C<qr/>I<PAT>C<{>I<min>,I<max>C<}+>C</> is supposed to behave identically to
C<qr/(?E<gt>>I<PAT>C<{>I<min>,I<max>C<})/>.  Since Perl 5.20, this didn't work
if I<min> and I<max> were equal.
L<[perl #125825]|https://rt.perl.org/Ticket/Display.html?id=125825>

=end original

正規表現所有量指定子の Perl 5.20 での退行は修正されました。
C<qr/>I<PAT>C<{>I<min>,I<max>C<}+>C</> は
C<qr/(?E<gt>>I<PAT>C<{>I<min>,I<max>C<})/> と同じように振る舞うことが
想定されていました。
Perl 5.20 から、I<min> と I<max> が同じ場合は動作していませんでした。
L<[perl #125825]|https://rt.perl.org/Ticket/Display.html?id=125825>

=item *

=begin original

Certain syntax errors in
L<perlrecharclass/Extended Bracketed Character Classes> caused panics instead
of the proper error message.  This has now been fixed.
L<[perl #126481]|https://rt.perl.org/Ticket/Display.html?id=126481>

=end original

L<perlrecharclass/Extended Bracketed Character Classes> でのある種の
文法エラーで、適切なエラーメッセージが表示されずに panic していました。
これは修正されました。
L<[perl #126481]|https://rt.perl.org/Ticket/Display.html?id=126481>

=item *

=begin original

C<< BEGIN <> >> no longer segfaults and properly produces an error message.
L<[perl #125341]|https://rt.perl.org/Ticket/Display.html?id=125341>

=end original

C<< BEGIN <> >> はもはやセグメンテーションフォルトを起こさず、適切に
エラーメッセージを出力するようになりました。
L<[perl #125341]|https://rt.perl.org/Ticket/Display.html?id=125341>

=item *

=begin original

A regression from Perl 5.20 has been fixed, in which some syntax errors in
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes> constructs
within regular expression patterns could cause a segfault instead of a proper
error message.
L<[perl #126180]|https://rt.perl.org/Ticket/Display.html?id=126180>

=end original

正規表現中の
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes> 構文に
文法エラーがあると、適切なエラーメッセージが表示されずに
セグメンテーションフォルトを引き起こすという、Perl 5.20 からの退行が
修正されました。
L<[perl #126180]|https://rt.perl.org/Ticket/Display.html?id=126180>

=item *

=begin original

Another problem with
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes>
constructs has been fixed wherein things like C<\c]> could cause panics.
L<[perl #126181]|https://rt.perl.org/Ticket/Display.html?id=126181>

=end original

C<\c]> のようなものが panic を引き起こすという、
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes> 構文の
もう一つの問題が修正されました。
L<[perl #126181]|https://rt.perl.org/Ticket/Display.html?id=126181>

=item *

=begin original

In Perl 5.22.0, the logic changed when parsing a numeric parameter to the -C
option, such that the successfully parsed number was not saved as the option
value if it parsed to the end of the argument.
L<[perl #125381]|https://rt.perl.org/Ticket/Display.html?id=125381>

=end original

Perl 5.22.0 では、-C オプションへの数値引数をパースするときのロジックが
変更され、正しくパース出来た数値が引数の末尾としてパースされた場合、その値が
オプションの値として保存されていませんでした。
L<[perl #125381]|https://rt.perl.org/Ticket/Display.html?id=125381>

=item *

=begin original

Warning fatality is now ignored when rewinding the stack.  This prevents
infinite recursion when the now fatal error also causes rewinding of the stack.
L<[perl #123398]|https://rt.perl.org/Ticket/Display.html?id=123398>

=end original

警告の致命的エラー化は、スタックを巻き戻すときには無視されるようになりました。
これにより、致命的エラーがスタックを巻き戻すときの無限ループを防ぎます。
L<[perl #123398]|https://rt.perl.org/Ticket/Display.html?id=123398>

=item *

=begin original

A crash with C<< %::=(); J->${\"::"} >> has been fixed.
L<[perl #125541]|https://rt.perl.org/Ticket/Display.html?id=125541>

=end original

C<< %::=(); J->${\"::"} >> でのクラッシュは修正されました。
L<[perl #125541]|https://rt.perl.org/Ticket/Display.html?id=125541>

=item *

=begin original

Nested quantifiers such as C</.{1}??/> should cause perl to throw a fatal
error, but were being silently accepted since Perl 5.20.0.  This has been
fixed.
L<[perl #126253]|https://rt.perl.org/Ticket/Display.html?id=126253>

=end original

C</.{1}??/> のようなネストした量指定子は致命的エラーを投げるべきですが、
Perl 5.20.0 から暗黙に受け入れていました。
これは修正されました。
L<[perl #126253]|https://rt.perl.org/Ticket/Display.html?id=126253>

=item *

=begin original

Regular expression sequences such as C</(?i/> (and similarly with other
recognized flags or combination of flags) should cause perl to throw a fatal
error, but were being silently accepted since Perl 5.18.0.  This has been
fixed.
L<[perl #126178]|https://rt.perl.org/Ticket/Display.html?id=126178>

=end original

C</(?i/> (および同様にフラグまたはフラグの組み合わせとして認識されるもの)
のような正規表現並びは致命的エラーを投げるべきですが、Perl 5.18.0 から暗黙に
受け入れていました。
これは修正されました。
L<[perl #126178]|https://rt.perl.org/Ticket/Display.html?id=126178>

=item *

=begin original

A bug in hexadecimal floating point literal support meant that high-order bits
could be lost in cases where mantissa overflow was caused by too many trailing
zeros in the fractional part.  This has been fixed.
L<[perl #126582]|https://rt.perl.org/Ticket/Display.html?id=126582>

=end original

16 進浮動小数点数対応において、小数部分の末尾のゼロが多すぎることによって
仮数部がオーバーフローし、上位ビットが失われることがあるバグがありました。
これは修正されました。
L<[perl #126582]|https://rt.perl.org/Ticket/Display.html?id=126582>

=item *

=begin original

Another hexadecimal floating point bug, causing low-order bits to be lost in
cases where the last hexadecimal digit of the mantissa has bits straddling the
limit of the number of bits allowed for the mantissa, has also been fixed.
L<[perl #126586]|https://rt.perl.org/Ticket/Display.html?id=126586>

=end original

もう一つの 16 進浮動小数点数のバグとして、仮数部の最後の 16 進数が、仮数部に
認められているビット数の制限をまたぐようなビットを持っている場合、下位ビットが
失われることがあるというバグがありましたが、これも修正されました。
L<[perl #126586]|https://rt.perl.org/Ticket/Display.html?id=126586>

=item *

=begin original

Further hexadecimal floating point bugs have been fixed: In some circumstances,
the C<%a> format specifier could variously lose the sign of the negative zero,
fail to display zeros after the radix point with the requested precision, or
even lose the radix point after the leftmost hexadecimal digit completely.

=end original

さらなる 16 進浮動小数点数のバグが修正されました: 場合によっては、
C<%a> フォーマット指定子が負のゼロの符号を失ったり、指定された精度で小数点の
後にゼロを表示するのに失敗したり、さらには一番左の 16 進数の後の小数点を
完全に失ったりすることがありました。

=item *

=begin original

A crash caused by incomplete expressions within C<< /(?[ ])/ >> (e.g.
C<< /(?[[0]+()+])/ >>) has been fixed.
L<[perl #126615]|https://rt.perl.org/Ticket/Display.html?id=126615>

=end original

(C<< /(?[[0]+()+])/ >> のような) C<< /(?[ ])/ >> の中の不完全な表現による
クラッシュが修正されました。
L<[perl #126615]|https://rt.perl.org/Ticket/Display.html?id=126615>

=back

=head1 Acknowledgements

=begin original

Perl 5.22.1 represents approximately 6 months of development since Perl 5.22.0
and contains approximately 19,000 lines of changes across 130 files from 27
authors.

=end original

Perl 5.22.1 は、Perl 5.22.0 以降、27 人の作者によって、
130 のファイルに約 19,000 行の変更を加えて、
約 6 ヶ月開発されてきました。

=begin original

Excluding auto-generated files, documentation and release tools, there were
approximately 1,700 lines of changes to 44 .pm, .t, .c and .h files.

=end original

自動生成ファイル、文書、リリースツールを除くと、44 の .pm, .t, .c,
.h ファイルに約 1,700 行の変更を加えました。

=begin original

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.22.1:

=end original

Perl は、活気のあるユーザーと開発者のコミュニティのおかげで 20 年を超えて
繁栄しています。
以下の人々が、Perl 5.22.1 になるための改良に貢献したことが分かっています:

Aaron Crane, Abigail, Andy Broad, Aristotle Pagaltzis, Chase Whitener, Chris
E<39>BinGOsE<39> Williams, Craig A. Berry, Daniel Dragan, David Mitchell, Father
Chrysostomos, Herbert Breunung, Hugo van der Sanden, James E Keenan, Jan
Dubois, Jarkko Hietaniemi, Karen Etheridge, Karl Williamson, Lukas Mai, Matthew
Horsfall, Peter Martini, Rafael Garcia-Suarez, Ricardo Signes, Shlomi Fish,
Sisyphus, Steve Hay, Tony Cook, Victor Adam.

=begin original

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

=end original

これはバージョンコントロール履歴から自動的に生成しているので、ほぼ確実に
不完全です。
特に、Perl バグトラッカーに問題を報告をしてくれた (とてもありがたい)貢献者の
名前を含んでいません。

=begin original

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

=end original

このバージョンに含まれている変更の多くは、Perl コアに含まれている CPAN
モジュール由来のものです。
私たちは Perl の発展を助けている CPAN コミュニティ全体に感謝します。

=begin original

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=end original

全ての Perl の歴史的な貢献者のより完全な一覧については、どうか Perl ソース
配布に含まれている F<AUTHORS> を参照してください。

=head1 Reporting Bugs

(バグ報告)

=begin original

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.

=end original

もしバグと思われるものを見つけたら、comp.lang.perl.misc ニュースグループに
最近投稿された記事や https://rt.perl.org/ にある perl バグ
データベースを確認してください。
Perl ホームページ、http://www.perl.org/ にも情報があります。

=begin original

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

=end original

もしまだ報告されていないバグだと確信したら、そのリリースに含まれている
L<perlbug> プログラムを実行してください。
バグの再現スクリプトを十分小さく、しかし有効なコードに切りつめることを
意識してください。
バグレポートは C<perl -V> の出力と一緒に perlbug@perl.org に送られ
Perl porting チームによって解析されます。

=begin original

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=end original

もし報告しようとしているバグがセキュリティに関するもので、公開されている
メーリングリストに送るのが不適切なものなら、
perl5-security-report@perl.org に送ってください。
このアドレスは、問題の影響を評価し、解決法を見つけ、Perl が対応している
全てのプラットフォームで問題を軽減または解決するパッチをリリースするのを
助けることが出来る、全てのコアコミッタが参加している非公開の
メーリングリストになっています。
このアドレスは、独自に CPAN で配布されているモジュールではなく、
Perl コアのセキュリティ問題だけに使ってください。

=head1 SEE ALSO

=begin original

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

=end original

変更点の完全な詳細を見る方法については F<Changes> ファイル。

=begin original

The F<INSTALL> file for how to build Perl.

=end original

Perl のビルド方法については F<INSTALL> ファイル。

=begin original

The F<README> file for general stuff.

=end original

一般的なことについては F<README> ファイル。

=begin original

The F<Artistic> and F<Copying> files for copyright information.

=end original

著作権情報については F<Artistic> 及び F<Copying> ファイル。

=begin meta

Translate: SHIRAKATA Kentaro <argrath@ub32.org>
Status: completed

=end meta

=cut

